<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="ee4a8b8f-dc59-45da-8f3e-4a796ecf6af8" activeEnvironment="Default" name="package-booking-service" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" lastOpened="2017-03-16T15:22:48.206+01:00" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="441f3fd4-0956-404e-82c9-48b90e92c60e" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8082" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://10.185.225.192:8080/</con:endpoint><con:endpoint>http://192.168.209.108:8082/</con:endpoint><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:endpoint>http://192.168.209.96:8082/</con:endpoint><con:endpoint>http://localhost:8082</con:endpoint></con:endpoints><con:resource name="Promocode" path="/packagebookingservice/1.0/prebookings/{preBookingId}/promocodes/{promocodeId}" id="b4ce78df-84a8-4156-945c-6465f6f2f1fe"><con:settings/><con:parameters><con:parameter><con:name>promocodeId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>preBookingId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Validate/Revalidate Promocodes" id="9f12ea39-1dee-4391-9608-56381ff804b0" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 405 500 404 422 409 401 403</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings">preb:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings">preb:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="cb6fdde6-eff3-409d-ac7c-29a812662c2e" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/promocodes/promocodeId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>promocodeId</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:request></con:method><con:method name="POST /packagebookingservice/1.0/bookings/search" id="f3dcddee-cedb-4bdb-9d00-edd4ea5281c3" method="POST"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:ns="http://192.168.209.13/packagebookingservice/1.0/promocodes/1">ns:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="269ec218-52fa-4c84-8f14-13150e0f8f46" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/promocodes/1</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value=""/>
  <con:entry key="whiteLabelId" value="easyjet"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>promocodeId</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="GET Retrieves Prebooking and check" path="/packagebookingservice/1.0/prebookings/{preBookingId}" id="837d895d-7d55-4174-9706-b1915ca68af3"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>102</con:value><con:style>TEMPLATE</con:style><con:default>102</con:default></con:parameter></con:parameters><con:method name="Retrieves Prebooking and check" id="cce7d076-9827-4d49-9262-3eb2cb42649e" method="GET"><con:settings/><con:parameters><con:parameter><con:name>content-type</con:name><con:value>application/json</con:value><con:style>HEADER</con:style><con:default>application/json</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500 405 404 422</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings/preBookingId">preb:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings/preBookingId">preb:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="444ccd9d-ddf2-420f-be60-9245fe9e831a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/preBookingId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="125"/>
  <con:entry key="whiteLabelId" value="easyjet"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>content-type</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Confirmation and Payment" path="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" id="be52d351-a77c-43bf-99b8-f2a190010d65"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Confirm a reservation" id="3830c8f5-0a95-4b1d-bc72-494f86e068db" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>price</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>description</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>cardFee</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ptotalPriceWithFee</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deposit</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pdepositCardFee</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pcodPaymentMethod</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pstrDescription</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pcodPaymentType</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ppctPayment</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 405 500 404 415 422 409 503 401 403</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings/">preb:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200 208</con:status><con:params/><con:element xmlns:preb="http://PERALES/packagebookingservice/1.0/prebookings/">preb:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="ea834c6b-5e24-4780-b00f-b1ba18e54dde" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="kkk"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value=""/>
  <con:entry key="whiteLabelId" value="easyjet"/>
  <con:entry key="preBookingId" value="100"/>
</con:parameters><con:parameterOrder><con:entry>ptotalPriceWithFee</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>cardFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Add seat plan" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" id="ee6cef43-4aed-4965-8f80-71f94510700e"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="adds a seat to the flight" id="ebebc98a-bbd1-4bea-845f-e8dc7abd4c3c" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 404 400 405 422 503</con:status><con:params/><con:element xmlns:seat="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/">seat:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:seat="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/">seat:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"isAisleSeat" : true,
	"isAvailable" : true,
	"isAvailableForChild" : false,
	"isAvailableForInfant" : false,
	"isExitRow" : false,
	"isMiddleSeat" : true,
	"isWindowSeat" : false,
	"isDistressedSeat" : true,
	"priceBand" : "regular",
	"priceBandId" :1,
	"seatAccess" : "acc",
	"flightNumber" : "8274",
	"seatNumber" : "33F"
}]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="preBookingId" value="100"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="flightNumber" value="8621"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="GET flightRules" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flightRules/{flightNumber}" id="ee6cef43-4aed-4965-8f80-71f94510700e"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>100</con:value><con:style>TEMPLATE</con:style><con:default>100</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value>8274</con:value><con:style>TEMPLATE</con:style><con:default>8274</con:default></con:parameter></con:parameters><con:method name="Retrieve Flight Rules" id="f620c249-05a7-497d-adc3-9ade98065ccd" method="GET"><con:settings/><con:parameters><con:parameter><con:name>whitelabelID</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Content-Type</con:name><con:value>application/json</con:value><con:style>HEADER</con:style><con:default>application/json</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 500 422 405 415 404</con:status><con:params/><con:element xmlns:flig="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flightsCharges">flig:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:flig="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flightsCharges">flig:Response</con:element></con:representation><con:request name="Get bag Rules &amp; sportsEquipements" id="3bf64d5d-7857-46c5-9389-99c218943591" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flightsCharges</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="preBookingId" value="125"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelID</con:entry><con:entry>Accept-Language</con:entry><con:entry>Content-Type</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="GET List ancillaries charges for the flight" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" id="d3ba256d-6519-40b0-b308-e295c99e0a3b"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value>flight</con:value><con:style>TEMPLATE</con:style><con:default>flight</con:default></con:parameter></con:parameters><con:method name="return the list of ancilleries with prices avaialblefor the flight" id="1051f672-f8bd-40e1-8df9-de561fabe02a" method="GET"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 405 404 400 415 503 401</con:status><con:params/><con:element xmlns:anc="http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries">anc:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="100" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="100"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Add ancillaries" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" id="6e0e507e-a485-4f84-860f-7f90eb0352a3"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value>8621</con:value><con:style>TEMPLATE</con:style><con:default>8621</con:default></con:parameter></con:parameters><con:method name="Method 1" id="b4124a58-063b-4051-927b-748250d4a140" method="POST"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 405 500 400 422</con:status><con:params/><con:element xmlns:sec="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC">sec:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sec="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC">sec:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
 {  "quantity" : 1,
    "type" : "Fee",
    "segmentReference" : 1,
    "price" : 32.10,
    "code" : "SEC",
    "description" : "test"
  }
 
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="100"/>
  <con:entry key="flightNumber" value="8621"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Return Seat Plan" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" id="f2f14091-73e2-4f0b-a8f1-176bf9cc4801"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value>flightNumber</con:value><con:style>TEMPLATE</con:style><con:default>flightNumber</con:default></con:parameter></con:parameters><con:method name="Method 1" id="34dfb700-0d5b-4692-9d01-1207adf3651a" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 500 400 404</con:status><con:params/><con:element xmlns:seat="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats">seat:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:seat="http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats">seat:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Returns seat plan of the flight. Seats available/no available and prices" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="preBookingId" value="100martes01"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Delete acillary selected" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries/{code}" id="35a93271-eb8f-4121-8873-8af7ea1a0e6a"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>code</con:name><con:value>jjj</con:value><con:style>TEMPLATE</con:style><con:default>jjj</con:default></con:parameter></con:parameters><con:method name="Method 1" id="88e1a7a8-65d3-448b-aaf5-179ec2647699" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 400 404 405 409</con:status><con:params/><con:element xmlns:ns="http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13">ns:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4aca7994-9b11-442b-9a62-4742734a84fa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="code" value="8621-LUG-1"/>
  <con:entry key="preBookingId" value="100"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="8621"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>code</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Delete seat selected" path="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" id="0cadc3c9-8594-4e5b-92f1-fc2d9dd6d2ff"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter><con:parameter><con:name>code</con:name><con:value>1AAAAAA</con:value><con:style>TEMPLATE</con:style><con:default>1AAAAAA</con:default></con:parameter><con:parameter><con:name>flightNumber</con:name><con:value>8274</con:value><con:style>TEMPLATE</con:style><con:default>8274</con:default></con:parameter></con:parameters><con:method name="Method 1" id="d3cc8c34-352d-4dda-a513-769b04ea21e9" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 400 404 405</con:status><con:params/><con:element xmlns:seat="http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId">seat:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="code" value="8622-9C"/>
  <con:entry key="preBookingId" value="129JVtestEUR01"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="8622"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Add Transfers to the prebooking" path="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" id="31bcc7fe-81ab-4fb3-9629-f23acde53023"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter></con:parameters><con:method name="Add transfer" id="f1a769a4-fdf3-4bbb-b424-340edd213f01" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>CAT</con:value><con:style>HEADER</con:style><con:default>CAT</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>availToken</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>dateFrom</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>price</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>currencyProvider</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 400 405</con:status><con:params/><con:element xmlns:tran="http://localhost/packagebookingservice/1.0/prebookings/117/transfers">tran:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tran="http://localhost/packagebookingservice/1.0/prebookings/117/transfers">tran:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
      "price": 89.05,
      "code": null,
      "description": null,
      "productMarkup": null,
      "status": null,
      "subStatus": null,
      "additionalCost": [],
      "adultCount": 5,
      "availToken": "Eh9nhu7louxM5j5Axg8c+Q==",
      "cancelationPolicies": [      {
         "amount": 89.05,
         "from": null,
         "time": null,
         "date": "2017-01-02"
      }],
      "childCount": 0,
      "contractList": [      {
         "comments": [],
         "incomingOffice": 164,
         "name": "TO LON TR 17",
         "sequence": null
      }],
      "dateFrom": "2017-01-04T17:25:00.000+0000",
      "destination": [      {
         "address": null,
         "bestMatchOrder": null,
         "code": "42616",
         "description": null,
         "distance": null,
         "fs": null,
         "giata": null,
         "iata": null,
         "icao": null,
         "latitude": null,
         "longitude": null,
         "name": "The Cranley",
         "number": null,
         "pickUpType": "HOTEL",
         "terminalType": null,
         "town": null,
         "tti": null,
         "zip": null,
         "zoneCode": "CENTR LOND",
         "zoneName": null,
         "date": null,
         "time": null,
         "order": null
      }],
      "estimatedDuration": null,
      "guestList": [],
      "infantCount": null,
      "modificationPolicyList": [],
      "pickUp": [      {
         "address": null,
         "bestMatchOrder": null,
         "code": "LGW",
         "description": null,
         "distance": null,
         "fs": null,
         "giata": null,
         "iata": null,
         "icao": null,
         "latitude": null,
         "longitude": null,
         "name": "London, Gatwick Airport",
         "number": null,
         "pickUpType": "AIRPORT",
         "terminalType": "A",
         "town": null,
         "tti": null,
         "zip": null,
         "zoneCode": "GATWICK",
         "zoneName": null,
         "date": null,
         "time": null,
         "order": null
      }],
      "transferPickUpInfo": "Once you have collected your luggage, a staff member will be waiting for you at the Arrivals Hall with a sign with your name on it. In case of emergency only, please call our local supplier on 0044 7733 448 902. ",
      "productTypeCode": null,
      "sharedPickupLocations": [],
      "specificaton":       {
         "generalInfo":          [
                        {
               "description": "1 piece of baggage allowed per person",
               "detailedDescription": null,
               "bulletPointId": "BA",
               "metric": null,
               "order": 9,
               "type": null,
               "value": null
            },
                        {
               "description": "1 item of hand baggage allowed per person",
               "detailedDescription": null,
               "bulletPointId": "BAHB",
               "metric": null,
               "order": 10,
               "type": null,
               "value": null
            }
         ],
         "productCode": "STND",
         "productName": "Standard",
         "serviceCode": "SHRD",
         "serviceName": "Shared - Shuttle",
         "vehicleCode": "MNBS",
         "vehicleName": "Minibus"
      },
      "suplements": [],
      "commissionPercentage": null,
      "supplierName": null,
      "supplierVatCode": null,
      "time": null,
      "transferInfo":       {
         "code": "0|0|2",
         "descriptionList":          [
                        {
               "description": "With other passengers",
               "languageCode": "EN",
               "type": "GENERAL"
            },
                        {
               "description": "Standard product type",
               "languageCode": "EN",
               "type": "PRODUCT"
            },
                        {
               "description": "Minibus",
               "languageCode": "EN",
               "type": "VEHICLE"
            }
         ],
         "imageList":          [
                        {
               "type": "S",
               "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-mnbs.png"
            },
                        {
               "type": "M",
               "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-mnbs.png"
            },
                        {
               "type": "L",
               "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-mnbs.png"
            },
                        {
               "type": "XL",
               "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-mnbs.png"
            }
         ],
         "type": "B",
         "vehicleType": "S",
         "transferSpecificContent":          {
            "frequency": [],
            "genericGidelines":             [
                              {
                  "description": "CAN'T FIND DRIVER",
                  "detailedDescription": "In the event of being unable to locate the driver, please call the emergency number indicated in this voucher.",
                  "bulletPointId": "DRVR",
                  "metric": null,
                  "order": null,
                  "type": null,
                  "value": null
               },
                              {
                  "description": "VOUCHER ",
                  "detailedDescription": "Remember to bring this voucher and valid photo ID with you",
                  "bulletPointId": "VOUC",
                  "metric": null,
                  "order": null,
                  "type": null,
                  "value": null
               },
                              {
                  "description": "Domestic: Total Driver Waiting Time 60 min.",
                  "detailedDescription": "Domestic Arrivals: For this service, the driver will wait a total of 60 min. (instead of the standard driver waiting time mentioned)",
                  "bulletPointId": "TDWT60",
                  "metric": null,
                  "order": null,
                  "type": null,
                  "value": null
               },
                              {
                  "description": "International: Total Driver waiting time 120 min.",
                  "detailedDescription": "International Arrivals: For this service, the driver will wait a total of 120 min. (instead of the standard driver waiting time mentioned)",
                  "bulletPointId": "TDWTI120",
                  "metric": null,
                  "order": null,
                  "type": null,
                  "value": null
               },
                              {
                  "description": "CHILDBOOSTER / BABY SEAT",
                  "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                  "bulletPointId": "CBBS",
                  "metric": null,
                  "order": null,
                  "type": null,
                  "value": null
               }
            ],
            "specificContentId": "457",
            "maxNumberStops": null,
            "maxWaitingTime": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes",
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternationalType": 90,
            "pickupStops": [],
            "specificInfo": [],
            "bulletPointType": null
         }
      },
      "transferType": "IN",
      "spui": null,
      "arrivalTravelInfo":       {
         "departInfo": null,
         "arrivalInfo":          {
            "address": null,
            "bestMatchOrder": null,
            "code": "LGW",
            "description": null,
            "distance": null,
            "fs": null,
            "giata": null,
            "iata": null,
            "icao": null,
            "latitude": null,
            "longitude": null,
            "name": "London, Gatwick Airport",
            "number": null,
            "pickUpType": "AIRPORT",
            "terminalType": "A",
            "town": null,
            "tti": null,
            "zip": null,
            "zoneCode": "GATWICK",
            "zoneName": null,
            "date": null,
            "time": null,
            "order": null
         },
         "travelNumber": null,
         "trainNumber": null,
         "travelCompanyName": null,
         "trainCompanyName": null,
         "comment": null,
         "vesselName": null
      },
      "departureTravelInfo": null,
      "contactInfoList": null,
      "webInfo": null,
      "daysBeforeConsultingWeb": null,
      "currency": "GBP",
      "totalAmount": 89.05,
      "sellingPriceMandatory": "N",
      "sellingPrice": 89.05,
      "retailPrice": 89.05,
      "transferStatus": null,
      "timeBeforeConsultingWeb": null,
      "returnContentsEnum": null
   }</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="preBookingId" value="100"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="GET transfers" path="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" id="47edf057-7d43-4f7d-a1f9-16f8f911b3bc"><con:settings/><con:parameters><con:parameter><con:name>prebookingCode</con:name><con:value>prebookingCode</con:value><con:style>TEMPLATE</con:style><con:default>prebookingCode</con:default></con:parameter></con:parameters><con:method name="Get Transfers" id="b32cee81-cbad-4305-822d-92d5cbca10df" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>CAT</con:value><con:style>HEADER</con:style><con:default>CAT</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>content-type</con:name><con:value>application/json</con:value><con:style>HEADER</con:style><con:default>application/json</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 415 404</con:status><con:params/><con:element xmlns:tran="http://PERALES/packagebookingservice/1.0/prebookings/101/transfers">tran:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="prebookingCode" value="101"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="DELETE transfers" path="/packagebookingservice/1.0/prebookings/{preBookingCode}/transfers/{transferCode}" id="47433999-24bb-4996-ab27-fb5b92d3fcb0"><con:settings/><con:parameters><con:parameter><con:name>preBookingCode</con:name><con:value>preBookingCode</con:value><con:style>TEMPLATE</con:style><con:default>preBookingCode</con:default></con:parameter><con:parameter><con:name>transferCode</con:name><con:value>transferCode</con:value><con:style>TEMPLATE</con:style><con:default>transferCode</con:default></con:parameter></con:parameters><con:method name="Method 1" id="76f7690f-5104-425d-a119-af21202f260d" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 500 404</con:status><con:params/><con:element xmlns:tran="http://localhost/packagebookingservice/1.0/prebookings/preBookingCode/transfers/transferCode">tran:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tran="http://localhost/packagebookingservice/1.0/prebookings/preBookingCode/transfers/transferCode">tran:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="da704cb8-6080-4871-b31b-393fc39b9670" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingCode/transfers/transferCode</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="transferCode" value="1"/>
  <con:entry key="preBookingCode" value="100"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingCode</con:entry><con:entry>transferCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="GET minSeatPrice" path="/packagebookingservice/1.0/prebookings/{prebookingId}/flights/minSeatPrice" id="e7b0f180-5a0c-49aa-b412-25e45f4048db"><con:settings/><con:parameters><con:parameter><con:name>prebookingId</con:name><con:value>100</con:value><con:style>TEMPLATE</con:style><con:default>100</con:default></con:parameter></con:parameters><con:method name="Method 1" id="cabbcdb7-7655-4814-9b16-cec8dc183540" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Content-Type</con:name><con:value>application/json</con:value><con:style>HEADER</con:style><con:default>application/json</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>415 500 404</con:status><con:params/><con:element xmlns:min="http://localhost/packagebookingservice/1.0/prebookings/prebookingCode/flight/flightNumber/minSeatPrice">min:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:min="http://localhost/packagebookingservice/1.0/prebookings/prebookingCode/flight/flightNumber/minSeatPrice">min:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="e70b4cec-1dbb-45e0-b073-d5228967afc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/prebookingCode/flight/flightNumber/minSeatPrice</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept-Language" value="en" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingId</con:entry><con:entry>Content-Type</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Create prebookings" path="/packagebookingservice/1.0/prebookings" id="f276ee46-3626-4a5e-93d4-ff10a72927f7"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="c97fb62a-fdf9-4ae8-af0c-974ef4c305d3" method="POST"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 400 422 405 409 503 404 401</con:status><con:params/><con:element xmlns:preb="http://localhost/packagebookingservice/1.0/prebookings">preb:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200 208</con:status><con:params/><con:element xmlns:preb="http://localhost/packagebookingservice/1.0/prebookings">preb:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="easyJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>user</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Render" path="/packagebookingservice/1.0/bookings/{bookingId}/render" id="54ee388c-430c-4303-9bfe-976ba950b082"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="d3493090-6f4c-438a-9b77-2657273752db" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/pdf;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>406</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="97c5c099-4166-40a2-9cd4-cbca0b0e367a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/bookings/bookingId/render</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="101"/>
  <con:entry key="whiteLabelId" value="easyJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Send" path="/packagebookingservice/1.0/bookings/{bookingId}/send" id="1f537991-534e-4926-8213-ad3b13365327"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="bce7da3f-55f5-4be5-bc1d-d914ab5c76af" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405 500 400 404 422</con:status><con:params/><con:element xmlns:send="http://localhost/packagebookingservice/1.0/bookings/100/send">send:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="e936af8e-f271-41b9-8d70-03f15dd9ef54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>dfzsdf</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/100/send</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100"/>
  <con:entry key="whiteLabelId" value="easyJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Retrieves list of bookings" path="/packagebookingservice/1.0/bookings/" id="585489d0-0d45-4bb3-a6d4-0d851aa18cb1"><con:settings/><con:parameters/><con:method name="Method 1" id="846071ee-b433-492d-bce0-05da2f6c6310" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 422</con:status><con:params/><con:element xmlns:book="http://192.168.209.13/packagebookingservice/1.0/bookings/">book:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="27459ba4-a8fa-4645-8ed9-ccd0a1b83b2e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="easyJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Return a list of booking filtered" path="/packagebookingservice/1.0/bookings/search" id="200c3b11-e721-4752-987d-a29c6ba2a703"><con:settings/><con:parameters/><con:method name="Method 1" id="472aa1a4-f872-4847-b3c4-43c603e1f6a7" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>422 400 500</con:status><con:params/><con:element xmlns:sear="http://localhost/packagebookingservice/1.0/bookings/search">sear:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>userIdentifier</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Retrieves a booking" path="/packagebookingservice/1.0/bookings/{bookingId}" id="26ea9bb4-4d62-46a7-a656-b066b9637752"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="760564b1-ac24-49dc-bc7e-0d3ba3459dff" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>422 404</con:status><con:params/><con:element xmlns:book="http://localhost/packagebookingservice/1.0/bookings/bookingId">book:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:book="http://localhost/packagebookingservice/1.0/bookings/bookingId">book:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Updates booking" path="/packagebookingservice/1.0/bookings/{bookingId}" id="d9fe6c21-d33b-401b-a8d4-665b7e870b12"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="2db46572-dcb0-4bf2-9054-f7af97de0b1e" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:book="http://localhost/packagebookingservice/1.0/bookings/bookingId">book:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="badf6501-1992-4ad2-a46a-bc5286e21cb0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "100 - Prebooking ( 1pax Miss 1way ) to LONDON",
	"client": {
		"comments": [{
			"commentText": "Vacaciones inviernos",
			"commentType": "F"
		}],
		"addresses": [{
			"city": "Barcelona",
			"country" : "${#Project#market}",
			"countryName": "SPAIN",
			"location": "office",
			"mail": "ammarcilla@gfi.es",
			"primary": true,
			"stateProvince": "Mataro",
			"street": "C/Passeig de Gracia 44",
			"streetAdditional": "C/Passeig de Gracia 46",
			"addressCode": "ssss",
			"telephones": [{
				"number": "555",
				"type": "home"
			}],
			"zipCode": "08015"
		},
		{
			"city": "MADRID",
			"country" : "${#Project#market}",
			"countryName": "SPAIN",
			"location": "office",
			"mail": "testmadrid@gfi.es",
			"primary": false,
			"stateProvince": "Fuenjirola",
			"street": "C/ Paseo 44",
			"streetAdditional": "C/ Paseo 46",
			"addressCode": "ffff",
			"telephones": [{
				"number": "555",
				"type": "home"
			}],
			"zipCode": "08015"
		}],
		"dateOfBirth": "1983-12-26",
		"firstName": "Anna",
		"gender": "Male",
		"lastName": "Marcilla",
		"middleName": "MA",
		"travelDocumentData": {
			"docCustomerName": "ANNA MARCILLA",
			"docId": "87654321X",
			"docIssueAuthority": "string",
			"docIssueLocation": "BARCELONA",
			"docLimitations": "string",
			"docType": "DNI",
			"effectiveDate": "2000-06-28",
			"expireDate": "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency": {
		"company": null,
		"office": null,
		"userAgent": null
	},
	"paxes": [{
		"addresses": [{
			"city": "BARCELONA",
			"country" : "${#Project#market}",
			"countryName": "SPAIN",
			"location": "office",
			"mail": "mail@gfi.es",
			"primary": true,
			"stateProvince": "MATARO",
			"street": "ARAGO",
			"streetAdditional": 122,
			"telephones": [{
				"type": "fax",
				"number": "66666666666"
			},
			{
				"type": "mobile",
				"number": "99999999999"
			},
			{
				"type": "fax",
				"number": "88888888888"
			}],
			"zipCode": "00000"
		},
		{
			"city": "SLIEMA",
			"country": "MALTA",
			"countryName": "MALTA",
			"location": "office",
			"mail": "mail2@gfi.es",
			"primary": false,
			"stateProvince": "SLIEMA",
			"street": "MERCIEQA",
			"streetAdditional": 123,
			"telephones": [{
				"type": "fax",
				"number": "11111111"
			}],
			"zipCode": "11111"
		}],
		"dateOfBirth": "1975-06-28",
		"age": null,
		"personType": "AD",
		"firstName": "Annaw",
		"gender": "Female",
		"lastName": "${#Project#paxesLastName}",
		"middleName": "MA",
		"travelDocumentData": {
			"docCustomerName": "ANNA M MARCILLA",
			"docId": "87654321X",
			"docIssueAuthority": "BARCELONA",
			"docIssueLocation": "BARCELONA",
			"docLimitations": "string",
			"docType": "DNI",
			"effectiveDate": "2010-06-28",
			"expireDate": "2020-06-28"
		},
		"hasInfant": false,
		"salutationType": "Miss",
		"paxNumber": 1
	}],
	"market": "${#Project#market}",
	"category": "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"purchaseToken": null,
	"ancillaries": [],
	"flightHotelPackage": {
		"code": "string",
		"description": "100 - Prebooking ( 1pax Miss 1way ) to LONDON",
		"productMarkup": null,
		"status": "Active",
		"subStatus": null,
		"flights": [{
			"code": "string",
			"description": "string",
			"productMarkup": null,
			"status": "Active",
			"subStatus": null,
			"itineraries": [{
				"segments": [{
					"segmentNumber": 0,
					"airline": "${#Project#airline}",
					"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
					"departureDateTime": "${#Project#departureDateTime_ida}",
					"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
					"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
					"bookingClass": "Y",
					"flightNumber": "${#Project#flightNumber_ida}",
					"flightCode": null,
					"flightLabel": null
				}]
			}]
		}],
		"hotels": [{
			"code": "string",
			"description": "EL MEJOR HOTEL",
			"productMarkup": null,
			"arrivalDate": "2016-06-28",
			"bookingCode": "FFFFFF",
			"destination": "LGW",
			"hotelCodes": [],
			"hotelProvider": "Hotel Beds",
			"lengthOfStay": 30,
			"price": 600,
			"rooms": [{
				"boardCode": "Full Board",
				"bookingCode": 1,
				"extraBeds": 0,
				"personAssignaments": [1],
				"roomCode": "895",
				"status": "Active",
				"subStatus": null,
				"TOMABookingCode": "string"
			}],
			"hotelStatus": "Active",
			"hotelSubStatus": null,
			"reference": "Certain",
			"hotelGroup": null
		}],
		"programType": "string",
		"tourOperator": "string",
		"travelType": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_ida}",
	"origin": "MAD",
	"destination": "LGW",
	"formOfPayment": {
		"paymentType": "CC",
		"creditCardVendorCode": "VI"
	}
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="user" value="admin"/>
  <con:entry key="bookingId" value="100"/>
  <con:entry key="whiteLabelId" value="easyjet"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Cancel a booking" path="/packagebookingservice/1.0/bookings/{bookingId}/cancel" id="22941f64-5726-40a3-8d19-8b6d7202efda"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>108</con:value><con:style>TEMPLATE</con:style><con:default>108</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="c1211acf-57e1-4351-88be-c9785895af54" method="GET"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 500 422</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:can="http://localhost/packagebookingservice/1.0/bookings/cancel">can:Response</con:element></con:representation><con:request name="Request 1" id="0373da45-e04c-462b-b6ac-773274066489" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings//cancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Cancel a flight" path="/packagebookingservice/1.0/bookings/{bookingId}/flight/cancel" id="adcb50be-e01c-461f-8759-4ba7ed72ca39"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="8497f94e-3599-4e05-b3e7-76972773b521" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element xmlns:can="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/flights/flightId/cancel">can:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:can="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/flights/flightId/cancel">can:Response</con:element></con:representation><con:request name="Request 1" id="7ef33132-1bb1-479b-b5a6-d99bbd806eae" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/flights/flightId/cancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100k01"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Cancel a transfer" path="/packagebookingservice/1.0/bookings/{bookingId}/transfers/cancel" id="7e773c76-71ca-4540-85c4-2a3468545813"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="95a07aa7-406c-42b2-afd7-8ad15c5b0931" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:can="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/transfers/cancel">can:Fault</con:element></con:representation><con:request name="Request 1" id="e07e3854-4334-49f2-b6c3-fc235516c12d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/transfers/cancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Precancel booking" path="/packagebookingservice/1.0/bookings/{bookingId}/precancel" id="b73ee189-f9db-4895-b4a2-f054e52a3997"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>100</con:value><con:style>TEMPLATE</con:style><con:default>100</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="44c96dc1-e5a6-4ead-95e2-cb9e6834601c" method="GET"><con:settings/><con:parameters><con:parameter><con:name>whiteLabelId</con:name><con:value>easyjet</con:value><con:style>HEADER</con:style><con:default>easyjet</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 503 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="a8cb2df2-9aca-4b22-b56c-d824598ffeff" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings//precancel100</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="en"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Precancel flight" path="/packagebookingservice/1.0/bookings/{bookingId}/flight/precancel" id="a2991d50-e509-4348-b2fe-666ed8b5430f"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="cb01c949-9166-49dc-b207-2dd1e0a7de3a" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>EASYJET</con:value><con:style>HEADER</con:style><con:default>EASYJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element xmlns:prec="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/flights/flightId/precancel">prec:Fault</con:element></con:representation><con:request name="Request 1" id="2fb5fed1-0b22-4c3d-9b74-2b4e9fd990cf" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/flights/flightId/precancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100k01"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Precancel transfer" path="/packagebookingservice/1.0/bookings/{bookingId}/transfers/precancel" id="fa7aa2a9-a77f-4c38-86ef-0808855e761f"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="6c9e90f0-4c2d-498c-9d14-3c97cc625315" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value>easyJET</con:value><con:style>HEADER</con:style><con:default>easyJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element xmlns:prec="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/transfers/precancel">prec:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:prec="http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/transfers/precancel">prec:Response</con:element></con:representation><con:request name="Request 1" id="ccad40a0-8a5d-487d-9425-44c1feb79b36" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/bookingId/transfers/precancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="100"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Pago recurrente" path="/packagebookingservice/1.0/prebookings/{preBookingId}/pay" id="2d6a0018-3a24-44c9-b4b1-0c76c290f1fb"><con:settings/><con:parameters><con:parameter><con:name>prebookingid</con:name><con:value>prebookingid</con:value><con:style>TEMPLATE</con:style><con:default>prebookingid</con:default></con:parameter><con:parameter><con:name>user</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whitelabelId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="12992aeb-d749-429c-a9b0-821adb5d781e" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:pay="http://192.168.209.95/prebookings/prebookingid/pay">pay:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6dcbb47b-ae88-4492-a563-4487a4f37ff1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "paymentCardInfo": {
    "paymentType": "CC",
    "creditCardVendorCode": "VI",
    "cardHolderName": "A Shopper",
    "cardFee": 10,
    "validThruMonth": "01",
    "validThruYear": "2020",
    "cardNumber": "4444333322221111",
    "billingAddress": {
      "address": "47A",
      "postalCode": "CB94BQ",
      "city": "Cambridge",
      "countryCode": "GB"
    }
  },
  "orderDetails": {
    "amount": "332.29",
    "description": "DESCRIPTION",
    "shopperEmail": "shopper@provider.com",
    "currency": "GBP"
  }
}</con:request><con:originalUri>http://192.168.209.95/prebookings/prebookingid/pay</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="prebookingid" value="102JVtestEUR01vi3"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>prebookingid</con:entry><con:entry>user</con:entry><con:entry>Accept-Language</con:entry><con:entry>whitelabelId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="precancelTranfer" path="/packagebookingservice/1.0/bookings/{bookingId}/transfers/precancel" id="3e954bec-cc42-47bb-9baf-6031c5ed0d55"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="d5363375-dd8b-42b0-9b2c-883a8484fcb7" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>EASYJET</con:value><con:style>HEADER</con:style><con:default>EASYJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>422 500</con:status><con:params/><con:element xmlns:prec="http://192.168.209.13/packagebookingservice/1.0/bookings/101JAG80/transfers/precancel">prec:Fault</con:element></con:representation><con:request name="Request 1" id="85d3c97a-437c-4b63-8d9c-3296a7f0c3b0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/101JAG80/transfers/precancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="101sabado02"/>
</con:parameters><con:parameterOrder><con:entry>bookingId</con:entry><con:entry>Accept-Language</con:entry><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="cancelTransfer" path="/packagebookingservice/1.0/bookings//transfers/cancel" id="1fcfd5c5-6cf8-4d62-8701-76e5cac70aca"><con:settings/><con:parameters/><con:method name="Method 1" id="3107a81f-88a5-48a1-b793-e2817f6f7c78" method="GET"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>100</con:value><con:style>HEADER</con:style><con:default>100</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>en</con:value><con:style>HEADER</con:style><con:default>en</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>EASYJET</con:value><con:style>HEADER</con:style><con:default>EASYJET</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>422 404</con:status><con:params/></con:representation><con:request name="Request 1" id="10ff6038-2fee-44af-bee5-22b172ac68f7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings//transfers/cancel</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept-Language" value="en" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>bookingId</con:entry><con:entry>Accept-Language</con:entry><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="refund" path="/packagebookingservice/1.0/prebookings/{preBookingId}/refund" id="8f36cba3-b316-4ea9-b321-4d11da356cb9"><con:settings/><con:parameters><con:parameter><con:name>preBookingId</con:name><con:value>preBookingId</con:value><con:style>TEMPLATE</con:style><con:default>preBookingId</con:default></con:parameter></con:parameters><con:method name="Method 1" id="03e7fa19-bc6b-4a92-9557-5a886ad0d42f" method="POST"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${#Project#token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${#Project#token}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>whiteLabelId</con:name><con:value>EASYJET</con:value><con:style>HEADER</con:style><con:default>EASYJET</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Accept-Language</con:name><con:value>EN</con:value><con:style>HEADER</con:style><con:default>EN</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:ref="http://192.168.209.95/packagebookingservice/1.0/prebookings/preBookingId/refund">ref:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="117b81b7-b8b6-4207-b52a-099637dd460e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "amountToRefund": 0,
  "currency": "string"
}</con:request><con:originalUri>http://192.168.209.95/packagebookingservice/1.0/prebookings/preBookingId/refund</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept-Language" value="EN" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>preBookingId</con:entry><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="{bookingId}" path="/packagebookingservice/1.0/bookings/{bookingId}" id="2ddef33e-59d9-4c22-9610-aff6f3be09e8"><con:settings/><con:parameters><con:parameter><con:name>bookingId</con:name><con:value>bookingId</con:value><con:style>TEMPLATE</con:style><con:default>bookingId</con:default></con:parameter><con:parameter><con:name>email</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="648d0c7f-42df-4c37-a98d-ce3c73d4bfd8" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:eur="http://192.168.209.95/packagebookingservice/1.0/bookings/102EUR03">eur:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:eur="http://192.168.209.95/packagebookingservice/1.0/bookings/102EUR03">eur:Fault</con:element></con:representation><con:request name="Request 1" id="fd1292b7-01d1-43da-b89e-d46bae1b8abf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.95/packagebookingservice/1.0/bookings/102EUR03</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="email" value="testbarcelona@gfi.es"/>
  <con:entry key="bookingId" value="102testSergimar1"/>
</con:parameters><con:parameterOrder><con:entry>bookingId</con:entry><con:entry>email</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="discounts" path="/packagebookingservice/1.0/prebookings/{bookingCode}/discounts" id="ff248724-9d78-490c-9d05-031c86d6e509"><con:settings/><con:parameters><con:parameter><con:name>bookingCode</con:name><con:value>bookingCode</con:value><con:style>TEMPLATE</con:style><con:default>bookingCode</con:default></con:parameter></con:parameters><con:method name="Method 1" id="54b2bae0-51b7-4f8f-83c3-eb83de8a35d7" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dis="http://192.168.209.95/packagebookingservice/1.0/prebookings/bookingCode/discounts">dis:Fault</con:element></con:representation><con:request name="Request 1" id="81f0de8c-6973-4a43-803c-f88277790a8a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "amtMarketPrice": 0,
  "bookingId": 0,
  "cardFee": 0,
  "codDiscountType": "string",
  "code": "string",
  "currencyProvider": "string",
  "description": "string",
  "discountLine": 0,
  "indMarkupDefault": false,
  "markupName": "string",
  "pairPrice": 0,
  "price": 0,
  "productMarkup": 0,
  "productSupplier": "PEAKWORK",
  "status": "PENDING",
  "subStatus": "DEPOSIT_PAID"
}</con:request><con:originalUri>http://192.168.209.95/packagebookingservice/1.0/prebookings/bookingCode/discounts</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:savedRecentRuns>1</con:savedRecentRuns><con:testSuite id="8a96da88-4780-44ab-835e-59454d30f0e2" name="Library"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="35930020-b304-4b3b-be1d-56793dee3969" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Seats" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Seats" id="1ec93ffe-fbe6-4064-a644-2c7c451cf0b8"><con:settings/><con:config><script>class Ancillaries
{
 def log
 def context
 def testRunner

 def preBookingId
 def flight
 def seat
 def person
 def url
 def code
 def browser
 def whiteLabelId = "EASYJET"
 def userIdentifier = "admin"
 def language = "en"

 // Class constructor with same case as Class name
 def Seats(logIn,contextIn,testRunnerIn)
 {
  this.log = logIn
  this.context = contextIn
  this.testRunner = testRunnerIn
 }

 def delete(preBookingId, flight, seat, person)
 {
 	 log.info "*************** START DELETE SEAT ***************"
      log.info "preBookingId: "+preBookingId 
      log.info "flight: "+flight
      log.info "seat: "+seat
      log.info "person: "+person

      code = flight+"-"+seat

	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("preBookingID").setValue(preBookingId)
	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("flightNumber").setValue(flight)
	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("code").setValue(code)
	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("whiteLabelId").setValue(whiteLabelId)
	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("userIdentifier").setValue(userIdentifier)
	testRunner.testCase.getTestStepByName("DELETE SEAT").getProperty("language").setValue(language)

	testRunner.runTestStepByName("DELETE SEAT");

      log.info "**************** END DELETE SEAT ****************"

 }
}

context.setProperty( "seaaat", new Seats(log,context,testRunner) )
</script></con:config></con:testStep><con:testStep type="groovy" name="Script DELETE SEAT" id="f3dec3c9-e824-4660-8b94-2b1537783eb7"><con:settings/><con:config><script>// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Seats"].testSteps["Seats"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def seat = context.ancillary

// run the method, with parameter

seat.delete("booking1", "2121", "SEO", 1)


</script></con:config></con:testStep><con:testStep type="restrequest" name="Clone DELETE 102 Ida 3A" id="4e28ad25-7858-4d03-b25b-11a004d59271"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Clone DELETE 102 Ida 3A" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="code" value="${#Project#flightNumber_ida}-3A"/>
  <con:entry key="preBookingId" value="102delTestVie"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SeatsData" id="fceb15eb-b3e5-43a2-99b8-f7efac1e0317"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.json.JsonBuilder
import groovy.json.JsonOutput

class SeatsData {
  def log
  def context
  def testRunner
  def utils

  def SeatsData(logIn,contextIn,testRunnerIn) {
    this.log = logIn
    this.context = contextIn
    this.testRunner = testRunnerIn

    //if the 'utils' library has not been initialized yet, initialize it
    if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
    this.utils = context.utils
  }

  /**
   * This method parses the response from the 'list seats' request and returns it. 
   */
  def getListOfSeats(String stepName, testRunner, context) {
    def step = testRunner.testCase.getTestStepByName(stepName)
    step.run(testRunner, context)
    def responseMessage = testRunner.testCase.testSteps[stepName].testRequest.response.contentAsString
    return new JsonSlurper().parseText(responseMessage)
  }

  def isSeatAvailable(seat) {
    return (seat.seatAccess == "Regular" && seat.isAvailable == true)
  }

  def isPassengerEligible(passenger) {
    return passenger.personType != "INF"
  }

  def getEligiblePassengers(passengers) {
    return passengers.findAll { isPassengerEligible(it) }
  }

  /**
   * This method returns the first 'quantity' of seats from the 'seatList'.
   */
  def getAvailableSeats(quantity, seatsList) {
    def index = 0
    def selectedSeats = []
    for (row in seatsList.rows)
      for (block in row.blocks)
        for (seat in block.seats) 
          if(isSeatAvailable(seat)) {
            selectedSeats << seat
            index += 1
            if (index >= quantity)
              return selectedSeats
          }
  }

  /**
   * This method assigns the first available seats to each passenger.
   */
  def assignAvailableSeats(passengers, seatsList) {
    def eligiblePassengers = getEligiblePassengers(passengers)
    def quantity = eligiblePassengers.size()
    def selectedSeats = getAvailableSeats(quantity, seatsList)
    for (int i=0; i < selectedSeats.size(); i++)
      eligiblePassengers[i].seat = selectedSeats[i]

    //assign the seats to the passangers in the list
    //this step is done in order to have the full list of passengers with
    // assigned seats and passengers without seats (for instance, infants)
    return passengers.collect { passenger ->
        def selectedPassenger = eligiblePassengers.find{it.paxNumber == passenger.paxNumber}
        if (selectedPassenger != null)
            passenger.seat = selectedPassenger.seat
        return passenger} 
  }

  /**
   * This method gets the list of passengers from the prebooking response.
   */
  def getPassengersFromPrebookingResponse(prebookingSlurperResponse) {
    def paxes = prebookingSlurperResponse.paxes
    def listOfPaxes = []
    for (pax in paxes)
      listOfPaxes << [paxNumber: pax.paxNumber, personType: pax.personType, seat: null]
    return new JsonSlurper().parseText(new JsonOutput().toJson(listOfPaxes).toString())
  }

  /**
   * This method takes data from the 'passengers' object and formats it so that
   * it can be used in the request to add seats.
   */
  def formatSeatsRequest(passengers, boolean isGoFlight) {
    def request = "["
    for (int i=0; i<passengers.size(); i++) {
       for (item in passengers[i].seat) {
         if (!passengers[i].find{it.key == item.key})
          passengers[i].put(item.key, item.value)
       }
       passengers[i].paxReference = i+1
       if (isGoFlight)
         passengers[i].flightNumber = "\${#Project#flightNumber_ida}"
       else
         passengers[i].flightNumber = "\${#Project#flightNumber_vuelta}"
       passengers[i].remove('paxNumber')
       passengers[i].remove('seat')
      /*request += '{\n    '
      request += '"flightNumber" : "${#Project#flightNumber_ida}",\n    '
      request += '"seatNumber" : "'+passengers[i].seat.seatNumber+'",\n    '
      request += '"price" : '+passengers[i].seat.price+',\n    '
      request += '"paxReference": '+passengers[i].paxNumber+'\n'
      request += '}'
      if(i != passengers.size()-1)
        request += ','*/
    }
    //request += "]"

    //return new JsonSlurper().parseText(request)
    return passengers
  }

  def addSeatsForPassengers(addSeatsStepName, passengers, seatsList, boolean isGoFlight, testRunner, context) {
    log.info "Adding seats for "+passengers.size()+" passengers to the flight in the step with name "+addSeatsStepName
    
    def passengersWithSeats = assignAvailableSeats(passengers, seatsList)
    def availableSeatsJSON = formatSeatsRequest(passengersWithSeats, isGoFlight)

    //add it to the request and execute
    utils.addJSONToRequest(addSeatsStepName, availableSeatsJSON)
    utils.executeStep(addSeatsStepName, testRunner, context)
  }

  def getPassengersSeatsFromAddingResponse(String addSeatsStepName, com.eviware.soapui.impl.wsdl.panels.support.MockTestRunner testRunner) {
    return getSlurperResponseFromStep(addSeatsStepName,testRunner)
  }

  def deleteSeatsForPassengers(deleteSeatsStepName, passengers, boolean isGoFlight, testRunner, context) {
    log.info "Deleting seats for "+passengers.size()+" passengers to the flight in the step with name "+deleteSeatsStepName
   
    for(passenger in passengers) {
      def step = testRunner.testCase.getTestStepByName(deleteSeatsStepName)
      if (isGoFlight)
        step.setPropertyValue('code', "\${#Project#flightNumber_ida}-"+ passenger.seatNumber)
      else
        step.setPropertyValue('code', "\${#Project#flightNumber_vuelta}-"+passenger.seatNumber)
      utils.executeStep(deleteSeatsStepName, testRunner, context)
    }
  }
}
context.setProperty( "seatsData", new SeatsData(log,context,testRunner) )]]></script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="917243be-7f5c-4055-a162-bc613277bae1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Utils" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Utils" id="fb334aae-47c9-4a5a-b006-07f9b45f041a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder

/*
Please, to initialize this class in a step use the following code snippet:

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)

After executing that, context.utils will hold an instance of the following class.
 */

class Utils {

  def log
  def context
  def testRunner

  def Utils(log, context, testRunner){
    this.log = log
    this.context = context
    this.testRunner = testRunner
  }

  def setProjectProperty(String propertyName, String propertyValue, testRunner) {
    testRunner.testCase.testSuite.project.setPropertyValue( propertyName, propertyValue ) 
  }

  def getSlurperRequestFromStep(String stepName, testRunner) {
    def responseContent = testRunner.testCase.getTestStepByName(stepName).getPropertyValue("request")
    return new JsonSlurper().parseText(responseContent)
  }

  def getSlurperRequestFromStep(step) {
    def responseContent = step.getPropertyValue("request")
    return new JsonSlurper().parseText(responseContent)
  }

  def getSlurperResponseFromStep(String stepName, testRunner) {
    def responseContent = testRunner.testCase.getTestStepByName(stepName).getPropertyValue("response")
    return new JsonSlurper().parseText(responseContent)
  }
  
  def getSlurperResponseFromStep(step) {
    def responseContent = step.getPropertyValue("response")
    return new JsonSlurper().parseText(responseContent)
  }

  def modifyJSONField(json, fieldName, newValue) {
    json[fieldName] = newValue
    def builder = new JsonBuilder(json)
    return new JsonSlurper().parseText(builder.toString())
  }

  def addJSONToRequest(step, json) {
    def request = step.getTestRequest()
    request.setRequestContent(JsonOutput.prettyPrint(JsonOutput.toJson(json)))
  }

  def addJSONToRequest(String stepName, json) {
    def step = testRunner.testCase.getTestStepByName(stepName)
    def request = step.getTestRequest()
    request.setRequestContent(JsonOutput.prettyPrint(JsonOutput.toJson(json)))
  }

  def executeStep(String stepName, testRunner, context) {
    def step = testRunner.testCase.getTestStepByName(stepName)
    step.run(testRunner, context)
  }

  /**
   * This method returns current's project path as a string.
   */
  def getProjectPath(context) {
  	return new com.eviware.soapui.support.GroovyUtils(context).projectPath
  }

  /**
   * This method returns the content of a file as a JSON object. 
   * 
   * Keep in mind that the parameter path is relative to the project's
   * root folder, so if the project is in /user/test/project and the file
   * you want to read is /user/test/project/folder/file.json you only have
   * to pass /folder/file.json as a parameter.
   * 
   * @param filePath Path to file. Relative to project's root.
   */
  def getJSONFromFile(filePath, context) {
  	def file = new File(getProjectPath(context), filePath)
  	return new JsonSlurper().parseText(file.text)
  }

  def getFile(filePath, context) {
  	return new File(getProjectPath(context), filePath)
  }

  /**
   * This method clones a test case and returns the created clone.
   */
  def cloneTestCase(originalSuite, originalCase, newSuite, dataID) {
    def testCase = testRunner.testCase.testSuite.project.testSuites[originalSuite].testCases[originalCase]
    testRunner.testCase.testSuite.project.testSuites[newSuite].cloneTestCase(testCase, dataID/*+" - "+testCase.getLabel()*/);
    return testCase.testSuite.project.testSuites[newSuite].testCases[dataID/*+" - "+testCase.getLabel()*/]
  }
}

context.setProperty("utils", new Utils(log, context, testRunner) )
</script></con:config></con:testStep><con:testStep type="groovy" name="ExcelReader" id="bd983ab0-d452-4f9c-9c34-e4a0ac7c31c0"><con:settings/><con:config><script><![CDATA[import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import java.io.*;

class ExcelReader{

	def DEBUG = true

	def wb //workbook
	def sheets //list of sheets

	def DATA_SEPARATOR = '#'

	def ExcelReader(){}

	def ExcelReader(File file) {
		openExcelFile(file)
	}

	def openFile(File file) {
		InputStream inputStream = new FileInputStream(file.getAbsolutePath());
		this.wb = WorkbookFactory.create(inputStream);
		this.sheets = getSheets()
	}

	def getSheets() {
		def sheetsList = []
		for(int i=0; i<wb.getNumberOfSheets(); i++)
			sheetsList << wb.getSheetAt(i)
		return sheetsList
	}

	def getSheetNames() {
		def sheetsList = []
		for(int i=0; i<wb.getNumberOfSheets(); i++)
			sheetsList << wb.getSheetAt(i).getSheetName().trim()
		return sheetsList
	}

	def getSheetByName(String name) {
		for(sheet in sheets) {
			if(sheet.getSheetName().trim() == name.trim())
				return sheet
		}
	}

	def getSheetHeaders(Sheet sheet) {
		def firstRow = sheet.rowIterator().next()
		def firstRowCells = firstRow.cellIterator()
		
		def headers = []
		firstRowCells.each {
			def val = getCellValue(it)
			if(val != null && val != '')
				headers << getCellValue(it).trim()
			}
		return headers
	}

	def getColumnByName(Sheet sheet, String name) {
		int index = getSheetHeaders(sheet).indexOf(name.trim())
		return getColumnByIndex(sheet, index)
	}

	def getColumnByIndex(Sheet sheet, int columnIndex) {
		def column = []
		for(row in getRows(sheet)){
			def cell = getCellValue(row.getCell(columnIndex))
			if (cell != null && cell != '')
				column << cell
		}
		return column
	}

	def getRowQuantity(sheet) {
		return getRows(sheet).size()
	}

	def getRowByTestCaseName(Sheet sheet, String name) {
		if (sheet != null)
			for (row in getRows(sheet)) {
				if(getCellValue(row.getCell(0)).trim() == name.trim())
					return row
			}
		return null
	}

	def getRowByIndex(Sheet sheet, int index) {
		if (sheet != null)
			return sheet.getRow(index)
		return null
	}

	def getRows(Sheet sheet) {
		if (sheet != null){
			def rows = []
			for (int i=1; i<=sheet.getLastRowNum(); i++) {
				def row = sheet.getRow(i)
				if(!isRowHidden(row))
					rows << row
			}
			return rows
		}
		return null
	}

	private isDataAValue(text) {
		return (text.split(DATA_SEPARATOR)[0] != '')
	}

	private isDataAReferenceToTable(text) {
		def splitText = text.split(DATA_SEPARATOR)
		if (splitText.size() != 3)
			return false
		return (splitText[0] == '' && splitText[1] != '' && splitText[2] != '')
	}

	private isDataASpecialValue(text) {
		def splitText = text.split(DATA_SEPARATOR)
		if (splitText.size() != 2)
			return false
		return (splitText[0] == '' && splitText[1] != '')
	}

	private translateSpecialValue(text) {
		switch(text) {
			case '#NULL':
				return null
			default:
				return text
		}
	}

	def getRowDataAsMap(sheet, row, log) {
		def headers = getSheetHeaders(sheet)
		if (DEBUG) log.info "ExcReadr -> Enter sheet "+sheet.getSheetName()+", row "+getCellValue(row.getCell(0))+", headers: "+headers
		def result = [:]
		for (header in headers) {
			if (DEBUG) log.info "ExcReadr ->   getting "+header
			def cell = getCellInRowByColumnName(sheet, row, header)
			if (cell == null || cell == '') return
			def value = getCellValue(cell).trim()
			if (isDataAReferenceToTable(value)) {
				if (DEBUG) log.info "ExcReadr ->   enter ref (value: "+value+")"
				def values = value.split(DATA_SEPARATOR)
				if (DEBUG) log.info "ExcReadr ->   enter ref (values: "+values+")"
				def tableSheet = getSheetByName(values[1].trim())
				def tableRow = getRowByTestCaseName(tableSheet, values[2].trim())
				if (DEBUG) log.info "ExcReadr ->   ref to sheet "+tableSheet+", row "+tableRow
				result[header] = getRowDataAsMap(tableSheet, tableRow, log)
			} else if (isDataASpecialValue(value)) {
				result[header] = translateSpecialValue(value)
			} else if (isDataAValue(value)) {
				result[header] = value
			}
		}
		if (DEBUG) log.info "ExcReadr -> Exit sheet "+sheet.getSheetName()+", row "+getCellValue(row.getCell(0))
		return result
	}

	def getCellInRowByColumnName(Sheet sheet, Row row, String columnName) {
		def column = getSheetHeaders(sheet).indexOf(columnName.trim())
		return row.getCell(column)
	}

	def getCellInRowByIndex(Sheet sheet, Row row, int column) {
		return row.getCell(column)
	}

	def getCellValueInRowByColumnName(Sheet sheet, Row row, String columnName) {
		return getCellValue(getCellInRowByColumnName(sheet, row, columnName.trim()))
	}

	def getCellValueInRowByIndex(Sheet sheet, Row row, int column) {
		return getCellValue(getCellInRowByIndex(sheet, row, column))
	}

	def getCell(Sheet sheet, int row, int column) {
		return sheet.getRow(row).getcell(column)
	}

	def getCellValue(Cell cell) {
		if (cell==null)
			return ""

		def value = null
		switch(cell.getCellType()) {
			case HSSFCell.CELL_TYPE_STRING:
				value = cell.getStringCellValue().trim()
				break
			case HSSFCell.CELL_TYPE_NUMERIC:
				//the cast to long is used to avoid scientific notation, do not remove!
				value = (long)cell.getNumericCellValue()
				if (value == value as long) value = (value as long).toString()
				else value = (value as double).toString()
				break
			case HSSFCell.CELL_TYPE_BOOLEAN:
				value = Boolean.toString(cell.getBooleanCellValue())
			default:
				value = ""
		}
	}

	def close() {
		this.wb.close()
	}

	def isCellHidden(Cell cell) {
		if (cell !=null) 
			return isRowHidden(cell.getRow())
		return true
	}

	def isRowHidden(Row row) {
		if (row != null)
			return row.getZeroHeight()
		return true
	}

	/*def getValue(String sheetName, String tcName, String headerName){
		def sheet = excelReader.getSheetByName(sheetName.trim())
		def row = excelReader.getRowByTestCaseName(sheet, PROPERTIES_TO_USE)
		def depositCell = excelReader.getCellInRowByColumnName(sheet, row, "deposit")
		return excelReader.getCellValue(depositCell)
	}*/

}

context.setProperty("excelReader", new ExcelReader())]]></script></con:config></con:testStep><con:testStep type="groovy" name="ReporterTestRunner" id="8518ae3a-9dcc-421d-a8c6-74f99b144f1d"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunner;
import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunContext;
import com.eviware.soapui.impl.wsdl.panels.support.MockTestRunner;
import com.eviware.soapui.impl.wsdl.panels.support.MockTestRunContext;
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors
import java.util.concurrent.Callable
import java.util.concurrent.Executors
import java.util.concurrent.TimeUnit
import java.util.concurrent.Future

class ReporterTestRunner{

	def DEBUG = true
	def THREAD_QUANTITY = 6
	def OPTIONS_SHEET_NAME = "CONFIG"
	def RESULTS_SUITE_NAME = "Results"

	def context
	def testRunner
	def reportGenerator
	def utils
	def excelReader
	def log

	def executionResults

	def ReporterTestRunner(contextIn, testRunnerIn, logIn) {		
		this.context = contextIn
		this.testRunner = testRunnerIn
		this.log = logIn

		//if the 'utils' library has not been initialized yet, initialize it
		if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
		this.utils = context.utils

		if (!context.excelReader) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["ExcelReader"].run(testRunner, context)
		this.excelReader = context.excelReader

		if (!context.reportGenerator) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["ReportGenerator"].run(testRunner, context)      
		this.reportGenerator = context.reportGenerator
	}

	def runTestSteps(testCase) {
		def results = []
		def newRunner = new MockTestRunner(testCase)
		for (testStep in testCase.getTestStepList()) {
			if (!testStep.disabled) {
				def newContext = new MockTestRunContext(newRunner, testStep)
				if (DEBUG) log.info "TC: "+testCase.getLabel()+" --> "+testStep.getLabel()
				results << testStep.run(newRunner, newContext)
			}
		}
		this.executionResults << results
	}

	def run(File excelFile, applyDataToTestCase, getStepData) {
		if (DEBUG) log.info "1 - Enter run()"
		List<Future<Object>> futures = new ArrayList<Future<Object>>();
		this.executionResults = []
		if (DEBUG) log.info "2 - open excel file"
		excelReader.openFile(excelFile)
		if (DEBUG) log.info "3 - get sheet: "+OPTIONS_SHEET_NAME
		def optionsSheet = excelReader.getSheetByName(OPTIONS_SHEET_NAME)
		if (DEBUG) log.info "4 - get rows and remove the first one"
		def optionsRows = excelReader.getRows(optionsSheet)
		//optionsRows.remove(0)
		optionsRows.each { row -> 
			if (DEBUG) log.info "5.1 - enter each row. Collect data"
			def (originalSuite, originalCase, dataTable) = 
					(0..2).collect{ return excelReader.getCellValueInRowByIndex(optionsSheet, row, it) }
			if (dataTable == '') return
			if (DEBUG) log.info "5.2 - get data sheet"
			def dataSheet = excelReader.getSheetByName(dataTable)
			if (DEBUG) log.info "5.3 - get data sheet IDs"
			def dataIDs = excelReader.getColumnByIndex(dataSheet, 0)
			//clone test cases and assign data
			dataIDs.each { dataID -> 
				if (DEBUG) log.info "5.4.1 - Enter each ID. Original suite: "+originalSuite+", original case: "+originalCase
				if (dataID == '') return
				def clonedTestCaseName = dataID + " - " + testRunner.testCase.testSuite.project.testSuites[originalSuite].testCases[originalCase].getLabel()
				if (DEBUG) log.info "5.4.2 - clone test case"
				def clonedTestCase = utils.cloneTestCase(originalSuite, originalCase, RESULTS_SUITE_NAME, clonedTestCaseName)
				if (DEBUG) log.info "5.4.3 - get data row"
				def clonedRow = excelReader.getRowByTestCaseName(dataSheet, dataID)
				if (DEBUG) log.info "5.4.4 - get data as map"
				def dataReaded = excelReader.getRowDataAsMap(dataSheet,clonedRow, log)
				dataReaded["originalCase"] = [:]
				dataReaded.originalCase["testSuite"] = originalSuite
				dataReaded.originalCase["testCase"] = originalCase
				if (DEBUG) log.info "5.4.5 - clone test case"
				applyDataToTestCase(clonedTestCase, dataReaded)
				if (DEBUG) log.info "5.4.6 - Final instruction each ID"
				runTestSteps(clonedTestCase)
			}
			if (DEBUG) log.info "5.5 - Final instruction each row"
		}
		if (DEBUG) log.info "6 - Each row ended"

		//generate report
		def testSuite = testRunner.testCase.testSuite.project.testSuites[RESULTS_SUITE_NAME]
		reportGenerator.generateReportForSuite(testSuite, this.executionResults, getStepData)
	}

}

//if(context.clonerTestRunner) context.clonerTestRunner.terminateThreadPool()
context.setProperty("reporterTestRunner", new ReporterTestRunner(context, testRunner, log))]]></script></con:config></con:testStep><con:testStep type="groovy" name="ReportGenerator" id="404ddaf1-ade1-4dfc-ac58-dade4164eec2"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep


class ReportGenerator{
	
	def DEBUG = true
	
	def context
	def testRunner
	def utils
	def excelReader
	def log

	def ReportGenerator(contextIn, testRunnerIn, logIn) {
		
		this.context = contextIn
		this.testRunner = testRunnerIn
		this.log = logIn

		//if the 'utils' library has not been initialized yet, initialize it
		if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
		this.utils = context.utils

		if (!context.excelReader) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["ExcelReader"].run(testRunner, context)
		this.excelReader = context.excelReader
	}

	def areAllStepsDisabled(testCase) {
		for (testStep in testCase.getTestStepList())
			if (!testStep.disabled)
				return true
		return false
	}

	def getReportForCaseSteps(testCase, testCaseId, testCaseErrors, getStepData) {
		def steps = ""
		def stepCounter = 0

		for (int i=0; i<testCase.getTestStepList().size; i++) {
			def testStep = testCase.getTestStepList()[i]
			stepCounter +=1
			if (testStep.disabled) continue

			def stepOK = testCaseErrors[i].getStatus().toString() != 'FAILED'
			def messages = testCaseErrors[i].getMessages()
			def testStepId = (stepCounter as String).padLeft(5,'0')
			def testStepName = testStep.getLabel()

			def isRequest = ( testStep instanceof WsdlTestRequestStep ||
						   testStep instanceof RestTestRequestStep ||
						   testStep instanceof JdbcRequestTestStep ||
						   testStep instanceof HttpTestRequestStep )
				 
			def dataMap = getStepData(testStep, stepOK, isRequest, messages, testCase)
			
			def stepContent = getRequestStepContent(dataMap)
			steps += getTestStep(testCaseId, testStepId, testStepName, stepOK, stepContent)
		}
		return steps
	}

	def generateReportForSuite(testSuite, executionResults, getStepData) {
		def html = getHeader()
		html += getTitle()
		
		def cases = ""
		def caseCounter = 0
		for (int i=0; i<testSuite.getTestCaseList().size; i++) {
			def testCase = testSuite.getTestCaseList()[i]
			caseCounter+=1
			def testCaseId = (caseCounter as String).padLeft(5,'0')
			if(/*areAllStepsDisabled(testCase) ||*/ testCase.disabled == true) continue

			def testCaseErrors = executionResults[i]
			def steps = getReportForCaseSteps(testCase, testCaseId, testCaseErrors, getStepData)
			def testCaseName = testCase.getLabel()
			def testCaseOK = !(testCaseErrors.any {step -> step.getStatus().toString() == 'FAILED'}) //this should be read as "if there's not any step that's failed"
			def result = getTestCase(testCaseId, testCaseName, testCaseOK, steps)
			cases += result
		}

		html += cases
		html += getFooter()

		//create file and write html there
		writeToFile(html, "report.html")
		def date = new Date().format('yyyy.MM.dd_hh.mm.ss')
		writeToFile(html, "/reports/report_"+date+".html")
	}

	private writeToFile(text, filepath) {
		def file = new File(utils.getProjectPath(context)+"\\"+filepath)
		log.info file
		file.write(text)
	}

	private getHeader(){
		return	'<!DOCTYPE html>\n' +
				'<html>\n' +
				'<head>\n' +
				'  <meta name="viewport" content="width=device-width, initial-scale=1">\n' +
				'  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">\n' +
				'  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>\n' +
				'  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>\n' +
				'</head>\n' +
				'<body>\n'
	}

	private getTitle() {
		return	'<div class="container">\n' +
				'  <h2>Report</h2>\n' +
				'  <p>(PLACEHOLDER)</p>\n'
	}

	private getTestCase(testCaseId, testCaseName, testCaseOK, content) {
		return	'    <div class="panel panel-default">' +
				'      <div class="panel-heading">\n' +
				'        <h4 class="panel-title">\n' +
				'          <a data-toggle="collapse" '+/*data-parent="#cases"+*/'href="#tc'+ (testCaseId as String)+'">'+testCaseName+'<span class="glyphicon '+ (testCaseOK? 'glyphicon-ok': 'glyphicon-remove') + '" style="float:right; color:' + (testCaseOK? 'green': 'red')+';"></span>\n' +
				'          </a>\n' +
				'        </h4>\n' +
				'      </div>\n' +
				'      <div id="tc'+testCaseId+'" class="panel-collapse collapse">\n' +
				'        <div class="panel-body">\n' +
				'          <div class="panel-group" id="tc'+testCaseId+'_container">\n' +
				             content +
				'          </div>\n' +
				'        </div>\n' +
				'      </div>\n' +
				'    </div>\n'
	}

	private getTestStep(testCaseId, testStepId, testStepName, testCaseOK, content) {
		return	'            <div class="panel panel-default">\n' +
				'              <div class="panel-heading">\n' +
				'                <h4 class="panel-title">\n' +
				'                  <a data-toggle="collapse" data-parent="#tc'+testCaseId+'_container" href="#tc'+testCaseId+'_step'+testStepId+'">'+testStepName+' <span class="glyphicon '+(testCaseOK? 'glyphicon-ok': 'glyphicon-remove')+'" style="float:right; color:'+(testCaseOK? 'green': 'red')+';"></span></a>\n' +
				'                </h4>\n' +
				'              </div>\n' +
				'              <div id="tc'+testCaseId+'_step'+testStepId+'" class="panel-collapse collapse">\n' +
				'                <div class="panel-body">\n' +
				                   content +
				'                </div>\n' +
				'              </div>\n' +
				'            </div>\n'
	}

	private getRequestStepContent(dataMap) {
		def result = ''+
				'                  <table class="table">\n' +
				'                    <tbody>\n'
		for (elem in dataMap) {
			result += '' +
				'                      <tr>\n' +
				'                        <td><strong>'+elem.key+':</strong></td>\n' +
				'                        <td>'+elem.value+'</td>\n' +
				'                      </tr>\n'
		}
		result += '' +
				'                    </tbody>' +
				'                  </table>'

		result += '</span><br>\n'

		return result
	}

	private getFooter() {
		return	'</div>\n' +
				'</body>\n' +
				'</html>\n'
	}

}

context.setProperty("reportGenerator", new ReportGenerator(context, testRunner, log))

def testSuite = testRunner.testCase.testSuite.project.testSuites["Results"]
//context.reportGenerator.generateReportForSuite(testSuite, testRunner)
]]></script></con:config></con:testStep><con:testStep type="groovy" name="JsonUpdater" id="e7a7b1a6-4097-49e3-bf8c-b3233b47e0dd"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonBuilder
import groovy.json.JsonSlurper

class JsonUpdater {
  def DEBUG = true

  def log
  def context
  def testRunner
  def utils

  def JsonUpdater(logIn, contextIn, testRunnerIn) {
    this.log = logIn
    this.context = contextIn
    this.testRunner = testRunnerIn
    if(!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)
    this.utils = context.utils
  }

  def updatePassengers(step) {
      def numberTranslation = [1:"uno", 2:"dos", 3:"tres", 4:"cuatro", 5:"cinco", 6:"seis", 7:"siete", 8:"ocho", 9:"nueve", 10:"diez"]

      //assign passengers' name and last name
      if(DEBUG) log.info "updating passenger in: "+step.getTestCase().getTestSuite().getLabel()+"/"+step.getTestCase().getLabel()+"/"+step.getLabel()
      def json = this.utils.getSlurperRequestFromStep(step)
      def resultPaxes = []

      def paxesList = []
      if(DEBUG) log.info ">>> 1: "+json
      paxesList << json?.paxes
      if(DEBUG) log.info ">>> 2: "+paxesList
      paxesList = paxesList.flatten()
      if(DEBUG) log.info ">>> 3: "+paxesList
      for (int i=0; i<paxesList.size; i++) {
        def pax = paxesList[i]
        if(DEBUG) log.info ">>> 4: "+pax
        pax = this.utils.modifyJSONField(pax, "firstName", "\${#Project#firstname} "+numberTranslation[i+1].toString())
        pax = this.utils.modifyJSONField(pax, "lastName", "\${#Project#lastname}")
        resultPaxes << pax
      }

      if(DEBUG) log.info ">>> 5"
      //if(resultPaxes.size() == 1){
      //   this.utils.modifyJSONField(json, "paxes", resultPaxes[0])
      //} else {
         this.utils.modifyJSONField(json, "paxes", resultPaxes)
      //}
	 if(DEBUG) log.info ">>> 6"
      //this.utils.modifyJSONField(json, "paxes", resultPaxes)

      def client = json.client[0]
      if(DEBUG) log.info ">>> 7"
      client = utils.modifyJSONField(client, "firstName", "\${#Project#firstname}")
      if(DEBUG) log.info ">>> 8"
      client = utils.modifyJSONField(client, "lastName", "\${#Project#lastname}")
      if(DEBUG) log.info ">>> 9"
      json = utils.modifyJSONField(json, "client", [client])
      if(DEBUG) log.info ">>> 10"

      this.utils.addJSONToRequest(step,this.utils.modifyJSONField(json, "client", resultPaxes) )
    if(DEBUG) log.info ">>> 11"
    return
  }



  def recursivelyModifyJSONField(json, jsonPath, value) {
    if(DEBUG) log.info "4a"
    def pathParts = jsonPath.split('\\.')
    if(DEBUG) log.info "4b"
    def currentPart = pathParts.findResult { it != null && it != '' ? it : null }
    if(DEBUG) log.info "4c"
    def currentIndex = pathParts.findIndexOf { it == currentPart }
    def restOfThePath = pathParts.size() == 1? null : pathParts[currentIndex+1..-1].join('.')
    if(DEBUG) log.info "4d rest of path:"+restOfThePath
    def result = value
    if(DEBUG) log.info "4e currentPart="+currentPart+" json="+json
    def resultsList = []
    def elementsList = []
    elementsList << json?."${currentPart}"
    elementsList = elementsList.flatten()
    for (elem in elementsList?.findAll{it != null}) {
      if(DEBUG) log.info "5a, elem: "+elem+", enters if? "+(restOfThePath != null && restOfThePath != "")
      if (restOfThePath != null && restOfThePath != "" ) {
        result = this.recursivelyModifyJSONField(elem, restOfThePath, value)
        if (result != null) 
          resultsList << result
      }
      if(DEBUG) log.info "5b"
    }
    
    if(DEBUG) log.info "5c size="+resultsList.size()
    if(resultsList.size() == 0){
      this.utils.modifyJSONField(json, currentPart, result)
    } else if(resultsList.size() == 1){
       this.utils.modifyJSONField(json, currentPart, resultsList[0])
    } else {
       this.utils.modifyJSONField(json, currentPart, resultsList)
    }
      
    if(DEBUG) log.info "4f"
    return json
  }

  def updateJSON(step, jsonPath, newValue) {
    if(DEBUG) log.info "1"
    def jsontext = step.getPropertyValue("request")
    if(DEBUG) log.info "2"
    def slurped = new JsonSlurper().parseText(jsontext)
    if(DEBUG) log.info "3"
    def json = this.recursivelyModifyJSONField(slurped, jsonPath, newValue)
    if(DEBUG) log.info "5"
    this.utils.addJSONToRequest(step, json)
  
    return
  }

  def updateProject(testSuiteName, testCaseName, testStepName, jsonPath, newValue) {
    for(suiteMapElem in testRunner.testCase.testSuite.project.testSuites){
      if(testSuiteName != '*' && suiteMapElem.value.getLabel() != testSuiteName) continue
      for(testCaseMapElem in suiteMapElem.value.testCases){
        if(testCaseName != '*' && testCaseMapElem.value.getLabel() != testCaseName) continue
        for(testStepMapElem in testCaseMapElem.value.testSteps) {
          if(testStepName != '*' && testStepMapElem.value.getLabel() != testStepName) continue
          if(DEBUG) log.info "ATTENTION: suite:"+suiteMapElem.value.getLabel()+" case: "+testCaseMapElem.value.getLabel()+" step: "+testStepMapElem.value.getLabel()
          this.updateJSON(testStepMapElem.value, jsonPath, newValue)
        }
      }
    }
  }
  
  def updateProjectPassengers(testSuiteName, testCaseName, testStepName) {
    for(suiteMapElem in testRunner.testCase.testSuite.project.testSuites){
      if(testSuiteName != '*' && suiteMapElem.value.getLabel() != testSuiteName) continue
      for(testCaseMapElem in suiteMapElem.value.testCases){
        if(testCaseName != '*' && testCaseMapElem.value.getLabel() != testCaseName) continue
        for(testStepMapElem in testCaseMapElem.value.testSteps) {
          if(testStepName != '*' && testStepMapElem.value.getLabel() != testStepName) continue
          if(DEBUG) log.info "ATTENTION: suite:"+suiteMapElem.value.getLabel()+" case: "+testCaseMapElem.value.getLabel()+" step: "+testStepMapElem.value.getLabel()
          this.updatePassengers(testStepMapElem.value)
        }
      }
    }
  }
}

context.jsonUpdater = new JsonUpdater(log, context, testRunner)]]></script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fdf4a4d3-80de-41da-b144-1dad16f39b63" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ancillaries" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="AncillariesData" id="79605972-a36c-4bd2-a02b-66064ad05838"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonBuilder

class AncillariesData {
  def log
  def context
  def testRunner
  def utils

  def ancillaryReferencesMap = ["LUG": 0, "SEC-FIRE": 1, "SEC-GOLF": 2, "SEC-SKBT": 3, "SEC-SNBD": 4, "SEC-OSSE": 5, "SEO-BICL": 6, "SEO-CANO": 7, "SEO-HGLD": 8, "SEO-WDSF": 9, "LUG-1WGT": 10, "LUG-2WGT": 11, "LUG-3WGT": 12, "LUG-4WGT": 13]
  def ancillaryCodesMap = ["LUG": "LUG", "SEC-FIRE": "SEC", "SEC-GOLF": "SEC", "SEC-SKBT": "SEC", "SEC-SNBD": "SEC", "SEC-OSSE": "SEC", "SEO-BICL": "SEO", "SEO-CANO": "SEO", "SEO-HGLD": "SEO", "SEO-WDSF": "SEO", "LUG-1WGT": "LUG-1WGT", "LUG-2WGT": "LUG-2WGT", "LUG-3WGT": "LUG-3WGT", "LUG-4WGT": "LUG-4WGT"]

  // Class constructor with same case as Class name
  def AncillariesData(logIn,contextIn,testRunnerIn) {
    this.log = logIn
    this.context = contextIn
    this.testRunner = testRunnerIn

    //if the 'utils' library has not been initialized yet, initialize it
    if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
    this.utils = context.utils

  }

  def getListOfAncillaries(String stepName, testRunner, context) {
    def step = testRunner.testCase.getTestStepByName(stepName)
    step.run(testRunner, context)
    def responseMessage = testRunner.testCase.testSteps[stepName].testRequest.response.contentAsString
    return responseMessage
  }

  def chooseAncillaryByIndex(index, ancillariesList) {
    def jsonSlurper = new JsonSlurper()
    log.info "a "+ancillariesList
    def jsonList = jsonSlurper.parseText(ancillariesList.toString())
    log.info "b "+ jsonList
    return jsonList[index]
  }

  def chooseAncillaryByReference(ref, ancillariesList) {
    return chooseAncillaryByIndex(ancillaryReferencesMap[ref], ancillariesList)
  }

  def chooseMultipleAncillariesByReference(ancillariesToAdd, ancillariesList) {
    def selectedAncillariesList = []
    for (passenger in ancillariesToAdd) {
      for (entry in passenger){
        def ancillaryJson = chooseAncillaryByReference(entry.key, ancillariesList)
        ancillaryJson = utils.modifyJSONField(ancillaryJson, "quantity", entry.value.toString())
        selectedAncillariesList &lt;&lt; ancillaryJson
      }
    }
    def finishedJson = new JsonBuilder(selectedAncillariesList).toString()
    return new JsonSlurper().parseText(finishedJson) 
  }

  def addAncillariesForAllPassengers(flightStepName, ancillariesToAdd, ancillariesList, testRunner, context) {
    log.info "Adding "+ancillariesToAdd+" to the flight in the step with name "+flightStepName
    //get the JSON for our list of ancillaries
    def ancillaryJson = chooseMultipleAncillariesByReference(ancillariesToAdd, ancillariesList)
    
    //add it to the request and execute
    utils.addJSONToRequest(flightStepName, ancillaryJson)
    utils.executeStep(flightStepName, testRunner, context)
  }

  def assignAncillaryDataToDeleteRequestStep(passengerNumber, ida, ancillaryKey, deleteRequestStepName) {
    //get code from ref => ancillaryCodesMap[ref]
    def code = ""
    if (ida) code += "\${#Project#flightNumber_ida}"
    else code += "\${#Project#flightNumber_vuelta}"
    code += "-"+ancillaryCodesMap[ancillaryKey] // NOT REFERENCE, CODE!
    code += "-"+passengerNumber

    //add it to the request and execute
    def step = testRunner.testCase.getTestStepByName(deleteRequestStepName)
    step.setPropertyValue('code', code)
  }

  def deleteAncillariesForAllPassengers(String deleteRequestStepName, ArrayList ancillariesToDelete, ida, testRunner, context) {
    log.info "Deleting "+ancillariesToDelete+" from the flight in the step with name "+deleteRequestStepName
    
    for (int j=0; j&lt;ancillariesToDelete.size(); j++) {
    	 def ancillaryKey = ancillariesToDelete[j].keySet()[0]
    	 def paxNumber = ancillariesToDelete[j][ancillaryKey]
      assignAncillaryDataToDeleteRequestStep(paxNumber, ida, ancillaryKey, deleteRequestStepName)
      utils.executeStep(deleteRequestStepName, testRunner, this.context)
    }
  }

}

context.setProperty( "ancillariesData", new AncillariesData(log,context,testRunner) )
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a425339f-90f5-48a4-8764-b36028ce6bdf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Booking" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="PreConfirm" id="6f9f08eb-b2fe-4f35-a1c4-9d4f9a30c5b3"><con:settings/><con:config><script>class PreConfirm {

  def log
  def context
  def testRunner

  def PreConfirm(logIn,contextIn,testRunnerIn) {
    this.log = logIn
    this.context = contextIn
    this.testRunner = testRunnerIn
  }

  def TransferBooking(slurperresponse,responseContent) {
  
    def desbookingCode = slurperresponse.bookingCode
    def destotalPrice = slurperresponse.totalPrice
    def desdescription = slurperresponse.description

    def Confirm = testRunner.testCase.getTestStepByName("CONFIRM")

    Confirm.setPropertyValue('preBookingId',desbookingCode.toString())
    //Confirm.setPropertyValue('price',destotalPrice.toString())
    Confirm.setPropertyValue('description',desdescription.toString())

    log.info destotalPrice + " "+ desbookingCode + " "+  desdescription 
  }

def TransferPagos(slurperresponse,responseContent){
  /* Selecting type of payment 		 
   	    "codPaymentMethod": "SW"
         "codPaymentMethod": "EL"
         "codPaymentMethod": "DL"
         "codPaymentMethod": "DM"
         "codPaymentMethod": "AX"
         "codPaymentMethod": "MC"
         "codPaymentMethod": "DC"
         "codPaymentMethod": "VI"
  where PAYMNT_TYPE = type_of payment */

  //Cogemos de propiedades generales el tipo de pagos: 0,1,2,3,4,5,6 y el tipo de deposito: FULL, DEPOSIT
  def PAYMNT_TYPE= testRunner.testCase.testSuite.project.getPropertyValue("typeOfPayment")
  def descdeposittype = testRunner.testCase.testSuite.project.getPropertyValue("depositType") 
  def descdeposit
  def desccardFee 

   log.info "sss" + descdeposittype
  
 def value = slurperresponse["totalPricesWithFees"].find { if (it.codPaymentMethod == PAYMNT_TYPE) return it }
  
  //Info Paymentsdeposito
  def desctotalPriceWithFee = value.totalPriceWithFee
  //def desccardFee = (slurperresponse.totalPricesWithFees[PAYMNT_TYPE].cardFee as float) + (slurperresponse.totalPricesWithFees[PAYMNT_TYPE].depositCardFee as float)
  def desccodPaymentMethod = value.codPaymentMethod
  def descstrDescription = value.strDescription
  def desccodPaymentType = value.codPaymentType  
  def descpctPayment = value.pctPayment
  
  if (descdeposittype == "DEPOSIT") {
    /* With deposit, We should take deposit from payment string */        
      descdeposit = value.deposit
      desccardFee = (value.depositCardFee as float)
  }else{
  	/* Si Full Pay= deposit = 0, descomentar las dos lineas descdeposit,desccardFee  */ 
  	 descdeposit = 0
      desccardFee = value.cardFee   	
  }

 
  
  def Confirm = testRunner.testCase.getTestStepByName("CONFIRM")

 Confirm.setPropertyValue('price',desctotalPriceWithFee.toString())  
  Confirm.setPropertyValue('ptotalPriceWithFee',desctotalPriceWithFee.toString())  
  Confirm.setPropertyValue('cardFee',desccardFee.toString()) 
  Confirm.setPropertyValue('deposit',descdeposit.toString() )		 	   
  Confirm.setPropertyValue('pcodPaymentMethod',desccodPaymentMethod.toString())
  Confirm.setPropertyValue('pstrDescription',descstrDescription.toString())
  Confirm.setPropertyValue('pcodPaymentType',desccodPaymentType.toString())
  Confirm.setPropertyValue('ppctPayment',descpctPayment.toString())

  log.info desctotalPriceWithFee + " " +  desccardFee + " " + descdeposit + " " +  desccodPaymentMethod + " " + descstrDescription  + " "  + desccodPaymentType + " " + descpctPayment

}

  def TransferAncillaries(flightStepName, slurperResponse) {
    def bookingCode = slurperResponse.bookingCode.toString()
   // def goFlight = ""
    //def returnFlight = 

    def step = testRunner.testCase.getTestStepByName("List ancillaries GO")
    step.setPropertyValue('preBookingId', bookingCode)
    step = testRunner.testCase.getTestStepByName("List ancillaries RETURN")
    step.setPropertyValue('preBookingId', bookingCode)
    step = testRunner.testCase.getTestStepByName("GET")
    step.setPropertyValue('preBookingId', bookingCode)
    step = testRunner.testCase.getTestStepByName("CONFIRM")
    step.setPropertyValue('preBookingId', bookingCode)
    step = testRunner.testCase.getTestStepByName(flightStepName)
    step.setPropertyValue('preBookingId', bookingCode)
  }

  def transferTransfers(slurperResponse) {
    def bookingCode = slurperResponse.bookingCode.toString()
    def price = slurperResponse.totalPrice.toString()
    def description = slurperResponse.description.toString()

    
    def step = testRunner.testCase.getTestStepByName("Get Transfer")
    step.setPropertyValue('prebookingCode', bookingCode)

    step = testRunner.testCase.getTestStepByName("Add transferType IN")
    step.setPropertyValue('prebookingId', bookingCode)

    step = testRunner.testCase.getTestStepByName("Add transferType OUT")
    step.setPropertyValue('prebookingId', bookingCode)

    try {
      step = testRunner.testCase.getTestStepByName("Delete Transfer IN")
      step.setPropertyValue('preBookingCode', bookingCode)
    } catch(Exception e) {}

    try {
      step = testRunner.testCase.getTestStepByName("Delete Transfer OUT")
      step.setPropertyValue('preBookingCode', bookingCode)
    } catch(Exception e) {}

    step = testRunner.testCase.getTestStepByName("GET")
    step.setPropertyValue('prebookingId', bookingCode)

    try {
      step = testRunner.testCase.getTestStepByName("Check Confirm")
      step.setPropertyValue('bookingId', bookingCode)
    } catch(Exception e) {}

    step = testRunner.testCase.getTestStepByName("CONFIRM")
    step.setPropertyValue('preBookingId', bookingCode)
    step.setPropertyValue('price', price)
    step.setPropertyValue('description', description)
  }

 def transferSeats(slurperResponse) {
    def bookingCode = slurperResponse.bookingCode.toString()

    def step = testRunner.testCase.getTestStepByName("LIST SEATS GO")
    step.setPropertyValue('prebookingId', bookingCode)

    step = testRunner.testCase.getTestStepByName("LIST SEATS RETURN")
    step.setPropertyValue('prebookingId', bookingCode)

    try {
      step = testRunner.testCase.getTestStepByName("MIN SEAT PRICE GO")
      step.setPropertyValue('prebookingId', bookingCode)
    } catch(Exception e) {}
    
    try {
      step = testRunner.testCase.getTestStepByName("MIN SEAT PRICE RETURN")
      step.setPropertyValue('prebookingId', bookingCode)
    } catch(Exception e) {}
    
    step = testRunner.testCase.getTestStepByName("ADD SEATS GO")
    step.setPropertyValue('prebookingId', bookingCode)

    step = testRunner.testCase.getTestStepByName("ADD SEATS RETURN")
    step.setPropertyValue('prebookingId', bookingCode)

    try {
      step = testRunner.testCase.getTestStepByName("DELETE SEATS GO")
      step.setPropertyValue('prebookingId', bookingCode)
    } catch(Exception e) {}

    try {
      step = testRunner.testCase.getTestStepByName("DELETE SEATS RETURN")
      step.setPropertyValue('prebookingId', bookingCode)
    } catch(Exception e) {}

    step = testRunner.testCase.getTestStepByName("GET")
    step.setPropertyValue('prebookingId', bookingCode)

  }


}

context.setProperty( "booking", new PreConfirm(log,context,testRunner) )

</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="1868b924-79c3-4f07-bf7a-8d5c10948dc5" name="GET Booking / Prebooking"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="c583d8ef-41a2-49cd-86f0-f9a30d0089d4" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET Retrieves Prebooking and check" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="GET ..." id="337ccf3e-d3d2-411f-831f-2af93d318f2f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET ..." id="444ccd9d-ddf2-420f-be60-9245fe9e831a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/preBookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="732ee0b8-a2fc-42f2-9cc6-9a208ec69ff0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="fb3c0dda-c988-41e3-847b-d5fbb7802ca0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="63469032-f4f0-4b78-ac49-2819cb2d5478"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="ccfec704-cc63-478f-8484-cab458bf098a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="79940fae-70b3-41c6-bff5-0967b13ce2eb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="289ba832-8214-445e-b526-31ee81d5d737"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="f3190998-7158-45a6-8721-cbc50c98a6b3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="easyjet"/>
  <con:entry key="preBookingId" value="H00003194"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>fb91cd8e-80f4-4486-88ca-fbfc7dd642b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>05b4b766-0bd2-4a62-a613-849fc6fb322d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>167a0239-4d50-4198-b2da-d358baced8e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>18d7f2a7-6319-4737-aa7f-e624114ca50f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca32d545-4292-41bf-a8d6-258587339001</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a411c59-4505-4408-a654-c148c913afd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="753acc9d-0555-40e5-bb74-079cd96a2956" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET Retrieves a booking" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Get..." id="fe721c5a-f207-48e5-aea3-bb946477dc00"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get..." id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00003392"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Settlements" id="b26c5d90-ac4b-46e6-b371-6fb42cd47a18"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>hotelbeds</con:dbConnectionName><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://192.168.209.13:5432/hotelbeds?user=hotelbeds&amp;password=PASS_VALUE</con:connectionString><con:password>hotelbeds</con:password><con:query>Select B.id_booking, B.cod_booking, B.cod_market, B.amt_total_price,
  B.cod_currency, B.cod_status As estadobooking, B.cod_sub_status As
  subestadobooking, S.*
From booking B Inner Join
  flight_hotel_package HP On B.id_booking = HP.id_booking Inner Join
  settlement S On S.id_booking = B.id_booking Inner Join
  payment_order P On P.id_settlement = S.id_settlement
Where B.cod_booking = :cod_booking
Order By B.id_booking Desc</con:query><con:assertion type="GroovyScriptAssertion" id="627d2f51-43a0-4c27-8cd4-ebd8186fc7a3" name="Validacion Settlements"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Settlements.groovy"))
</scriptText></con:configuration></con:assertion><con:properties><con:property><con:name>cod_booking</con:name><con:value>108jueves05</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="37642b37-f739-4c20-9de3-1d26a5828e5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET Retrieves list of bookings" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Method 1 - Request 1" id="d548c0d3-268c-4910-870b-7c6dc73ff708"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="27459ba4-a8fa-4645-8ed9-ccd0a1b83b2e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c470b5ac-f89e-439f-8b21-df76f8dff602" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET List of booking filtered" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Return Booking From/To" id="110cc8c8-21c8-43ef-a2e1-7d49d29f36aa"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return Booking From/To" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return bookingCode" id="f26ef5e8-7a14-4151-9108-69d6147355ff"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return bookingCode" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "bookingCode": "101"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return companyCode" id="280bf6aa-4329-4ea4-aedd-9127d413ccea"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return companyCode" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "companyCode": "company"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return createdBookingDate" id="13059659-9442-4edf-84e0-c0c67e393f92"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return createdBookingDate" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "createdBookingDate": "2016-09-28T09:19:38.279032"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return beginningBookingDate" id="6ad534ae-4495-4e9b-9c50-953710781652"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return beginningBookingDate" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "beginningBookingDate": "2016-11-30T00:00"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return endBookingDate" id="673d9f22-3b60-4831-9af0-b65c42518706"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return endBookingDate" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "endBookingDate": "2016-12-04T00:00"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return totalBookingPrice" id="bf5ec24e-a2a5-434a-86f6-73f36a85f861"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return totalBookingPrice" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "totalBookingPrice": 1358.09
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return bookingStatus" id="16fbae26-d385-4f86-bc58-1c6aec3ee979"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return bookingStatus" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "bookingStatus": "Pending"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return marketCode" id="9f733f22-e587-43e3-ab81-5f86b80c6b58"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return marketCode" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "marketCode": "UK"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return serviceFeePrice" id="941f72e8-f841-4b72-a900-3d2cc76312c5"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return serviceFeePrice" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "serviceFeePrice": 17
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return serviceFeeMarkup" id="b2066e07-3c70-454c-a4f9-6d63048757bc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return serviceFeeMarkup" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "serviceFeeMarkup": 0
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return packageMarkup" id="e1dcec1d-5856-4bbd-8097-728f5ffe72e7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return packageMarkup" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "packageMarkup": 0
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return flightCode" id="cbd43b02-db8f-490a-85c0-c4ff8146f4a1"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return flightCode" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "flightCode": "string"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return flightMarkup" id="ac5fc01f-349d-43b5-ad52-eecec2c8a569"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return flightMarkup" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "flightMarkup": 0
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return hotelCode" id="ffe4d330-cd12-4825-8aac-a402f812f6ce"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return hotelCode" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "hotelCode": "175906"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return hotelMarkup" id="6ac34a0c-7be0-4c51-af7e-8ed767a41ad7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return hotelMarkup" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "hotelMarkup": null
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return leadPassengerName" id="fd22f937-d33e-4f04-baab-4769bd9f638f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return leadPassengerName" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "leadPassengerName": "Anna"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return leadPassengerLastName" id="cb3c0aca-0a9b-47c1-8f0f-5630ee077d1d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return leadPassengerLastName" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "leadPassengerLastName": "Marcilla"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>Accept-Language</con:entry><con:entry>whitelabelId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return leadPassengerMail" id="55ce119a-cf14-4b30-88f1-ba34445528b5" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return leadPassengerMail" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "leadPassengerMail": ""
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return transferCodIn" id="b4c7d15e-ae97-4338-a976-55cf317eaf4a"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return transferCodIn" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "transferCodIn": null
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return transferMarkupIn" id="a040d12b-01fa-4469-bcd6-f4844975bfb6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return transferMarkupIn" id="6592f3ed-a5f3-444a-95bb-ffd1419a6908" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "fromCreatedBookingDate": "2016-09-22T08:20:29",
  "toCreatedBookingDate": "2016-09-29T08:20:29",
  "transferMarkupIn": null
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/search</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelId" value="easyjet"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="953cd9d1-ac11-481c-97ab-776c70ff3621" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GET booking with email" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Retrieve booking with email" id="1fce2b0e-0d7b-48c0-84c1-78e76e47b3d0"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retrieve booking with email" id="fd1292b7-01d1-43da-b89e-d46bae1b8abf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.95/packagebookingservice/1.0/bookings/102EUR03</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="email" value="testbarcelona@gfi.es"/>
  <con:entry key="bookingId" value="102testSergimar1"/>
</con:parameters><con:parameterOrder><con:entry>bookingId</con:entry><con:entry>email</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="165c5fd6-d1e2-4d21-bb65-42611fd95962" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Send - HTML" searchProperties="true" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Send" id="bc5968a5-acec-4351-8eac-09b4a7e8a8b8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}/send" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Send" id="e936af8e-f271-41b9-8d70-03f15dd9ef54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>dfzsdf</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/100/send</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="102provaScript65"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="67441fce-77a9-4ac9-9f82-d71346832a18" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Render - PDF" searchProperties="true" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Render" id="54863739-cdbe-407e-b12f-254279192fc7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}/render" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Render" id="97c5c099-4166-40a2-9cd4-cbca0b0e367a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/bookings/bookingId/render</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="102provaScript65"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="54740fad-c250-40db-801a-008903a25ba6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verify preBooking with Error" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="102 - Prebooking (2PAX) OK" id="e28a682c-7aeb-486a-9cfc-74b9f9985c0d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102 - Prebooking (2PAX) OK" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": null,
		"flights": [{
		        "amtMarketPrice": 549,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 80,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="102Err - Prebooking (2PAX) con 3 infantes." id="ce0f4823-f3ec-4930-a9e8-30b6c2478655"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102Err - Prebooking (2PAX) con 3 infantes." id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX) con 3 infantes",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 2
		},{
			"age": 0,
			"personType": "INF",
			"hasInfant": false,
			"paxNumber": 3
		}, {
			"age": 0,
			"personType": "INF",
			"hasInfant": false,
			"paxNumber": 4
		},{
			"age": 0,
			"personType": "INF",
			"hasInfant": false,
			"paxNumber": 5
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": null,
		"flights": [{
		        "amtMarketPrice": 549,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 80,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2,3,4,5],
						"roomCode": "QUA.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="102Err - Prebooking (2PAX) sin pasajeros" id="c5884a05-4000-4203-bcb5-89c84ad6ed1d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102Err - Prebooking (2PAX) sin pasajeros" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX) sin pasajeros",
	"paxes": [],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": null,
		"flights": [{
		        "amtMarketPrice": 549,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 80,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="102Err - Prebooking (2PAX) WTH leg" id="e459cea0-8613-4508-a752-a45f014e0c32"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102Err - Prebooking (2PAX) WTH leg" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX) WTH leg",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": null,
		"flights": [{
		        "amtMarketPrice": 549,
		        "flightSegments": [{
						"flightLegs": []
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 80,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="113a - Prebooking ( 1 pax  + Infant not assigned ) - Err" id="8d8884fd-2c27-4bad-898e-f65cc7b4c0ae"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="113a - Prebooking ( 1 pax  + Infant not assigned ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "INF",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": null,
		"flights": [{
		        "amtMarketPrice": 549,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 80,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="113b - Prebooking ( 1 pax  + Infant assigned twice) - Err" id="50d340d0-6dd7-4fe7-9c91-aeadd1c686f5"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="113b - Prebooking ( 1 pax  + Infant assigned twice) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "113b",
	"description" : "113b - Prebooking ( 1pax + INFassignedTwice)-Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 16,
			"personType" : "CH",
			"hasInfant" : true,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "AAYFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_ida}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="114a - Prebooking ( 1 pax  + Infant assigned twice) - Err" id="94f577d3-e1aa-47c6-831d-f9c6143d83e8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="114a - Prebooking ( 1 pax  + Infant assigned twice) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "114",
	"description" : "114 - Prebooking (1pax+INF assig twice)-Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 16,
			"personType" : "CH",
			"hasInfant" : true,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "AAZFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_ida}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="114b - Prebooking ( 1 pax  + wrong paxNumber) - Err" id="eb1521c0-efbb-4102-af9d-c2ab3126efcf"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="114b - Prebooking ( 1 pax  + wrong paxNumber) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "114",
	"description" : "114 - Prebooking (1 pax +wrong paxNumber)-Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : null
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : null
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : null
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : null
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null     							
								}]
						}]
				}],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABAFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2,3,4],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus": "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="115 - Prebooking ( 4 pax 1 way  not assigned rooms ) - Err" id="ec98e44e-921d-447e-acaa-4a08f57d0f44"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="115 - Prebooking ( 4 pax 1 way  not assigned rooms ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "115",
	"description" : "115 - Prebooking (4 pax 1 way not assigned rooms)",	
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABBFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_ida}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="116 - Prebooking ( 1 pax return wrong dates ) - Err" id="7b8020aa-4079-490c-9c66-21e8f478224f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="116 - Prebooking ( 1 pax return wrong dates ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "116",
	"description" : "116 - Prebooking (1 pax return wrong dates)-Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",   
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null  		
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABCFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="118 - Prebooking ( 4 pax 2 rooms, wrong assigned ) - Err" id="2474fabb-1e08-4ca6-a8f2-586e78fa0bc0"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="118 - Prebooking ( 4 pax 2 rooms, wrong assigned ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "118",
	"description" : "118 - Prebooking(4pax 2rooms,wrong assigned) - Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null		
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "175906",
				"description" : "EL MEJOR HOTEL EN BARCELONA",
				"arrivalDate" : "2016-10-10",
				"bookingCode" : "ABEFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 1,
				"price" : 200,
				"reference" : "CERTAIN",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [6],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}, {
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [7,8],
						"roomCode" : "896",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_ida}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="120 - Prebooking ( 1 pax  + wrong paxNumber) - Err" id="e3e82d9f-e812-47ac-9d1f-6849d3d1cde4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="120 - Prebooking ( 1 pax  + wrong paxNumber) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "120",
	"description" : "120 - Prebooking (1 pax +wrong paxNumber)-Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : null
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : null
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : null
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : null
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null    							
								}]
						}]
				}],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABGFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2,3,4],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus": "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="121 - Prebooking ( Wrong customer paxNumber ) - Err" id="3f75bf67-1bfd-4d88-a57e-e1b4eef3764f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="121 - Prebooking ( Wrong customer paxNumber ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "121",
	"description" : "121 - Prebooking (Wrong customer paxNumber) - Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "AD",			
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 11,
			"personType" : "CH",			
			"hasInfant" : false,
			"paxNumber" : 3
		},		
		{
			"age" : 0,
			"personType" : "INF",			
			"hasInfant" : false,
			"paxNumber" : 4
		},
		{
			"age" : 0,
			"personType" : "INF",						
			"hasInfant" : false,
			"paxNumber" : 5
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null     							
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABHFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="122 - Prebooking ( Wrong customer personType ) - Err" id="8508ff86-1ec9-4990-8560-72b77985629d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="122 - Prebooking ( Wrong customer personType ) - Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "122",
	"description" : "122 - Prebooking (Wrong customer personType) - Err",
	"paxes" : [{
			"age" : null,
			"personType" : "CH",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "AD",			
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 11,
			"personType" : "CH",			
			"hasInfant" : false,
			"paxNumber" : 3
		},		
		{
			"age" : 0,
			"personType" : "INF",			
			"hasInfant" : false,
			"paxNumber" : 4
		},
		{
			"age" : 0,
			"personType" : "INF",						
			"hasInfant" : false,
			"paxNumber" : 5
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null     							
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABIFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="126a - Prebooking ( 2pax return + 2INF + ANC LUG4xSEOx3 ) Err" id="f22b254d-7560-4db5-987f-b1925ea3a07a"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="126a - Prebooking ( 2pax return + 2INF + ANC LUG4xSEOx3 ) Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "126",
	"description" : "126a - (2pax return + 2INF + ANC LUG7 SEO1) Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" :  [
	{
      "code": "LUG",
      "description": "LUG",
      "quantity": 7,	  
	  "type": "LUG",
      "segmentReference": 0,
	  "price" : 19
	 },
	{
      "code": "LUG",
      "description": "LUG",
      "quantity": 7,	  
	  "type": "LUG",
      "segmentReference": 1,
	  "price" : 19
	 },	 
	 {	 
      "code": "SEO",
      "description": "BICL",
      "quantity": 1,
	  "type": "LUG",	  
      "segmentReference": 0,
	  "price" : 35
	 },
	 {	 
      "code": "SEO",
      "description": "BICL",
      "quantity": 1,	  	  
      "segmentReference": 1,
	  "price" : 35
	 }	 	 
	],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null    								
							}
						]
					} 
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABMFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "CERTAIN",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="126b - Prebooking ( 2pax return + 2INF + ANC LUG4xSEOx3 ) Err" id="15cf1514-9058-45c7-9ada-6288adb62464"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="126b - Prebooking ( 2pax return + 2INF + ANC LUG4xSEOx3 ) Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "126",
	"description" : "126b - (2pax return +  ANC LUG6 SEO1) Err",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 2
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" :  [
	{
      "code": "LUG",
      "description": "LUG",
      "quantity": 6,	  
	  "type": "LUG",
      "segmentReference": 0,
	  "price" : 19
	 },
	{
      "code": "LUG",
      "description": "LUG",
      "quantity": 6,	  
	  "type": "LUG",
      "segmentReference": 1,
	  "price" : 19
	 },	 
	 {	 
      "code": "SEO",
      "description": "BICL",
      "quantity": 1,
	  "type": "LUG",	  
      "segmentReference": 0,
	  "price" : 35
	 },
	 {	 
      "code": "SEO",
      "description": "BICL",
      "quantity": 1,	  	  
      "segmentReference": 1,
	  "price" : 35
	 }	 	 
	],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null     								
							}
						]
					} 
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABNFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "CERTAIN",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="131 - Prebooking ( 1pax return + SEO go ) Err" id="68e708df-80cb-4046-a08c-4c21455e3271"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="131 - Prebooking ( 1pax return + SEO go ) Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "131",
	"description" : "131 - Prebooking ( 1pax return + SEO go )",
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"ancillaries" : [
     {
      "code": "SEO",
      "description": "BICL",
      "quantity": 1,
      "segmentReference": 35
	 } 
	],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries":[{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null     	  							
								}]
						}]
				}],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABSFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "CERTAIN",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="133 - Prebooking ( 2 pax return wrong idPassenger ) Err" id="30bbfcaa-f574-41c7-8d1f-8653630eddbc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="133 - Prebooking ( 2 pax return wrong idPassenger ) Err" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "133",
	"description" : "133 - Prebooking ( 2pax return wrong idPax ) Err",	
	"paxes" : [{
			"age" : null,
			"personType" : "AD",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "AD",
			"hasInfant" : false,
			"paxNumber" : 1
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"cacheType" : "PWCache",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"flights" : [{
				"itineraries" : [{
						"segments" : [{
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "ABVFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2,3],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus": "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "CERTAIN",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_ida}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Testing" id="406c5901-a40c-4bf7-8485-90f9d19d6540"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Testing" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "110",
	"description" : "110 - Prebooking ( 2 pax return + 3Infant  ) Err",	
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"country" : "desccountry",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "${#Project#paxesLastName}",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"agency": {
		"company": null,
		"office": null,
		"userAgent": null
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "Mr",
			"paxNumber" : 1,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "AD",
			"firstName" : "Marta",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "Mr",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 4,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 3",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 3 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 5,
			"customer" : 0
		}
	],
	"market": "${#Project#market}",
	"category" : "Escapadas Invierno",
	"currency": "${#Project#currency}",
	"purchaseToken" : null,
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "110 - Prebooking ( 2 pax return + 3Infant  )",
		"productMarkup" : null,
		"status" : "ACTIVE",
		"subStatus" : null,
"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status": "ACTIVE",
				"subStatus" : null,
				"itineraries" : [{
						"segments" : [{
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
						        }]
					    },{
						"segments" : [{
								"segmentNumber" : 1,                        
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null    							
								}]
						}]
				}],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1,2,3,4,5],
						"roomCode" : "895",
						"status" : "ACTIVE",
						"subStatus" : null,
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "ACTIVE",
				"hotelSubStatus" : null,
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b43ed7fa-7cdc-4ea8-96ec-415e949c03e9" name="Valida_Err"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_err.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce0f4823-f3ec-4930-a9e8-30b6c2478655</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5884a05-4000-4203-bcb5-89c84ad6ed1d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30bbfcaa-f574-41c7-8d1f-8653630eddbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fb256e49-c495-4aba-8837-b2e51a3113c8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get bag Rules &amp; sportsEquipements" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Retrieve Flight Rules 100 8277" id="c6f3054b-9cf6-422c-bee5-eacb2ed70424"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flightRules/{flightNumber}" methodName="Retrieve Flight Rules" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retrieve Flight Rules 100 8277" id="86e3c683-54bb-4fb8-b6f2-5edc3a403111" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/preBookingId/flightRules</con:originalUri><con:assertion type="GroovyScriptAssertion" id="301ff422-6adb-418a-8e02-aade38db31da" name="Valida bagrules  &amp; sportsEquipmentRules"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsFlightPath = context.expand( '${#Project#scriptsFlightPath}' )

evaluate(new File(projectPath, scriptsFlightPath + "Valida_bagrules_&amp;_sportsEquipmentRules.groovy"))

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelID" value="EASYJET"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="flightNumber" value="8277"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelID</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Content-Type</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Retrieve Flight Rules 101 8274" id="f897df2d-e263-4340-840e-7e48e37ef8e6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flightRules/{flightNumber}" methodName="Retrieve Flight Rules" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retrieve Flight Rules 101 8274" id="86e3c683-54bb-4fb8-b6f2-5edc3a403111" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/preBookingId/flightRules</con:originalUri><con:assertion type="GroovyScriptAssertion" id="301ff422-6adb-418a-8e02-aade38db31da" name="Valida bagrules  &amp; sportsEquipmentRules"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsFlightPath = context.expand( '${#Project#scriptsFlightPath}' )

evaluate(new File(projectPath, scriptsFlightPath + "Valida_bagrules_&amp;_sportsEquipmentRules.groovy"))

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelID" value="EASYJET"/>
  <con:entry key="preBookingId" value="101"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelID</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Content-Type</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Retrieve Flight Rules 101 8277" id="a94746aa-72ae-4261-b6af-aef8e92cfbfb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flightRules/{flightNumber}" methodName="Retrieve Flight Rules" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retrieve Flight Rules 101 8277" id="86e3c683-54bb-4fb8-b6f2-5edc3a403111" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/preBookingId/flightRules</con:originalUri><con:assertion type="GroovyScriptAssertion" id="301ff422-6adb-418a-8e02-aade38db31da" name="Valida bagrules  &amp; sportsEquipmentRules"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsFlightPath = context.expand( '${#Project#scriptsFlightPath}' )

evaluate(new File(projectPath, scriptsFlightPath + "Valida_bagrules_&amp;_sportsEquipmentRules.groovy"))

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="whitelabelID" value="EASYJET"/>
  <con:entry key="preBookingId" value="101"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="flightNumber" value="8277"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelID</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Content-Type</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="849b02ff-d03b-4417-b7d5-4222be537b5b" name="Bateria Basica"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="b70976ff-e31f-41dc-bdee-e25ae31a44a1" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="101 - (1PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="162c04cc-8f28-4ea8-97b1-2d3fb38d6e8e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "promocode": null,
    "paxes": [
        {
            "hasInfant": false,
            "age": null,
            "personType": "ADT",
            "paxNumber": 1
        }
    ],
    "origin": "${#Project#departureAirportIATA_ida}",
    "ancillaries": [
        
    ],
    "agency": {
        "office": "office",
        "userAgent": "userAgent",
        "company": "company"
    },
    "bookingBeginningDate": "${#Project#departureDateTime_ida}",
    "destination": "${#Project#arrivalAirportIATA_ida}",
    "userType": "${#Project#userType}",
    "currency": "${#Project#currency}",
    "category": "GT03-BEAC Beach Holidays",
    "market": "${#Project#market}",
    "description": "PRUEBA 101 - Prebooking (1PAX)",
    "bookingEndDate": "${#Project#departureDateTime_vuelta}",
    "flightHotelPackage": {
        "amtMarketPrice": 100,
        "flights": [
            {
                "amtMarketPrice": 100,
                "flightSegments": [
                    {
                        "flightLegs": [
                            {
                                "bookingClass": "Y",
                                "departureAirportIATA": "${#Project#departureAirportIATA_ida}",
                                "flightCode": null,
                                "tariffClass": "${#Project#tariffClass}",
                                "arrivalDateTime": "${#Project#arrivalDateTime_ida}",
                                "arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
                                "departureDateTime": "${#Project#departureDateTime_ida}",
                                "flightNumber": "${#Project#flightNumber_ida}",
                                "flightLabel": null,
                                "airline": "EasyJet"
                            }
                        ]
                    },
                    {
                        "flightLegs": [
                            {
                                "bookingClass": "Y",
                                "departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
                                "flightCode": null,
                                "tariffClass": "${#Project#tariffClass}",
                                "arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
                                "arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
                                "departureDateTime": "${#Project#departureDateTime_vuelta}",
                                "flightNumber": "${#Project#flightNumber_vuelta}",
                                "flightLabel": null,
                                "airline": "EasyJet"
                            }
                        ]
                    }
                ]
            }
        ],
        "tourOperator": "string",
        "hotels": [
            {
                "amtMarketPrice": 100,
                "hotelCodes": [
                    {
                        "code": "${#Project#hotelGIATACode}",
                        "type": "GIATA"
                    },
                    {
                        "code": "${#Project#hotelBedsCode}",
                        "type": "HOTELBEDS"
                    }
                ],
                "lengthOfStay": "${#Project#lengthOfStay}",
                "arrivalDate": "${#Project#arrivalDateTime_ida}",
                "productSupplier": "HOTELBEDS",
                "currency": "${#Project#currency}",
                "rooms": [
                    {
                        "roomCode": "DUS.ST",
                        "personAssignaments": [
                            1
                        ],
                        "boardCode": "${#Project#boardCode}"
                    }
                ],
                "destination": "${#Project#arrivalAirportIATA_ida}"
            }
        ]
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ed878b95-4448-4c4d-8002-868fe41e40a6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="497ce0eb-9a3e-48ca-bd7e-74451cf25b14"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="9839771b-bbea-4331-918c-73b0d5686bc7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="13ad78b4-b76b-42fd-abd3-e9055dcdcdb7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="b4b6c4ad-eb33-4a14-a340-d5f0208e7453"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="155760a6-df96-4950-b4a1-8f36b3efe227"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="03cd5e41-7643-45dc-8888-78b2e2592b2c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="9cb18097-ea59-46aa-9af3-7edbce04d536"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="493776bb-58dd-46de-9450-add3e2bef69e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "paxes": [
        {
            "dateOfBirth": "1975-06-28",
            "middleName": "MA",
            "lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
            "hasInfant": false,
            "customer": 0,
            "paxNumber": 1,
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "87654321X",
                "effectiveDate": "2010-06-28",
                "docIssueLocation": "BARCELONA",
                "docLimitations": "string",
                "docCustomerName": "ANNA M MARCILLA"
            },
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "addresses": [
                {
                    "mail": "mail@gfi.es",
                    "countryName": "descCountry",
                    "streetAdditional": 122,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "66666666666",
                            "type": "FAX"
                        },
                        {
                            "number": "99999999999",
                            "type": "MOBILE"
                        },
                        {
                            "number": "88888888888",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "00000",
                    "street": "ARAGO",
                    "primary": true,
                    "stateProvince": "MATARO",
                    "country": "${#Project#market}",
                    "city": "BARCELONA"
                },
                {
                    "mail": "mail2@gfi.es",
                    "countryName": "MALTA",
                    "streetAdditional": 123,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "11111111",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "11111",
                    "street": "MERCIEQA",
                    "primary": false,
                    "stateProvince": "SLIEMA",
                    "country": "MALTA",
                    "city": "SLIEMA"
                }
            ],
            "personType": "ADT",
            "firstName": "Anna"
        }
    ],
    "order": {
        "amount": "${#price}0",
        "description": "${#description}",
        "shopperEmail": "shopper@provider.com",
        "currency": "${#Project#currency}"
    },
    "client": {
        "middleName": "MA",
        "dateOfBirth": "1983-12-26",
        "lastName": "Marcilla",
        "paxReferenceNumber": 1,
        "travelDocumentData": {
            "docType": "DNI",
            "docIssueAuthority": "string",
            "expireDate": "2020-06-28",
            "docId": "87654321X",
            "effectiveDate": "2000-06-28",
            "docIssueLocation": "BARCELONA",
            "docLimitations": "string",
            "docCustomerName": "ANNA MARCILLA"
        },
        "gender": "MALE",
        "firstName": "Anna",
        "addresses": [
            {
                "mail": "testbarcelona@gfi.es",
                "countryName": "descCountry",
                "streetAdditional": "C/Passeig de Gracia 46",
                "location": "OFFICE",
                "telephones": [
                    {
                        "number": "555",
                        "type": "HOME"
                    }
                ],
                "zipCode": "08015",
                "street": "C/Passeig de Gracia 44",
                "primary": true,
                "addressCode": "ssss",
                "stateProvince": "Mataro",
                "country": "${#Project#market}",
                "city": "Barcelona"
            },
            {
                "mail": "testmadrid@gfi.es",
                "countryName": "descCountry",
                "streetAdditional": "C/ Paseo 46",
                "location": "OFFICE",
                "telephones": [
                    {
                        "number": "555",
                        "type": "HOME"
                    }
                ],
                "zipCode": "08015",
                "street": "C/ Paseo 44",
                "primary": false,
                "addressCode": "ffff",
                "stateProvince": "Fuenjirola",
                "country": "${#Project#market}",
                "city": "MADRID"
            }
        ],
        "comments": [
            {
                "commentText": "Vacaciones invierno",
                "commentType": "H"
            }
        ]
    },
    "deposit": "${#deposit}",
    "creditCardInfo": {
        "cardFeePercentage": "${#ppctPayment}",
        "ptotalPriceWithFee": "${#ptotalPriceWithFee}",
        "cardHolderName": "A Shopper",
        "creditCardVendorCode": "${#pcodPaymentMethod}",
        "validThruYear": "2020",
        "cardFee": "${#cardFee}",
        "billingAddress": {
            "phone": "646968857",
            "postalCode": "CB94BQ",
            "address": "47A",
            "countryCode": "GB",
            "city": "Cambridge"
        },
        "cardDescription": "${#pstrDescription}",
        "cardNumber": "4444333322221111",
        "validThruMonth": "01"
    }
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="e7cced04-9589-4a10-9855-e200de0e1072"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0ecf4d18-b9a7-415a-b2d4-064a51df85fa"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="1c9a4005-da7b-410b-b3cd-6b57f7dc976a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="11d8d10e-08c3-47a2-b77c-e07f675ca614"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b5b1452c-5a84-4918-9077-c2d672342f53"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="c9b03641-b9e3-432e-80e8-47eb689425fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="253ffc8c-8180-4143-a7d9-e1dc9d5822b7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="3c3e3ae9-59c1-49e2-a201-b50d888812e5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="360.75"/>
  <con:entry key="pdescription" value="101 - Prebooking (1PAX)"/>
  <con:entry key="deposit" value="75.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000683"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="360.75"/>
  <con:entry key="description" value="PRUEBA 101 - Prebooking (1PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a6a10bc9-5f0d-4729-b662-3463b59cb357" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="60ae9d0e-8f57-4061-82a8-f848805cef17"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "2PAX ${#Project#market} ${#Project#currency} ${#Project#userType} ${#Project#tariffClass}",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 600,
		"flights": [{
		        "amtMarketPrice": 440,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 170,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="b9fdc4db-7450-4902-9982-2476a6f20b8d"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)

confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="f91bf089-b57f-46b3-98be-4f078dd034a4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				 "telephones":  
				    [{
               "number": "",
               "type": "HOME"
          		  },{
               "number": "677445544",
               "type": "MOBILE"
            }
         ],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "aaa",
			"gender" : "MALE",
			"lastName": "apellidoPaxUno${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",						
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "aaa",
			"gender" : "MALE",
			"lastName": "apellidoPaxDos${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="554.70"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000684"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="1.60"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="554.70"/>
  <con:entry key="description" value="2PAX FR EUR CUSTOMER Regular0"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b5c1ee28-e663-42ab-8b73-4bfc07610fd0" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX) - isChipped" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="dfebce06-72b9-45b7-8ee8-7d35ccfb016b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 540,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": null,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="b676d928-73f4-4ce2-93c7-6715d9304933"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="823a67a1-4b98-4afa-9ff4-8ba3f497711d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0,
			"isChipped": true
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0,
			"isChipped": true
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="554.70"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000685"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="554.70"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a249a9a4-3217-4088-b6ea-f7be8221162b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="103 - (3PAX) - 1 rooms" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="339a20ff-28ca-4b6b-aaad-e3793e618550"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description" : "103 - Prebooking (3PAX)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-SKII Skiing Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
        ],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "TPL.ST"
			}],
		"currency": "${#Project#currency}"
      }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="87936d79-0234-493c-b7da-f856fbba1a5c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b69fa639-7ef5-411e-a690-6bd9aef18302"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="39241795-fa9e-417d-8861-770a23af6752"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="9c142f32-be59-4ff6-9d61-4e6c183d1bd7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="77b8fe98-4e64-42c1-abfb-50ed3c80a149"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="6aa5c15f-69f5-4642-a2df-0dc0c00e63d8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="2f0fd60d-2361-4f2e-9dc3-170452632130"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="e0b145ae-3ce7-413c-aaa7-84bec0ffd9ac"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="b69febbe-fefb-477a-8ec6-0ea8c59c65cb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],	
   			    "zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 3
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="2a9ee667-e1e6-4e35-9863-9021bb440cb5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="cf4a3f6f-17bf-4e15-a82a-755c70679c35"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b86884e3-f7d5-4187-840d-a902bf7ba71c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d962cf14-f2e5-48eb-9b02-791363c8ed4f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="0c738472-16be-4cc7-9fbb-4433bba24c32"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1eb4ca13-8c1a-4492-acd3-7518e7ed9a74"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="ea5e3829-a4ba-42cf-99b3-8f9735585270"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="66e8a49b-e907-4bc6-8dbe-da5451dc0055"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="844.70"/>
  <con:entry key="pdescription" value="103 - Prebooking (3PAX)"/>
  <con:entry key="deposit" value="225.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000686"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="2.40"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="844.70"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="103 - Prebooking (3PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="60a88a7d-9287-4048-9bb3-9c76185abd8b" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="104 - (1PAX + 1INF + 1CHD) - no dispo" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="97d418f1-9b67-4bef-b78b-0b3137997126"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "104 - Prebooking (1PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
			],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Confirmando..." id="e6b55562-0164-473d-a5de-ac00235e7866"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="038ebbf8-f962-4db9-81ab-47fbfbe01146"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="4998.87"/>
  <con:entry key="pdescription" value="104 - Prebooking (1PAX + 1INF + 1CHD)"/>
  <con:entry key="deposit" value="160.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="SW"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Maestro"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="null"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="dc3e46de-590f-4452-8f9a-b547af674beb" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="105 - (2PAX + 1INF + 1CHD)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="e3b7bb72-0c6f-45de-b6a2-7931e8ef0eee"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "105 - Prebooking (2PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
			],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3,4],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Confirmando..." id="159035b9-cfdb-4430-abe6-cccd0b8d9f03"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="635e9871-09c6-4d92-bef2-1eadc0d0dd0a"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}, {
			"dateOfBirth" : "1990-06-28",
			"age" : null ,
			"personType" : "ADT",
			"firstName" : "ADULTO",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ADULTO",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2021-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="994.71"/>
  <con:entry key="pdescription" value="104 - Prebooking (1PAX + 1INF + 1CHD)"/>
  <con:entry key="deposit" value="225.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000687"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="994.71"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="105 - Prebooking (2PAX + 1INF + 1CHD)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c2f81aa8-b89f-4359-b9ac-ea5cfa8a3272" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="106 - (2PAX + 1CHD)" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="2e2d3e8e-9888-4f46-9347-6f5c6a1f0047"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{	
	"description" : "106 - Prebooking (2PAX + 1CHD)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},{
			"age" : 7,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT02-HO#ST02-BH Budget Breaks",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "TPL.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="2bc90172-3649-456c-a28a-8ea8d2603006"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="22464e15-11f1-47f6-a94c-50c397d8d78a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="1c70fea6-6686-428d-9d2a-6a4fc5a0ae49"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4457c7b1-049a-40d6-b96a-bd291f88b6a3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="2f48398b-6e66-4fb5-8f82-0a3419848f89"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f618c61c-4bf9-4eae-baac-4c64054bd1d5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="2394319a-1469-43c0-9bae-ee6df4feec2c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="ba6fe6f8-4321-4032-bc97-7826db58c97b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)

confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="13c8c3a1-dba0-4273-8083-00d362906d88"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 6,
			"personType" : "CHD",
			"firstName" : "cHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="559c212e-8442-45d4-a718-39170eec87a0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="43ec6dba-bc12-479b-bd68-cc00006d3f0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="9bb42f02-568a-4014-a5e7-bee08f55c645"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="224b7d51-312c-4712-83b3-75c5c6951fd5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="35f6e484-81a5-415c-bec5-cc73eb9e9c4d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="70d28e2e-4bb7-4810-8ab4-c8f4901d0aec"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1ad85304-1d3d-4520-8c15-1cce701783ba"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="a4dc9106-f16e-4c0e-bfb2-88d324ccc69b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="882.06"/>
  <con:entry key="pdescription" value="106 - Prebooking (2PAX + 1CHD)"/>
  <con:entry key="deposit" value="225.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000688"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="882.06"/>
  <con:entry key="description" value="106 - Prebooking (2PAX + 1CHD)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="35f4ed9a-760d-4e5d-bef2-7166f3f7fd19" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="108 - (2PAX + 2INF)" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="c38f3b26-bb10-49ae-8473-dc9bbe3349e7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "108 - Prebooking (2PAX + 2INF)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 1,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 1,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT02-HO#ST02-BH Budget Breaks",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3,4],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="477866b3-7a0e-4170-916f-eb6c06d23a3c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="9c7eb08b-9d3a-4e5a-b2d2-642f98d35beb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a3bc1a7-72bd-441b-a7b6-9a35c1421047"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="bd087cec-4e9b-4c2b-9cd2-3fd214a899a6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="2679fb09-c3e0-45df-8853-ee2a06ba61e2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="ba4e435b-3532-4a50-bb47-d21006dcd8eb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="3397b64d-be39-45d2-8633-9c67d12379e3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="1e5acf0e-bd3a-4e7d-8790-5e8f9b476a77"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="e78b9977-edd4-4622-abe5-94fd0a1f55a5"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="e10e8695-1f3a-4d1a-99d3-d10c940f59b2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="004cfda9-1dc2-42fe-9b5b-dfc697995877"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0e77abd8-e112-4ac9-b31a-25815d51dc19"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="42819960-dbe6-44b2-9f3e-5b7dbf554b56"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="8aeac3ce-5a53-4baa-bf1e-07d79041b383"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="ef5d4cc2-f9a4-4374-9a2f-b3ea3a4ff840"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f4b9f65a-08c9-4c1a-8ab0-7f2e9c2c1d0c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="0f8b9581-2cd9-4f86-8d0a-ecc851ed978d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="955.64"/>
  <con:entry key="pdescription" value="108 - Prebooking (2PAX + 2INF)"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000689"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="955.64"/>
  <con:entry key="description" value="108 - Prebooking (2PAX + 2INF)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e8e12d26-d11a-4645-ae4f-5c8f9c06ffc1" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="130 - (6PAX + 3INF )" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="f5e5dc68-440a-4e21-955c-45642ba298e8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "130 - Prebooking (6PAX + 3INF + 1SEO)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 3
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 5
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 6
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 7
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 8
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 9			
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" :  [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,7],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4,8],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [5,6,9],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="659edae8-5aea-4431-840a-9cf758b43895"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d311a789-6f87-4d76-8dfc-ae90f703f125"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="199927e8-57db-4e62-ab18-50c966fb1e43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="c7baf28d-2665-42bc-99af-fa750a47d48f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23685440-2341-4e89-a9d1-c37f432b64f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="bf683833-8951-4032-b0fe-5ae378d5bbee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="e25cd7e4-6df0-4869-9b44-ac823f16a2dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="2f0bb4c3-9540-4793-94ae-6eaed50f8ff5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="9d93c621-a9ea-425a-9eb2-49dd3434b199"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 3
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 5
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 6
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 7
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 8
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 3",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 3 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 9			
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9977e087-ffa9-4bf9-919f-46cad86aad69"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="9953c431-2c7e-4632-bc66-2b45a33efb1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ccdb8ce6-b31a-4693-bba1-5802344fe668"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="f9fd633d-c60f-4947-99a1-536debacd30c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="7dac3771-3ac9-4920-8d88-afce88e71370"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="df313567-b331-4910-961f-3b3a3d1f8652"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="af406eac-b4ae-46a0-93ff-66d5c118d49f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="dcc53e30-ef55-4874-8031-dae9087503f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2246.34"/>
  <con:entry key="pdescription" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="4.80"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="price" value="2246.34"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f7b6e8d2-2743-49b5-9216-17ced428ef83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="109 - (4PAX + 2ROOMS)" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="7bf64058-7e5b-4fe8-af05-313434fbdade"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description" : "109 - Prebooking (4PAX + 2ROOMS)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-FAFR Family Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			},
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],

		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0aa89ee-deec-46fa-8553-1b986fbf436f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="59023b5d-c3b8-4820-8728-c42e41e36667"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="26daf41f-1ed8-4469-9964-f7d96e74ac91"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4efb33d4-33a4-4e27-ab00-c448ea908429"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="03c34afb-8e58-47a2-af60-4816e58e6c1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e96a5b42-8dc3-47b4-9a2a-44459cda3967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="14fdfe81-e2e4-41a7-9950-efef22e95967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="7ca5a32d-ee80-4292-92a9-0c0d1882abda"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="9627880c-f2e3-42dd-b47c-c4e2873bcd79"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1970-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Raquel",
			"gender" : "FEMALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Raquel M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="d1116aa3-964d-423c-81ee-12f9c035fb64"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="ea6d31c7-9217-4afb-aefe-92d4f48fad7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f1fcdf55-ba12-49d7-8549-ac76ec43f45f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a8aca26-ba1c-49d0-baab-18eb2d277434"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="a68e8ada-17c3-4f88-a2e5-511b3154390b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23501385-b09a-4849-97eb-0dc5ce26c1cb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3460e554-0df5-4dd3-a511-437a969af088"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d22cb27-54a1-4db7-b363-f771ed3ade5d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1445.56"/>
  <con:entry key="pdescription" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="H00000600"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="price" value="1445.56"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="84909ff0-6ce5-4bc0-b7c1-8d78c8e887ad" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="129 - (2PAX + 1INF ) assig automatica" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="2cb4a416-255b-4a8e-897c-e7c3ffaadbf4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{	
	"description" : "129 - (2PAX + 1INF ) assig automatica",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"paxNumber" : 2
		},
		{
			"age" : 0,
			"personType" : "INF",
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
    "seats": [], 	
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "TPL.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="82c83b25-bbe9-4c6a-9bf0-d349fa24c09c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="7dff8e93-aa99-4386-8e5e-13303955acd4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="00ff07d4-727b-4054-bcd3-4380827a0f37"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="5cfe388a-939a-4b5f-bdc0-706f2de69d4e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="bcf30b14-dc25-4fe7-9f3b-4b88a99994cf"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="45712810-28d8-410e-89e6-c75d514c5c65"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d2facc01-9324-4e97-892e-aebcd652b36d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="490753b8-c9e3-4bf1-b950-842a71e4c9d7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="035e4660-50c0-4134-8acc-30930358400a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="2578e617-8d27-4e89-a0bb-295faf08acb2"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebeUno",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="a0ee70e3-fc3e-4688-b14d-405261a2911d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0a83a882-b400-4830-b4cb-a905ef2358b6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="db6369a4-9580-4d6b-b5e1-62327e142255"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="962a5956-7ab3-4626-b377-7c62dbe9f455"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2ba486da-0bfe-4b46-9bcd-7cbf73f7ca10"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="4d74fa94-5b84-48c0-a647-0903bcdc7d9d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="884fc121-5f1d-4251-aad2-2325f7c8cfa4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="763ab1ad-ce7b-4449-b34d-04cbfd50defc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="b61e3b69-23d1-401b-870f-91b2f067920b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="904.39"/>
  <con:entry key="pdescription" value="129-Prebooking(2PAX+1INF+3SEATS-hasInfant=false)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value=""/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="904.39"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>description</con:name><con:value>testanna</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="0eab38ce-baec-44d6-8037-c1cfa297d8e7" name="Bateria Seats"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="fbb71664-c944-4665-828d-e326b43c5a83" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Seats 102 - (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="e4588195-e4dd-48cc-99f7-8ef22a4d6c8c"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 0,
		"flights": [{
		        "amtMarketPrice": 0,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 0,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="e3b6fae0-fe79-4950-a5b8-97fe69355ae0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="2fc2b860-7e2c-42a2-a38b-b7b88318a305" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000696"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="5d18c6c2-6d74-40f7-9c2e-1346a0bbae80" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000696"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="3103f690-7c8f-492d-995a-fb7367bb4fa6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="45126327-3a84-49a2-ab6c-038cfe23b734" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000696"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="6c9b9b34-d3fb-4062-8cf7-03f1cbfdb84a" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000696"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="9432ec59-5657-43c8-ae13-68f79112b84a"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000696"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="824a1329-cb0a-4f82-af37-3f153dc31218"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="8bdc162f-dc8c-4d94-bb6a-f03844566c5d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="814.91"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000696"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="pcardFee" value="35.38"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="814.91"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pcardFee</con:entry><con:entry>pdeposit</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1226452b-b282-4764-a0aa-fd2a97dd0c66" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Seats 109 - (4PAX + 2ROOMS)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="9622f550-cc5f-4aca-9a3a-5c68372d8564"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "109 - Prebooking (4PAX + 2ROOMS)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-FAFR Family Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			},
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],

		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0aa89ee-deec-46fa-8553-1b986fbf436f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="59023b5d-c3b8-4820-8728-c42e41e36667"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="26daf41f-1ed8-4469-9964-f7d96e74ac91"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4efb33d4-33a4-4e27-ab00-c448ea908429"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="03c34afb-8e58-47a2-af60-4816e58e6c1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e96a5b42-8dc3-47b4-9a2a-44459cda3967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="14fdfe81-e2e4-41a7-9950-efef22e95967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="b9a355cc-8945-43cc-8972-a738badaec67"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="61aeddb6-a6d7-4122-bd39-e3cde8a57133" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000701"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="a6049d34-c7a8-40d5-b9ee-06f2e7ba9c3c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000701"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="14d53363-ae45-4329-9c17-acaa62ae3638"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="3ccbaeb6-61a9-4e6a-b132-1e2d61ef577a" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000701"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="80342ad5-283e-4bf3-a3e3-26b3535d0643" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000701"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="db2d68ee-3ac9-4f6b-a59d-6c83e0ca95d7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000701"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="7b23024f-89b9-4fce-b4ec-cca74930fcbb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="f78cdaa6-2968-49e0-8d14-f87f98d186e4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1970-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Raquel",
			"gender" : "FEMALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Raquel M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="d1116aa3-964d-423c-81ee-12f9c035fb64"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="ea6d31c7-9217-4afb-aefe-92d4f48fad7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f1fcdf55-ba12-49d7-8549-ac76ec43f45f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a8aca26-ba1c-49d0-baab-18eb2d277434"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="a68e8ada-17c3-4f88-a2e5-511b3154390b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23501385-b09a-4849-97eb-0dc5ce26c1cb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3460e554-0df5-4dd3-a511-437a969af088"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d22cb27-54a1-4db7-b363-f771ed3ade5d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1674.97"/>
  <con:entry key="pdescription" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="deposit" value="300.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000701"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="1674.97"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ce1a8fc4-b38f-4a98-8276-7f57ad1e69f0" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Seats 105 - (2PAX + 1INF + 1CHD) - retocar" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="74db6b27-1880-4a33-8954-62a5607fd157"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "105 - Prebooking (2PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
			],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3,4],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="ad427b9f-b985-4753-ad16-23c5c9c3ea87"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="da8f50fb-7f5a-4fbd-85f1-254c5a79b1a9" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="e1049753-0cea-4595-aef5-d3762a074a88" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "paxReference": 2,
        "flightNumber": "${#Project#flightNumber_ida}",
        "personType": "INF"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "CHD",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="6697a45d-1a48-499e-9da1-b4871d07f2ee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="050795c0-9e1b-4566-a127-64a74d704f6f" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="ab324e73-3dbd-46f6-a20d-c6d73164afd1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "paxReference": 2,
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "personType": "INF"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "CHD",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="7944f0f6-a9d4-4282-b993-d2f32d1897d4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Confirmando..." id="8fe818c6-72ac-4270-94dd-04700f544009"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="9af977c0-cc13-4598-8792-40f126587dac"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}, {
			"dateOfBirth" : "1990-06-28",
			"age" : null ,
			"personType" : "ADT",
			"firstName" : "ADULTO",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ADULTO",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2021-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1224.03"/>
  <con:entry key="pdescription" value="104 - Prebooking (1PAX + 1INF + 1CHD)"/>
  <con:entry key="deposit" value="225.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000699"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="1224.03"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="105 - Prebooking (2PAX + 1INF + 1CHD)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="784b82e9-4ac7-4590-82d0-6993afdd6494" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Seats 130 - (6PAX + 3INF )" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="71156f5e-ecb9-4701-9fda-c929a892376e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "130 - Prebooking (6PAX + 3INF + 1SEO)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 3
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 5
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 6
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 7
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 8
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 9			
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" :  [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,7],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4,8],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [5,6,9],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="659edae8-5aea-4431-840a-9cf758b43895"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d311a789-6f87-4d76-8dfc-ae90f703f125"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="199927e8-57db-4e62-ab18-50c966fb1e43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="c7baf28d-2665-42bc-99af-fa750a47d48f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23685440-2341-4e89-a9d1-c37f432b64f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="bf683833-8951-4032-b0fe-5ae378d5bbee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="e25cd7e4-6df0-4869-9b44-ac823f16a2dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="cf2d4c98-70f8-4a3c-ba98-de12cfafafbc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="013bdddc-1fda-4081-a588-357a94a2647b" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000694"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="b380f6a1-0bfc-49fe-9d51-a9b808efb4d0" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 19.83,
        "status": null,
        "cardFee": 0.20,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 16.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 4,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 5,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 6,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    },
    {
        "paxReference": 7,
        "flightNumber": "${#Project#flightNumber_ida}",
        "personType": "INF"
    },
    {
        "paxReference": 8,
        "flightNumber": "${#Project#flightNumber_ida}",
        "personType": "INF"
    },
    {
        "paxReference": 9,
        "flightNumber": "${#Project#flightNumber_ida}",
        "personType": "INF"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000694"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="2a23fef1-7b16-4efb-ad7e-2fe4cb58aadf"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="0725016d-f118-4fa9-a12d-7693d6b67379" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000694"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="aca9d791-1395-4313-8b06-935fd923eda3" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 21.92,
        "status": null,
        "cardFee": 0.22,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 18.78,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 4,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 5,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 6,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    },
    {
        "paxReference": 7,
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "personType": "INF"
    },
    {
        "paxReference": 8,
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "personType": "INF"
    },
    {
        "paxReference": 9,
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "personType": "INF"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000694"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="8126d742-7f79-41d6-b0ef-a621a9a94949"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000694"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="fe170383-97a4-4952-a548-4083f39601e3"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="ed625a17-a3bb-495d-9ebc-b7b0aa5e5c73"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 3
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 5
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 6
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 7
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 8
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 3",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 3 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 9			
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9977e087-ffa9-4bf9-919f-46cad86aad69"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="9953c431-2c7e-4632-bc66-2b45a33efb1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ccdb8ce6-b31a-4693-bba1-5802344fe668"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="f9fd633d-c60f-4947-99a1-536debacd30c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="7dac3771-3ac9-4920-8d88-afce88e71370"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="df313567-b331-4910-961f-3b3a3d1f8652"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="af406eac-b4ae-46a0-93ff-66d5c118d49f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="dcc53e30-ef55-4874-8031-dae9087503f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2101.73"/>
  <con:entry key="pdescription" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="deposit" value="450.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000694"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="4.80"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="2101.73"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f3065291-15de-4fee-9add-149bc85e0629" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="137 - (2PAX + 2INF con SEAT )" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="96b1f459-047b-4f01-b47d-977135df9f04"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "137 - Prebooking (2PAX + 2INF con SEats)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : 1,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 1,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3,4],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c6d6ca7e-5bda-4cb7-9a0b-229ad2cc7471"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b0675072-6f36-4e43-9ff1-f54b6fa265c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5b5a01e5-ce17-4c34-8e5b-c98440b3d222"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b99c7865-7026-45b7-8067-ae99d3719a6c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="e4ec510f-683b-455e-8a53-53f0913fb477"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="437ebc0a-7fe5-4ac3-bcb2-ce6a05c57d67"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="7b8da134-8553-4899-8bb0-c4fce3ff3be2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="0a902968-3989-462a-b1f7-72fd6f44bafd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="96981c6f-1cdb-4f79-a6c2-cc82bfa27c04"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="39ffd81f-8019-480f-947f-5a7cd3777f76"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "INF",
			"firstName" : "bebe uno",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe uno M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "INF",
			"firstName" : "bebe dos",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe dos M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="f3b74826-3497-4f87-b07b-01b88cb0b3ed"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="b29aa8eb-f92c-44ea-814d-6ea8e44dc41c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b7cd41ae-69be-49f4-88b9-28af4cfc2585"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="346cd3c9-9167-418a-9f9e-27565d9b254f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="1739721e-c53f-4efe-b5ab-f21fa0bb81c7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1008d5a1-19b4-4f21-b4d9-11db55f31715"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="27b6ff6e-93af-4d72-bcd7-f5a9af5261fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c1c5c7d5-508b-4e3f-9e42-058e9dd4f906"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="bd5cb565-3ae0-4742-bbd7-9723efa64a71"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1071.17"/>
  <con:entry key="pdescription" value="137 - Prebooking (2PAX + 2INF con SEats)"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000695"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="1071.17"/>
  <con:entry key="description" value="137 - Prebooking (2PAX + 2INF con SEats)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="16eeae9e-8a71-4d8e-989c-33cd1d30f90d" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="129 - (2PAX + 1INF  + 2SEATS-hasInfant=false) - pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="129 - Prebooking (2PAX + 1INF  + 3SEATS-hasInfant=false)" id="5daf4450-4c45-4bf2-a25a-2ebb79927f09"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="129 - Prebooking (2PAX + 1INF  + 3SEATS-hasInfant=false)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "129-Prebooking(2PAX+1INF+3SEATS-hasInfant=false)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
    "seats": [], 	
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="82c83b25-bbe9-4c6a-9bf0-d349fa24c09c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="7dff8e93-aa99-4386-8e5e-13303955acd4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="00ff07d4-727b-4054-bcd3-4380827a0f37"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="5cfe388a-939a-4b5f-bdc0-706f2de69d4e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="bcf30b14-dc25-4fe7-9f3b-4b88a99994cf"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="45712810-28d8-410e-89e6-c75d514c5c65"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d2facc01-9324-4e97-892e-aebcd652b36d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="490753b8-c9e3-4bf1-b950-842a71e4c9d7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="12659e91-b6ef-48a9-9fb1-6c90ee694c7c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("129 - Prebooking (2PAX + 1INF  + 3SEATS-hasInfant=false)").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="435ce854-a79d-4fb3-8bbd-e72d950cd043"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebeUno",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="a0ee70e3-fc3e-4688-b14d-405261a2911d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0a83a882-b400-4830-b4cb-a905ef2358b6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="db6369a4-9580-4d6b-b5e1-62327e142255"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="962a5956-7ab3-4626-b377-7c62dbe9f455"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2ba486da-0bfe-4b46-9bcd-7cbf73f7ca10"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="4d74fa94-5b84-48c0-a647-0903bcdc7d9d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="884fc121-5f1d-4251-aad2-2325f7c8cfa4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="763ab1ad-ce7b-4449-b34d-04cbfd50defc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="b61e3b69-23d1-401b-870f-91b2f067920b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="786.94"/>
  <con:entry key="pdescription" value="129-Prebooking(2PAX+1INF+3SEATS-hasInfant=false)"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000697"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value=""/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="786.94"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="129-Prebooking(2PAX+1INF+3SEATS-hasInfant=false)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2dc65c01-343e-4269-a0e1-648445854e6d" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Seats 102 - (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="fa848d76-388d-4417-9935-6ded7a56df14"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 100,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 100,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="880cfa02-0276-4b5c-9436-b629e5366d09"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="e961048c-b627-4bb4-a5f0-508b3f40e74a" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "child": "N",
  "currency": "GBP",
  "disability": "N",
  "fareClass": "Y",
  "fragile": "N",
  "hasejPlusCard": "Y",
  "infantOnLap": "N",
  "physicalDisorder": "N",
  "pregnant": "N"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="4b3b08f2-0050-4445-912d-5550b0d5f024" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": 16.99,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 0.00,
        "status": null,
        "cardFee": 0,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 0,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": 11.99,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 0.00,
        "status": null,
        "cardFee": 0,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 0,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="45937be5-986b-4a23-9547-6dab224188f2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="ea2540dd-e352-4259-b017-9c25977245b9" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "child": "N",
  "currency": "GBP",
  "disability": "N",
  "fareClass": "Y",
  "fragile": "N",
  "hasejPlusCard": "Y",
  "infantOnLap": "N",
  "physicalDisorder": "N",
  "pregnant": "N"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="52d2935e-ada3-4b99-b4be-3c1126718697" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": 16.99,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 0.00,
        "status": null,
        "cardFee": 0,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 0,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Extra legroom",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": 16.99,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 1,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 0.00,
        "status": null,
        "cardFee": 0,
        "code": "160",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 0,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "1F"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete Seats GO" id="b7d99383-e0d9-4778-ae71-6b963f8e3cf4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String addSeatsGoStepName = "ADD SEATS GO"
String deleteSeatsGoStepName = "DELETE SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)


//DEL SEATS GO
  def passengerDataGo = utils.getSlurperResponseFromStep(addSeatsGoStepName,testRunner)
  seatsData.deleteSeatsForPassengers(deleteSeatsGoStepName, passengerDataGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE SEATS GO" id="832e8857-8790-4bab-996e-f2552e992f05" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE SEATS GO" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="code" value="${#Project#flightNumber_ida}-2A"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete Seats RETURN" id="e94880cf-1354-4c90-a690-676fc668f824"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String addSeatsReturnStepName = "ADD SEATS RETURN"
String deleteSeatsReturnStepName = "DELETE SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)


//DEL SEATS RETURN
  def passengerDataReturn = utils.getSlurperResponseFromStep(addSeatsReturnStepName, testRunner)
  seatsData.deleteSeatsForPassengers(deleteSeatsReturnStepName, passengerDataReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE SEATS RETURN" id="8b4aedfe-23a2-4dea-8c8c-7562570db92a" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE SEATS RETURN" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000700"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="code" value="${#Project#flightNumber_vuelta}-1F"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Prebooking" id="25b6ab04-b28d-474f-bbb0-01e20f559bb6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Prebooking" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00002812"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="727eee7c-3669-42cb-b9eb-5943ec96270c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET - Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="ddc35c3b-7596-415b-94e0-509b3b8a10a4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#pcardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="516.43"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="DM"/>
  <con:entry key="pstrDescription" value="Debit Mastercard"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="pcardFee" value="35.38"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="516.43"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pcardFee</con:entry><con:entry>pdeposit</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d69aad19-9489-40ab-9552-7aad3512944c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Seats 104 - (1PAX + 1INF + 1CHD)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="104 - Prebooking (1PAX + 1INF + 1CHD)" id="68af8190-ee8c-46f6-951a-5c8c7dec3a70"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 - Prebooking (1PAX + 1INF + 1CHD)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "104${#Project#testName}",
	"description" : "104 - Prebooking (1PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"flights" : [{
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "SUI.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="104 - Property Transfer" id="4a534b6c-1d94-4d70-b4d0-5a6c6fad6012"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingCode_SEAT_Ida</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>SEAT02 104 Add 2SEAT Ida</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_SEAT_Vuelta</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>SEAT02 104 Add 2SEAT Vuelta</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_GET</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>GET 104 - Prebooking</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_seatPlan_Ida</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>104 -Ida- List seat plan flight. Availability &amp; prices</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_seatPlan_Vuelta</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>104 -Vuelta- List seat plan flight. Availability &amp; prices</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_minSeatPrice_Ida</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>prebookingId</con:targetType><con:targetStep>104 - minSeatPrice - Ida</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingCode_minSeatPrice_Vuelta</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>prebookingId</con:targetType><con:targetStep>104 - minSeatPrice - Vuelta</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>DELETE_SEAT_Ida 1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>DELETE 104 Ida 3A</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>DELETE_SEAT_Ida 2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>DELETE 104 Ida 4B</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>DELETE_SEAT_Vuelta 1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>DELETE 104 Vuelta 1A</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>DELETE_SEAT_Vuelta 2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>104 - Prebooking (1PAX + 1INF + 1CHD)</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>DELETE 104 Vuelta 2A</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="104 -Ida- List seat plan flight. Availability &amp; prices" id="6d0e68c2-51ef-479f-bfea-ea3d1b56d9f2"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 -Ida- List seat plan flight. Availability &amp; prices" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="8627"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="104 -Vuelta- List seat plan flight. Availability &amp; prices" id="1d269469-01cf-4e53-bf7b-dc53ea20347b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 -Vuelta- List seat plan flight. Availability &amp; prices" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="8627"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="104 - minSeatPrice - Ida" id="27bf8f0f-74c4-4ad9-9395-9b33a227077f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingId}/flights/minSeatPrice" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 - minSeatPrice - Ida" id="e70b4cec-1dbb-45e0-b073-d5228967afc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/prebookingCode/flight/flightNumber/minSeatPrice</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Content-Type</con:entry><con:entry>prebookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="104 - minSeatPrice - Vuelta" id="e20f52de-70c9-434c-a1a3-f74138ac6ac4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingId}/flights/minSeatPrice" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 - minSeatPrice - Vuelta" id="e70b4cec-1dbb-45e0-b073-d5228967afc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/prebookingCode/flight/flightNumber/minSeatPrice</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Content-Type</con:entry><con:entry>prebookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 104 Add 2SEAT Ida" id="995776ee-1bd5-4185-a679-405220a91c7e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 104 Add 2SEAT Ida" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "3A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "4B",
	"price" : 15.99,
	"paxReference": 2
}]

</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 104 Add 2SEAT Vuelta" id="224c8d44-e119-4c86-8813-c27e4f770b3b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 104 Add 2SEAT Vuelta" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}B",
	"price" : 15.99,
	"paxReference": 2
}]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE 104 Ida 3A" id="d83c54b9-02ef-4bff-80b3-18617311f134"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE 104 Ida 3A" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
  <con:entry key="code" value="${#Project#flightNumber_ida}-3A"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE 104 Ida 4B" id="b62bfaad-97f8-40fd-84ed-9eb9864a2cf1"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE 104 Ida 4B" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
  <con:entry key="code" value="${#Project#flightNumber_ida}-4B"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE 104 Vuelta 1A" id="1f2cb8a2-3e6f-480b-a4ec-b77b7a258405"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE 104 Vuelta 1A" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
  <con:entry key="code" value="${#Project#flightNumber_vuelta}-1A"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE 104 Vuelta 2A" id="e63a64f2-1aba-4d56-bf4b-21ece30b02b8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE 104 Vuelta 2A" id="23dfad52-9592-40d8-b030-1171032f16cd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/seats/seatId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="seatNumber" value="1A"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
  <con:entry key="code" value="${#Project#flightNumber_vuelta}-2A"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET 104 - Prebooking" id="1036e7d3-7cc8-444e-b5dd-f5022c890958"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET 104 - Prebooking" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer 104" id="6292ba42-9a78-40ad-8af5-fa7955c89abd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>price</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET 104 - Prebooking</con:sourceStep><con:sourcePath>$.totalPrice</con:sourcePath><con:targetType>price</con:targetType><con:targetStep>CONFIRM</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET 104 - Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>CONFIRM</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>description</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET 104 - Prebooking</con:sourceStep><con:sourcePath>$.description</con:sourcePath><con:targetType>description</con:targetType><con:targetStep>CONFIRM</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="0fb1a66d-bd59-47fe-b25e-0b1edd7ab9a9"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}
	],
    "creditCardInfo" : {
	 
	 "creditCardVendorCode" : "${#Project#cardPayMethod}",
	 "cardDescription" : "${#Project#cardStrDescription}",
	 "cardFeePercentage" : "${#Project#cardPctPayment}",
	 "cardHolderName" : "A Shopper",
     "cardFee" : "${#Project#cardFee}",
     "validThruMonth" : "01" ,
     "validThruYear" : "2020", 
     "cardNumber" : "4444333322221111",
     "billingAddress" : {
                    "address" : "47A",
                    "postalCode" : "CB94BQ",
                    "city" : "Cambridge",
                    "countryCode" : "GB",
                    "phone": "646968857"                 
                    }      
     },
	 "order" : {
           "amount" : "${#price}0",
		   "description" : "${#description}",
           "shopperEmail" : "shopper@provider.com",
           "currency" : "${#Project#currency}"
           }  ,
    "deposit" : "${#Project#depositType}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value=""/>
  <con:entry key="ppctPayment" value=""/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="cardFee" value=""/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pcodPaymentMethod" value=""/>
  <con:entry key="pdeposit" value=""/>
  <con:entry key="pstrDescription" value=""/>
  <con:entry key="pdepositCardFee" value=""/>
  <con:entry key="pcodPaymentType" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="0394c37c-0b83-4ec6-8181-b3218baab1a0" name="Bateria Intermidate"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="124bcbe1-8178-45dc-af3c-a7b013c4af64" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="103 - (3PAX) - 2 rooms" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="6fed70f4-8767-44d3-ae2b-a3ddaf8824d0"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="103 - Prebooking (3PAX)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "103 - Prebooking (3PAX)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-SKII Skiing Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
        ],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "TPL.ST"
			}],
		"currency": "${#Project#currency}"
      }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="87936d79-0234-493c-b7da-f856fbba1a5c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b69fa639-7ef5-411e-a690-6bd9aef18302"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="39241795-fa9e-417d-8861-770a23af6752"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="9c142f32-be59-4ff6-9d61-4e6c183d1bd7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="77b8fe98-4e64-42c1-abfb-50ed3c80a149"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="6aa5c15f-69f5-4642-a2df-0dc0c00e63d8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="2f0fd60d-2361-4f2e-9dc3-170452632130"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="d378675c-40d6-425f-9cb7-ea1ccec21a14"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="a20797e4-3601-4a05-8792-a5414336c630"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],	
   			    "zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 3
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="2a9ee667-e1e6-4e35-9863-9021bb440cb5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="cf4a3f6f-17bf-4e15-a82a-755c70679c35"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b86884e3-f7d5-4187-840d-a902bf7ba71c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d962cf14-f2e5-48eb-9b02-791363c8ed4f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="0c738472-16be-4cc7-9fbb-4433bba24c32"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1eb4ca13-8c1a-4492-acd3-7518e7ed9a74"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="ea5e3829-a4ba-42cf-99b3-8f9735585270"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="66e8a49b-e907-4bc6-8dbe-da5451dc0055"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="770.38"/>
  <con:entry key="pdescription" value="103 - Prebooking (3PAX)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="H00000620"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value=""/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="770.38"/>
  <con:entry key="description" value="103 - Prebooking (3PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ba4c4bfb-a024-4d35-b51e-9f9308f139e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="105 - (2PAX Miss&amp;Mr)" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="28f4076f-fb5c-44ae-9ef3-4c0c4c7bf05d"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="105 - Prebooking (2PAX Miss&amp;Mr)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{	
	"description" : "105 - Prebooking (2PAX Miss&amp;Mr)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LUTO Luxury Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="2bc90172-3649-456c-a28a-8ea8d2603006"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="22464e15-11f1-47f6-a94c-50c397d8d78a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="1c70fea6-6686-428d-9d2a-6a4fc5a0ae49"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4457c7b1-049a-40d6-b96a-bd291f88b6a3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="2f48398b-6e66-4fb5-8f82-0a3419848f89"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f618c61c-4bf9-4eae-baac-4c64054bd1d5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="2394319a-1469-43c0-9bae-ee6df4feec2c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="0e3d5dce-fecf-46a0-9e68-888ea50cf411"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("Prebooking").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="24dd8d38-a1ac-4ade-a59e-a468a60e1faa"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MISS",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="559c212e-8442-45d4-a718-39170eec87a0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="43ec6dba-bc12-479b-bd68-cc00006d3f0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="9bb42f02-568a-4014-a5e7-bee08f55c645"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="224b7d51-312c-4712-83b3-75c5c6951fd5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="35f6e484-81a5-415c-bec5-cc73eb9e9c4d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="70d28e2e-4bb7-4810-8ab4-c8f4901d0aec"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1ad85304-1d3d-4520-8c15-1cce701783ba"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="a4dc9106-f16e-4c0e-bfb2-88d324ccc69b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="660.87"/>
  <con:entry key="pdescription" value="105 - Prebooking (2PAX Miss&amp;Mr)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0"/>
  <con:entry key="preBookingId" value="H00000639"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="1.5"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="660.87"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="105 - Prebooking (2PAX Miss&amp;Mr)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4d2e1c7c-1200-4c5a-a59a-b6289db5e9f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="137 - (2PAX + Transform 2INF)" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="137 - _Prebooking (2PAX + Transform 2INF)" id="0de6031b-28e6-4356-9ab2-665bddd0a5fb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="137 - _Prebooking (2PAX + Transform 2INF)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "137 - Prebooking (2PAX + Transform2INF)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},
		{
			"age" : 1,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 1,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3,4],
				"roomCode": "QUA.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c6d6ca7e-5bda-4cb7-9a0b-229ad2cc7471"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b0675072-6f36-4e43-9ff1-f54b6fa265c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5b5a01e5-ce17-4c34-8e5b-c98440b3d222"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b99c7865-7026-45b7-8067-ae99d3719a6c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="e4ec510f-683b-455e-8a53-53f0913fb477"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="437ebc0a-7fe5-4ac3-bcb2-ce6a05c57d67"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="7b8da134-8553-4899-8bb0-c4fce3ff3be2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="0a902968-3989-462a-b1f7-72fd6f44bafd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="0498efa8-66fa-424a-a115-f3282d1a93f8"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("137 - _Prebooking (2PAX + Transform 2INF)").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="60612cd4-e2ca-4488-a24d-679529b0f30f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "CHD",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 1,
			"personType" : "CHD",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="f3b74826-3497-4f87-b07b-01b88cb0b3ed"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="b29aa8eb-f92c-44ea-814d-6ea8e44dc41c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b7cd41ae-69be-49f4-88b9-28af4cfc2585"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="346cd3c9-9167-418a-9f9e-27565d9b254f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="1739721e-c53f-4efe-b5ab-f21fa0bb81c7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1008d5a1-19b4-4f21-b4d9-11db55f31715"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="27b6ff6e-93af-4d72-bcd7-f5a9af5261fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c1c5c7d5-508b-4e3f-9e42-058e9dd4f906"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="bd5cb565-3ae0-4742-bbd7-9723efa64a71"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1018.72"/>
  <con:entry key="pdescription" value="137 - Prebooking (2PAX + Transform2INF)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0"/>
  <con:entry key="preBookingId" value="H00000641"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="1018.72"/>
  <con:entry key="description" value="137 - Prebooking (2PAX + Transform2INF)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1b1930d4-4b78-4c6a-b804-cec7c0af144b" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX) - PairPrice - pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="102 - Prebooking (2PAX)" id="7b1ae5b6-21e6-4da0-a131-d806acc13ead"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102 - Prebooking (2PAX)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 540,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": null,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="8d590972-6039-445b-8d75-cfd6a42bcf0f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("102 - Prebooking (2PAX)").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="71363a32-636f-4a67-80d7-e7b91de0b4fb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0,
			"isChipped": true
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0,
			"isChipped": true			
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1933.90"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="19.15"/>
  <con:entry key="preBookingId" value="H00004009"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pdepositCardFee" value="0"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="price" value="1914.75"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5d1ab583-9b4f-424a-8551-c7973a5ad049" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX) - DifferPrice - Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="102 - Prebooking (2PAX)" id="65ddd4f1-73a7-477d-9d2d-6016d4f164bd"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="102 - Prebooking (2PAX)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 540,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": null,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="ac422e93-6dd1-4f9d-a17e-43e1a9a357f4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("102 - Prebooking (2PAX)").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="b48ccb1c-73fe-4abf-9d0c-82d81c482126"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2001.02"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="19.81"/>
  <con:entry key="preBookingId" value="H00004015"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="1981.21"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f9b94063-cc1c-4ffa-863e-845a5c3ce913" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="104 - (1PAX + 1INF + 1CHD) - isChipped - NO DISPO" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="104 - Prebooking (1PAX + 1INF + 1CHD)" id="e880c8ce-63fe-4a18-9a53-ceaff2899f66"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="104 - Prebooking (1PAX + 1INF + 1CHD)" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "104 - Prebooking (1PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
			],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "BDT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Confirmando..." id="4fe68ba5-4cc9-40fa-8a0d-aabdf03ff950"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("104 - Prebooking (1PAX + 1INF + 1CHD)").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="deda5131-1e7b-43de-aa02-dbac4588f833"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0,
			"isChipped": true
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0			
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2730.69"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="null"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>description</con:name><con:value>testanna</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="ad81318d-6e8e-48f9-a38c-6b29a7777a09" name="Bateria Transfers"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="92cc778c-eec8-47ab-be4c-6db953d8fedc" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer 102 (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="5f9899bb-a76c-4bf3-8ab2-6f1e7b7d75c3"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 100,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 100,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ed878b95-4448-4c4d-8002-868fe41e40a6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="497ce0eb-9a3e-48ca-bd7e-74451cf25b14"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="9839771b-bbea-4331-918c-73b0d5686bc7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="13ad78b4-b76b-42fd-abd3-e9055dcdcdb7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="b4b6c4ad-eb33-4a14-a340-d5f0208e7453"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="155760a6-df96-4950-b4a1-8f36b3efe227"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="03cd5e41-7643-45dc-8888-78b2e2592b2c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="02f181f8-8641-46ed-9b96-43ae1a87e016"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]
//TransferJson= 2 * transfersJson[0].price

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="303b689b-72b3-4e7c-b9f5-010aa6e8406c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]
//TransferJson= 2 * transfersJson[0].price

//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="022f1c39-28f5-4cf3-a405-20dd0d525d16" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00000702"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="f87fdf3a-b00b-4f94-9f70-1c2528571649" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "YBZQyl6B0T2P1yZugUtVvg==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-07-05",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma di Maiorca, aeroporto Son Sant Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-bs.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-bs.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-bs.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-bs.png"
            }
        ],
        "vehicleType": "B",
        "code": "0|0|0",
        "type": "B",
        "descriptionList": [
            {
                "languageCode": "ITA",
                "description": "Con altri passeggeri",
                "type": "GENERAL"
            },
            {
                "languageCode": "ITA",
                "description": "Tipologia prodotto standard",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ITA",
                "description": "Autobus",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minuti",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "218",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Chi viaggia con equipaggiamento extra o materiali sportivi dovr\u00E0 mettersi in contatto con noi poich\u00E9 potrebbero esserci costi aggiuntivi di trasporto.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "NON SI TROVA IL PUNTO D'INCONTRO",
                    "value": null,
                    "detailedDescription": "Nel caso in cui non si riesca a individuare il punto di ritrovo, contattare il numero di emergenza riportato sul presente buono.",
                    "bulletPointId": "MTPT",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBLEMI CON IL BAGAGLIO",
                    "value": null,
                    "detailedDescription": "In caso di problemi con il bagaglio, chiamare il numero di emergenza per comunicare il ritardo e perch\u00E9 possano essere presi i provvedimenti necessari. ",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CONTROLLO DELL' INFORMAZIONE",
                    "value": null,
                    "detailedDescription": "Se i dati non corrispondono alla prenotazione, vi invitiamo a contattare immediatamente la vostra agenzia.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "ADATTATORE DI RIALZO PER BAMBINI /SEGGIOLINO NEONATO",
                    "value": null,
                    "detailedDescription": "Seggiolini e supporti da bambino per l\u2019auto non sono inclusi, a meno che non siano specificati nella prenotazione a un prezzo supplementare. Nel caso tu ne abbia bisogno, contatta il tuo punto vendita prima della partenza.",
                    "bulletPointId": "CBBS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Accesso limitato",
                    "value": null,
                    "detailedDescription": "Ricorda che, a causa delle restrizioni del traffico nel centro della citt\u00E0 e in base all\u2019ubicazione del tuo hotel, potresti dover percorrere un piccolo tratto a piedi. In ogni caso, ti lasceremo il pi\u00F9 vicino possibile.",
                    "bulletPointId": "RESTACCESS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arrivi domestici",
                    "value": null,
                    "detailedDescription": "Arrivi domestici: Viaggi effettuati all\u2019interno dei confini dello stesso paese o nello spazio aereo europeo (Schengen). I passeggeri non devono passare attraverso i controlli doganali.",
                    "bulletPointId": "DOMEST",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arrivi internazionali",
                    "value": null,
                    "detailedDescription": "Arrivi internazionali: Viaggi effettuati con provenienza esterna allo spazio europeo (Schengen) e con arrivo all\u2019interno di esso. I passeggeri devono passare attraverso i controlli doganali.",
                    "bulletPointId": "INTERNAT",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minuti",
            "maxWaitingTimeSupplierDomestic": "minuti"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "SH TAB COST S17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Dopo aver ritirato il tuo bagaglio, lascia l\u2019area bagagli tramite la porta B/C e procedi verso il banco aeroportuale della Destination Services, che si trova appena di fronte. Qui sarai accolto e accompagnato verso il veicolo del trasferimento. Se non riesci a localizzare il conducente/agente, chiama la DESTINATION SERVICES al n. +34 620131522. Lingue parlate al call-centre: inglese, spagnolo.",
    "dateFrom": "2017-07-05T12:20:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 366633,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 10.73,
            "time": "23:59:00",
            "date": "2017-07-02"
        }
    ],
    "price": 10.720,
    "subStatus": null,
    "specificaton": {
        "productCode": "STND",
        "generalInfo": [
            {
                "order": 10,
                "metric": null,
                "description": "1 bagaglio a mano per persona",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagaglio per persona la cui somma di\u00A0lunghezza+larghezza+altezza\u00A0non superi i 158cm.",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Autobus",
        "vehicleCode": "BS",
        "serviceCode": "SHRD",
        "productName": "Standard",
        "serviceName": "Condiviso"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000702"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="b8099cb2-2471-42ab-b45a-bab09b3f0f45" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "YBZQyl6B0T2P1yZugUtVvg==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 366633,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|4",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "ITA",
                "description": "Servizio privato con autista",
                "type": "GENERAL"
            },
            {
                "languageCode": "ITA",
                "description": "Tipologia prodotto premium",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ITA",
                "description": "Automobile",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minuti",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Chi viaggia con equipaggiamento extra o materiali sportivi dovr\u00E0 mettersi in contatto con noi poich\u00E9 potrebbero esserci costi aggiuntivi di trasporto.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBLEMI CON IL BAGAGLIO",
                    "value": null,
                    "detailedDescription": "In caso di problemi con il bagaglio, chiamare il numero di emergenza per comunicare il ritardo e perch\u00E9 possano essere presi i provvedimenti necessari. ",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CONTROLLO DELL' INFORMAZIONE",
                    "value": null,
                    "detailedDescription": "Se i dati non corrispondono alla prenotazione, vi invitiamo a contattare immediatamente la vostra agenzia.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "ADATTATORE DI RIALZO PER BAMBINI /SEGGIOLINO NEONATO",
                    "value": null,
                    "detailedDescription": "Seggiolini e supporti da bambino per l\u2019auto non sono inclusi, a meno che non siano specificati nella prenotazione a un prezzo supplementare. Nel caso tu ne abbia bisogno, contatta il tuo punto vendita prima della partenza.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minuti"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV TAB 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Pick up davanti all'entrata dell'hotel. Nel caso in cui tu non riesca a localizzare il tuo autista/agente, ti preghiamo di telefonare Destination Services al +34 620131522.Lingue parlate al call centre: inglese, spagnolo.",
    "dateFrom": "2017-07-07T07:00:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma di Maiorca, aeroporto Son Sant Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 26.20,
            "time": "23:59:00",
            "date": "2017-07-06"
        }
    ],
    "price": 26.200,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Corsa esclusiva",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Servizio porta a porta ",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Disponibile 24 ore su 24, 7 giorni su 7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Servizio Meet &amp; Greet",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 bagaglio a mano per persona",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagaglio per persona la cui somma di\u00A0lunghezza+larghezza+altezza\u00A0non superi i 158cm.",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Automobile",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "premium",
        "serviceName": "Privato"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000702"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="d3adc708-38d7-4af3-95c9-b4853e89b9ea"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15a88e87-0715-4d95-a4f0-b6e7e6f5c032"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ff47203d-136c-4fd2-ba07-a3521bcd3ca0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d6f0aed9-e7f9-4249-8872-424f3bd9ba81"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="5dc9f355-6ed3-450a-ad27-d677ac2b60bb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="cc9e4082-1ff4-49e6-9aff-3d1bb03f2f17"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="08e055b3-0cb9-43d3-b73b-6ae549a6eef4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c9ef5b04-c641-4096-9564-0ce15295de6d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000702"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="c4b19cc8-fc09-476b-9dfc-a7b92fad0642"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="51cdb9d7-b966-4396-9803-b59908d02fc2"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="e7cced04-9589-4a10-9855-e200de0e1072"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0ecf4d18-b9a7-415a-b2d4-064a51df85fa"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="1c9a4005-da7b-410b-b3cd-6b57f7dc976a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="11d8d10e-08c3-47a2-b77c-e07f675ca614"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b5b1452c-5a84-4918-9077-c2d672342f53"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="c9b03641-b9e3-432e-80e8-47eb689425fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="253ffc8c-8180-4143-a7d9-e1dc9d5822b7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="3c3e3ae9-59c1-49e2-a201-b50d888812e5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_AddTransfer" id="b3ee8554-8928-4828-894f-581ccba08b43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddTransfer.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="817.20"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000702"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="pcardFee" value="23.61"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="817.20"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="01396e60-e0e5-4a0b-83bc-477162832e2a"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000702"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest id="e3d16f24-01af-4223-8a3c-7b87b621828a" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting><con:setting id="hasBeenConvertedToLoadUITest">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>10</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>47cece06-a727-4b16-96e5-2d421c851d1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e7d746c-24ac-453f-99d3-6e729f0370ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c258db0d-15f0-4a6c-98df-f82d0e804375</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5386b16-de9e-41f4-b946-0a2aee61050f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ea302efc-f2f8-4b7b-af26-ce6b772aba51" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer 102 - (2PAX) - LUG&quot;: 1,&quot;LUG-2WGT&quot;:2" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="dd322b40-a853-4865-9777-e1096dd3ec8e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="e0ed28a0-c434-471e-9fd3-c6ee66522177"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String FlightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="7e862645-55c3-4279-bba0-3bcf4ac94edd" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="flightNumber" value="flight"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="5ed82b1e-53bb-4ff1-841b-b911b0e09849" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 28.89,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 28.60,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 28.60,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 53.13,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 12.00,
        "price": 52.60,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="1510556e-7bd7-4057-a753-381708619d0a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String FlightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="17bb0f43-71ca-4fa8-8f9f-896c7fbf9383" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="flightNumber" value="flight"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="35db7cff-4716-48f6-9d0c-58e47f6119b3" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 28.89,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 28.60,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 28.60,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 53.13,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 12.00,
        "price": 52.60,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="8ebd8017-0118-4858-a816-b21e4c7c126c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
log.info slurperResponse
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="d51096ad-56a7-4d7d-be00-5807ecb51d28"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]

//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="b00a5013-6a10-4b30-9b3b-0e83d47a0a91" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00000496"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="fd09464e-b378-4b3b-8603-a1a297bd6882" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "h6aGKhV858UL9mu5UR4BoA==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-07-01",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma de Majorque, A\u00E9roport Son San Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-bs.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-bs.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-bs.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-bs.png"
            }
        ],
        "vehicleType": "B",
        "code": "0|0|0",
        "type": "B",
        "descriptionList": [
            {
                "languageCode": "FRA",
                "description": "Avec d'autres passagers",
                "type": "GENERAL"
            },
            {
                "languageCode": "FRA",
                "description": "Cat\u00E9gorie Standard",
                "type": "PRODUCT"
            },
            {
                "languageCode": "FRA",
                "description": "Bus",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "218",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Si vous voyagez avec un bagage suppl\u00E9mentaire ou un \u00E9quipement de sport,  nous vous prions de nous contacter, car des frais suppl\u00E9mentaires peuvent \u00EAtre appliqu\u00E9s",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "NE PAS LOCALISER LE POINT DE RENCONTRE ",
                    "value": null,
                    "detailedDescription": "Si vous ne parvenez pas \u00E0 localiser le point de rencontre, veuillez contacter le num\u00E9ro d'urgence indiqu\u00E9 sur ce bon d'\u00E9change.",
                    "bulletPointId": "MTPT",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBL\u00C8MES DE BAGAGE",
                    "value": null,
                    "detailedDescription": "Si vous avez des probl\u00E8mes avec vos bagages, veuillez appeler le num\u00E9ro d'urgence afin de pr\u00E9venir du retard et prendre les mesures n\u00E9cessaires.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "V\u00C9RIFICATION DE L'INFORMATION",
                    "value": null,
                    "detailedDescription": "Si les renseignements ne correspondent pas \u00E0 la r\u00E9servation, veuillez contacter imm\u00E9diatement votre agence.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "REHAUSSEUR ENFANT / SI\u00C8GE B\u00C9B\u00C9",
                    "value": null,
                    "detailedDescription": "Les si\u00E8ges enfants et les rehausseurs ne sont pas inclus \u00E0 moins que ce soit sp\u00E9cifi\u00E9 lors de votre r\u00E9servation et avec co\u00FBt suppl\u00E9mentaire. Si vous souhaitez en r\u00E9server, veuillez contacter votre point de vente avant votre voyage.",
                    "bulletPointId": "CBBS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Acc\u00E8s limit\u00E9",
                    "value": null,
                    "detailedDescription": "Veuillez noter\u00A0qu'en raison des restrictions de la circulation\u00A0en centre-ville, nous vous d\u00E9poserons aussi pr\u00E8s que possible, en fonction de l'emplacement de votre h\u00F4tel. Vous devrez peut-\u00EAtre marcher quelques m\u00E8tres.",
                    "bulletPointId": "RESTACCESS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arriv\u00E9es nationales",
                    "value": null,
                    "detailedDescription": "Arriv\u00E9es nationales: Voyages effectu\u00E9s \u00E0 l\u2019int\u00E9rieur des fronti\u00E8res d\u2019un m\u00EAme pays ou de l\u2019espace a\u00E9rien europ\u00E9en (espace Schengen). Les passagers n\u2019ont pas \u00E0 passer par le contr\u00F4le douanier.",
                    "bulletPointId": "DOMEST",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arriv\u00E9es internationales",
                    "value": null,
                    "detailedDescription": "Arriv\u00E9es internationales: Voyages effectu\u00E9s \u00E0 l'ext\u00E9rieur de l'espace a\u00E9rien europ\u00E9en (espace Schengen) et arriv\u00E9es au sein de cet espace. Les passagers doivent passer par le contr\u00F4le douanier.",
                    "bulletPointId": "INTERNAT",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "SH TAB COST S17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Une fois avoir r\u00E9cup\u00E9r\u00E9 votre valise, veuillez quitter la zone des bagages par la porte B/C et vous rendre au comptoire \"Destination Services\" de l'aeroport situ\u00E9 juste en face. Vous y serez attendu et serez accompagn\u00E9 jusqu'au v\u00E9hicule de tranfer.-Si vous ne trouvez pas votre chauffeur/agent, veuillez appeler le DESTINATION SERVICES au +34  620131522. Langues du centre d'appel:Anglais, Espagnol.",
    "dateFrom": "2017-07-01T12:20:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 10.73,
            "time": "23:59:00",
            "date": "2017-06-28"
        }
    ],
    "price": 10.720,
    "subStatus": null,
    "specificaton": {
        "productCode": "STND",
        "generalInfo": [
            {
                "order": 10,
                "metric": null,
                "description": "1 bagage \u00E0 main autoris\u00E9 par personne",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagage autoris\u00E9 par personne (dimensions max. 158cm) - Longueur+largeur+hauteur=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Bus",
        "vehicleCode": "BS",
        "serviceCode": "SHRD",
        "productName": "Standard",
        "serviceName": "Partag\u00E9"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="29c32f2c-e203-480a-8f23-e12e7d944fb8" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "h6aGKhV858UL9mu5UR4BoA==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|4",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "FRA",
                "description": "Service priv\u00E9 avec chauffeur",
                "type": "GENERAL"
            },
            {
                "languageCode": "FRA",
                "description": "Cat\u00E9gorie Premium",
                "type": "PRODUCT"
            },
            {
                "languageCode": "FRA",
                "description": "Voiture",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Si vous voyagez avec un bagage suppl\u00E9mentaire ou un \u00E9quipement de sport,  nous vous prions de nous contacter, car des frais suppl\u00E9mentaires peuvent \u00EAtre appliqu\u00E9s",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBL\u00C8MES DE BAGAGE",
                    "value": null,
                    "detailedDescription": "Si vous avez des probl\u00E8mes avec vos bagages, veuillez appeler le num\u00E9ro d'urgence afin de pr\u00E9venir du retard et prendre les mesures n\u00E9cessaires.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "V\u00C9RIFICATION DE L'INFORMATION",
                    "value": null,
                    "detailedDescription": "Si les renseignements ne correspondent pas \u00E0 la r\u00E9servation, veuillez contacter imm\u00E9diatement votre agence.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "REHAUSSEUR ENFANT / SI\u00C8GE B\u00C9B\u00C9",
                    "value": null,
                    "detailedDescription": "Les si\u00E8ges enfants et les rehausseurs ne sont pas inclus \u00E0 moins que ce soit sp\u00E9cifi\u00E9 lors de votre r\u00E9servation et avec co\u00FBt suppl\u00E9mentaire. Si vous souhaitez en r\u00E9server, veuillez contacter votre point de vente avant votre voyage.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV TAB 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Quelqu'un viendra vous chercher \u00E0 l'entr\u00E9e de l'h\u00F4tel. Si vous ne trouvez pas votre chauffeur/agent, veuillez appeler le Destination Services au +34 620131522.Langues du centre d'appel: Anglais, Espagnol.",
    "dateFrom": "2017-07-03T07:00:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma de Majorque, A\u00E9roport Son San Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 26.20,
            "time": "23:59:00",
            "date": "2017-07-02"
        }
    ],
    "price": 26.200,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Transport exclusif pour vous",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Service porte \u00E0 porte ",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Disponible 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Service Meet &amp; Greet",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 bagage \u00E0 main autoris\u00E9 par personne",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagage autoris\u00E9 par personne (dimensions max. 158cm) - Longueur+largeur+hauteur=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Voiture",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "Premium",
        "serviceName": "Priv\u00E9"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="2045c730-440b-4a29-845f-1eb4a5a5c278"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000496"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="167d51b6-39fa-4fe0-8589-ce5ee98845de"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="fea975ea-61d7-4006-847b-54ef04dbf8fc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1332.19"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="151.50000"/>
  <con:entry key="cardFee" value="1.5"/>
  <con:entry key="preBookingId" value="H00000496"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1332.19"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="3dba8167-77bf-4f77-bd5b-67e0d073d4b3"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000496"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="60eebf3a-3c2c-47f8-bc12-aa4910bf5fa2" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer 104 - (1PAX + 1INF + 1CHD)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="652c1bb3-ce16-4ecc-a3f2-587a7a4160d6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "104 - Prebooking (1PAX + 1INF + 1CHD)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		}, {
			"age" : 0,  
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 2
		}, {
			"age" : 9,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-DILA#ST03-DIRE GT03-MOTO Lakes &amp; Mountains",
	"currency": "${#Project#currency}",
  "ancillaries": [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "302315"
			},{
				"type": "HOTELBEDS",
				"code": "215417"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,3],
				"roomCode": "SUI.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="516603ee-e93d-4fb3-999b-52d74ab43880"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="0c67b034-a30f-43ae-a446-52696b29916c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="4a6eb6ba-45c9-4062-874c-efc040dcd17b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="be96ee16-20bf-44c9-b9dd-604158bf48ca"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="04b20366-6242-4523-a0a1-96b2e0aeb483"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="00379cab-27d6-4d11-b257-15843c6b1392"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="179719e4-eb4c-40bf-ac93-e8275031966c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="06d833bb-4c05-4d80-bbc4-f6fc528b426b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def inTransferJson = transfersJson[0]

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="29a17ee3-b051-45bf-a577-1fbd2b010e54"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def inTransferJson = transfersJson[-1]

//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="a1c72ed2-7da7-4f56-9820-7717df3633f2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00004157"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="f49073b5-430c-45c6-a6fc-a51281c5f659" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "HYwklija9EvAfajaJ0mC0g==",
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-04-04",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-spcl-dsbld.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-spcl-dsbld.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-spcl-dsbld.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-spcl-dsbld.png"
            }
        ],
        "vehicleType": "H",
        "code": "0|0|0",
        "type": "H",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "Private hire with driver",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Special product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Disabled",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": null,
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "220",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "LUGGAGE PROBLEMS",
                    "value": null,
                    "detailedDescription": "In the event of a problem with customs or luggage,  please call the emergency number in order to advise of the delay and take the necessary steps.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CAN'T FIND DRIVER",
                    "value": null,
                    "detailedDescription": "In the event of being unable to locate the driver, please call the emergency number indicated in this voucher.",
                    "bulletPointId": "DRVR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": null,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "ADAPTAD TABCOS",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Once you have collected your luggage, leave the baggage area through door B/C, proceed to the Destination Services airport Desk located just in front. Here you will be attendend and escorted to the transfer vehicle.-If you are unable to locate the driver/agent, please call DESTINATION SERVICES on +34 620131522.Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-04-04T12:20:00",
    "daysBeforeConsultingWeb": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "215417",
            "giata": 302315,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAMELIA",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Brondo Architect",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 41.060,
    "subStatus": null,
    "specificaton": {
        "productCode": "SPCL",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Exclusive ride for you",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Door to door service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Available 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 10,
                "metric": null,
                "description": "1 item of hand baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 piece of baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Disabled",
        "vehicleCode": "DSBLD",
        "serviceCode": "PRVT",
        "productName": "Special",
        "serviceName": "Private"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004157"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="e5461979-b5e0-4a6c-af81-4ac07f41eb31" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "HYwklija9EvAfajaJ0mC0g==",
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "215417",
            "giata": 302315,
            "date": "2017-04-09",
            "zoneName": null,
            "zoneCode": "PALMAMELIA",
            "iata": null,
            "time": "12:05:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Brondo Architect",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-spcl-dsbld.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-spcl-dsbld.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-spcl-dsbld.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-spcl-dsbld.png"
            }
        ],
        "vehicleType": "H",
        "code": "1|0|0",
        "type": "H",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "Private hire with driver",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Special product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Disabled",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "220",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CAN'T FIND DRIVER",
                    "value": null,
                    "detailedDescription": "In the event of being unable to locate the driver, please call the emergency number indicated in this voucher.",
                    "bulletPointId": "DRVR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 20,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "ADAPTAD TABCOS",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "You will be picked up outside the hotel entrance. If you are unable to locate the driver/agent, please call Destination Services on +34 620131522. Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-04-09T12:05:00",
    "daysBeforeConsultingWeb": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 41.060,
    "subStatus": null,
    "specificaton": {
        "productCode": "SPCL",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Exclusive ride for you",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Door to door service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Available 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 10,
                "metric": null,
                "description": "1 item of hand baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 piece of baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Disabled",
        "vehicleCode": "DSBLD",
        "serviceCode": "PRVT",
        "productName": "Special",
        "serviceName": "Private"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004157"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="41907d66-0f85-4f66-b122-e46b39facdd5"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15a88e87-0715-4d95-a4f0-b6e7e6f5c032"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ff47203d-136c-4fd2-ba07-a3521bcd3ca0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d6f0aed9-e7f9-4249-8872-424f3bd9ba81"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="5dc9f355-6ed3-450a-ad27-d677ac2b60bb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="cc9e4082-1ff4-49e6-9aff-3d1bb03f2f17"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="08e055b3-0cb9-43d3-b73b-6ae549a6eef4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c9ef5b04-c641-4096-9564-0ce15295de6d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004157"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="9243f055-6b33-4289-85c5-c70eb25bc824"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="9964aa16-a388-4e0a-b50a-349f7b765214"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},{
			"dateOfBirth" : "2007-06-28",
			"age" : 9 ,
			"personType" : "CHD",
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "CHILDREN",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="484e9ba6-0a4f-47a9-8096-4c384ed295c4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="4cda372c-507e-4297-b97f-d02b6ee57287"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="34f81821-31bc-4f3d-ad60-eb6b1b52ad1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="c5f5a645-ac31-4827-b717-69e114eb0723"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="2229334b-65d9-4c34-8c39-80438878267c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="876006af-276e-4c8e-b40b-34b73c8a00d9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="02cb5373-f4de-4ad9-a2d7-198cc9f63388"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="ec1cfdef-a0b9-44af-9d26-529f710bb5f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1186.64"/>
  <con:entry key="pdescription" value="104 - Prebooking (1PAX + 1INF + 1CHD)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="H00004157"/>
  <con:entry key="pcodPaymentMethod" value="SW"/>
  <con:entry key="pstrDescription" value="Maestro"/>
  <con:entry key="pdepositCardFee" value="1.50"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1186.64"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="104 - Prebooking (1PAX + 1INF + 1CHD)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="69a3f41d-99f9-45dc-86b5-8c36d5515e58"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00004157"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest id="5a87f350-885a-4d2e-a26d-d358bbc08aff" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting><con:setting id="hasBeenConvertedToLoadUITest">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>10</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>47cece06-a727-4b16-96e5-2d421c851d1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e7d746c-24ac-453f-99d3-6e729f0370ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c258db0d-15f0-4a6c-98df-f82d0e804375</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5386b16-de9e-41f4-b946-0a2aee61050f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0d83e366-1642-4b06-b74c-d544b7c202dc" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer 109 (4PAX + 2ROOMS)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="466d5b19-b3a3-40fa-acd2-95175f19923e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "109 - Prebooking (4PAX + 2ROOMS)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-FAFR Family Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			},
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],

		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0aa89ee-deec-46fa-8553-1b986fbf436f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="59023b5d-c3b8-4820-8728-c42e41e36667"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="26daf41f-1ed8-4469-9964-f7d96e74ac91"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4efb33d4-33a4-4e27-ab00-c448ea908429"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="03c34afb-8e58-47a2-af60-4816e58e6c1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e96a5b42-8dc3-47b4-9a2a-44459cda3967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="14fdfe81-e2e4-41a7-9950-efef22e95967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="86349a37-5b1d-447a-b46f-0846ec5acd7c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="96226c17-bebd-40be-a981-7dad797ee1e9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]


//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="d54ce7ad-4a41-4287-bdf2-0a89483012ce" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00000343"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="53b16228-21d1-4ff3-86ac-2534171c5f47" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "XbUB7305vDvWDt95W8osMw==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-06-27",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma de Majorque, A\u00E9roport Son San Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-bs.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-bs.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-bs.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-bs.png"
            }
        ],
        "vehicleType": "B",
        "code": "0|0|0",
        "type": "B",
        "descriptionList": [
            {
                "languageCode": "FRA",
                "description": "Avec d'autres passagers",
                "type": "GENERAL"
            },
            {
                "languageCode": "FRA",
                "description": "Cat\u00E9gorie Standard",
                "type": "PRODUCT"
            },
            {
                "languageCode": "FRA",
                "description": "Bus",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "218",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Si vous voyagez avec un bagage suppl\u00E9mentaire ou un \u00E9quipement de sport,  nous vous prions de nous contacter, car des frais suppl\u00E9mentaires peuvent \u00EAtre appliqu\u00E9s",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "NE PAS LOCALISER LE POINT DE RENCONTRE ",
                    "value": null,
                    "detailedDescription": "Si vous ne parvenez pas \u00E0 localiser le point de rencontre, veuillez contacter le num\u00E9ro d'urgence indiqu\u00E9 sur ce bon d'\u00E9change.",
                    "bulletPointId": "MTPT",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBL\u00C8MES DE BAGAGE",
                    "value": null,
                    "detailedDescription": "Si vous avez des probl\u00E8mes avec vos bagages, veuillez appeler le num\u00E9ro d'urgence afin de pr\u00E9venir du retard et prendre les mesures n\u00E9cessaires.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "V\u00C9RIFICATION DE L'INFORMATION",
                    "value": null,
                    "detailedDescription": "Si les renseignements ne correspondent pas \u00E0 la r\u00E9servation, veuillez contacter imm\u00E9diatement votre agence.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "REHAUSSEUR ENFANT / SI\u00C8GE B\u00C9B\u00C9",
                    "value": null,
                    "detailedDescription": "Les si\u00E8ges enfants et les rehausseurs ne sont pas inclus \u00E0 moins que ce soit sp\u00E9cifi\u00E9 lors de votre r\u00E9servation et avec co\u00FBt suppl\u00E9mentaire. Si vous souhaitez en r\u00E9server, veuillez contacter votre point de vente avant votre voyage.",
                    "bulletPointId": "CBBS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Acc\u00E8s limit\u00E9",
                    "value": null,
                    "detailedDescription": "Veuillez noter\u00A0qu'en raison des restrictions de la circulation\u00A0en centre-ville, nous vous d\u00E9poserons aussi pr\u00E8s que possible, en fonction de l'emplacement de votre h\u00F4tel. Vous devrez peut-\u00EAtre marcher quelques m\u00E8tres.",
                    "bulletPointId": "RESTACCESS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arriv\u00E9es nationales",
                    "value": null,
                    "detailedDescription": "Arriv\u00E9es nationales: Voyages effectu\u00E9s \u00E0 l\u2019int\u00E9rieur des fronti\u00E8res d\u2019un m\u00EAme pays ou de l\u2019espace a\u00E9rien europ\u00E9en (espace Schengen). Les passagers n\u2019ont pas \u00E0 passer par le contr\u00F4le douanier.",
                    "bulletPointId": "DOMEST",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arriv\u00E9es internationales",
                    "value": null,
                    "detailedDescription": "Arriv\u00E9es internationales: Voyages effectu\u00E9s \u00E0 l'ext\u00E9rieur de l'espace a\u00E9rien europ\u00E9en (espace Schengen) et arriv\u00E9es au sein de cet espace. Les passagers doivent passer par le contr\u00F4le douanier.",
                    "bulletPointId": "INTERNAT",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "SH TAB COST S17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Une fois avoir r\u00E9cup\u00E9r\u00E9 votre valise, veuillez quitter la zone des bagages par la porte B/C et vous rendre au comptoire \"Destination Services\" de l'aeroport situ\u00E9 juste en face. Vous y serez attendu et serez accompagn\u00E9 jusqu'au v\u00E9hicule de tranfer.-Si vous ne trouvez pas votre chauffeur/agent, veuillez appeler le DESTINATION SERVICES au +34  620131522. Langues du centre d'appel:Anglais, Espagnol.",
    "dateFrom": "2017-06-27T12:20:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 21.46,
            "time": "23:59:00",
            "date": "2017-06-24"
        }
    ],
    "price": 21.440,
    "subStatus": null,
    "specificaton": {
        "productCode": "STND",
        "generalInfo": [
            {
                "order": 10,
                "metric": null,
                "description": "1 bagage \u00E0 main autoris\u00E9 par personne",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagage autoris\u00E9 par personne (dimensions max. 158cm) - Longueur+largeur+hauteur=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Bus",
        "vehicleCode": "BS",
        "serviceCode": "SHRD",
        "productName": "Standard",
        "serviceName": "Partag\u00E9"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000343"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="dc6f960c-63ce-4356-a572-24e9be367b14" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "XbUB7305vDvWDt95W8osMw==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|3",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "FRA",
                "description": "Service priv\u00E9 avec chauffeur",
                "type": "GENERAL"
            },
            {
                "languageCode": "FRA",
                "description": "Cat\u00E9gorie Premium",
                "type": "PRODUCT"
            },
            {
                "languageCode": "FRA",
                "description": "Voiture",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Si vous voyagez avec un bagage suppl\u00E9mentaire ou un \u00E9quipement de sport,  nous vous prions de nous contacter, car des frais suppl\u00E9mentaires peuvent \u00EAtre appliqu\u00E9s",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBL\u00C8MES DE BAGAGE",
                    "value": null,
                    "detailedDescription": "Si vous avez des probl\u00E8mes avec vos bagages, veuillez appeler le num\u00E9ro d'urgence afin de pr\u00E9venir du retard et prendre les mesures n\u00E9cessaires.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "V\u00C9RIFICATION DE L'INFORMATION",
                    "value": null,
                    "detailedDescription": "Si les renseignements ne correspondent pas \u00E0 la r\u00E9servation, veuillez contacter imm\u00E9diatement votre agence.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "REHAUSSEUR ENFANT / SI\u00C8GE B\u00C9B\u00C9",
                    "value": null,
                    "detailedDescription": "Les si\u00E8ges enfants et les rehausseurs ne sont pas inclus \u00E0 moins que ce soit sp\u00E9cifi\u00E9 lors de votre r\u00E9servation et avec co\u00FBt suppl\u00E9mentaire. Si vous souhaitez en r\u00E9server, veuillez contacter votre point de vente avant votre voyage.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV TAB 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Quelqu'un viendra vous chercher \u00E0 l'entr\u00E9e de l'h\u00F4tel. Si vous ne trouvez pas votre chauffeur/agent, veuillez appeler le Destination Services au +34 620131522.Langues du centre d'appel: Anglais, Espagnol.",
    "dateFrom": "2017-06-29T07:00:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma de Majorque, A\u00E9roport Son San Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 26.20,
            "time": "23:59:00",
            "date": "2017-06-28"
        }
    ],
    "price": 26.200,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Transport exclusif pour vous",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Service porte \u00E0 porte ",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Disponible 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Service Meet &amp; Greet",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 bagage \u00E0 main autoris\u00E9 par personne",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagage autoris\u00E9 par personne (dimensions max. 158cm) - Longueur+largeur+hauteur=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Voiture",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "Premium",
        "serviceName": "Priv\u00E9"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000343"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="2e37f2ef-d43b-4c91-9178-a658ad5a1bc4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15a88e87-0715-4d95-a4f0-b6e7e6f5c032"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ff47203d-136c-4fd2-ba07-a3521bcd3ca0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d6f0aed9-e7f9-4249-8872-424f3bd9ba81"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="5dc9f355-6ed3-450a-ad27-d677ac2b60bb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="cc9e4082-1ff4-49e6-9aff-3d1bb03f2f17"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="08e055b3-0cb9-43d3-b73b-6ae549a6eef4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c9ef5b04-c641-4096-9564-0ce15295de6d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000343"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="3e013618-44d5-436e-ba91-a76cb6b77a65"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="a2e81e7b-b962-425e-84d5-d409079cb8eb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1970-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Raquel",
			"gender" : "FEMALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Raquel M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="d1116aa3-964d-423c-81ee-12f9c035fb64"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="ea6d31c7-9217-4afb-aefe-92d4f48fad7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f1fcdf55-ba12-49d7-8549-ac76ec43f45f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a8aca26-ba1c-49d0-baab-18eb2d277434"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="a68e8ada-17c3-4f88-a2e5-511b3154390b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23501385-b09a-4849-97eb-0dc5ce26c1cb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3460e554-0df5-4dd3-a511-437a969af088"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d22cb27-54a1-4db7-b363-f771ed3ade5d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1116.35"/>
  <con:entry key="pdescription" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="deposit" value="303.00000"/>
  <con:entry key="cardFee" value="3.0"/>
  <con:entry key="preBookingId" value="H00000343"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="3.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1116.35"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="ac2a21b8-b941-4d6b-85c9-00842fb20aa1"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000343"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest id="96ab1db7-290e-4f91-8834-acd34505962d" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting><con:setting id="hasBeenConvertedToLoadUITest">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>10</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>47cece06-a727-4b16-96e5-2d421c851d1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e7d746c-24ac-453f-99d3-6e729f0370ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c258db0d-15f0-4a6c-98df-f82d0e804375</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5386b16-de9e-41f4-b946-0a2aee61050f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f85a4e3e-2452-4150-bbe3-591e82372d07" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer 130 - (6PAX + 3INF ) - [&quot;SEC-GOLF&quot;: 3] - no funciona transfers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="29160e32-aabc-434e-8e9d-b3be3cf7d3fc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "130 - Prebooking (6PAX + 3INF + 1SEO)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 3
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 4
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 5
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 6
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 7
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 8
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 9			
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" :  [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,7],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4,8],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [5,6,9],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="659edae8-5aea-4431-840a-9cf758b43895"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d311a789-6f87-4d76-8dfc-ae90f703f125"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="199927e8-57db-4e62-ab18-50c966fb1e43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="c7baf28d-2665-42bc-99af-fa750a47d48f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23685440-2341-4e89-a9d1-c37f432b64f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="bf683833-8951-4032-b0fe-5ae378d5bbee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="e25cd7e4-6df0-4869-9b44-ac823f16a2dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="d9ab130f-71c6-40e7-a1ef-a80dbcf1d746"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String FlightStepName = "Add ANC Ida"
//def ancillariesToAddFlight =["SEC-GOLF": 1,"SEO-CANO": 1,"SEC-GOLF": 1,"SEC-GOLF": 1, "SEC-GOLF": 1,"SEC-GOLF": 1]
def ancillariesToAddFlight =[["SEC-GOLF": 3]]

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)


return</script></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="d74fc052-4b33-4ce9-a6fd-a013e135992b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String FlightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight =[["SEC-GOLF": 3]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)


return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="a50497e7-f988-45da-a79b-c3f71e21fd8e" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="flight"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="5a0800c0-2228-4cb1-9af3-9004af39329d" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "GOLF",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Golf Bag",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 42.42,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEC",
        "units": null,
        "reference": "SEC-GOLF",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 42.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="648bfe3f-ba7d-4c28-880a-25ce30663444" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="flight"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="71dabd1e-49f3-4220-89c6-cdcf8ec471b6" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "GOLF",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Golf Bag",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 42.42,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEC",
        "units": null,
        "reference": "SEC-GOLF",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 42.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="a4d1f6aa-947d-4477-8664-afc6b14504d1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
log.info slurperResponse
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="8e5c7e66-6ba9-4e87-a553-ffe1edf1bd81"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]


//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="2d64698a-be62-4d54-81f3-0b116b9148f2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="null"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="51effe7b-196e-4308-b89a-421c3aa4dbb7" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "iBQqc2EzLciXjARucLPlYA==",
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-04-04",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "0|0|0",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "Private hire with driver",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Premium product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Car",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": null,
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "LUGGAGE PROBLEMS",
                    "value": null,
                    "detailedDescription": "In the event of a problem with customs or luggage,  please call the emergency number in order to advise of the delay and take the necessary steps.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CAN'T FIND DRIVER",
                    "value": null,
                    "detailedDescription": "In the event of being unable to locate the driver, please call the emergency number indicated in this voucher.",
                    "bulletPointId": "DRVR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": null,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV BOL 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Once you have collected your luggage, leave the baggage area through door B/C, proceed to the Destination Services airport Desk located just in front. Here you will be attendend and escorted to the transfer vehicle.-If you are unable to locate the driver/agent, please call DESTINATION SERVICES on +34 620131522.Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-04-04T12:20:00",
    "daysBeforeConsultingWeb": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 24.410,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Exclusive ride for you",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Door to door service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Available 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Meet &amp; Greet service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 item of hand baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 piece of baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Car",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "Premium",
        "serviceName": "Private"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="f94ee801-148a-44a7-be91-f12b4c1aff0d" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "iBQqc2EzLciXjARucLPlYA==",
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": "2017-04-09",
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": "12:05:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|0",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "Private hire with driver",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Premium product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Car",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "LUGGAGE PROBLEMS",
                    "value": null,
                    "detailedDescription": "In the event of a problem with customs or luggage,  please call the emergency number in order to advise of the delay and take the necessary steps.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV BOL 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "You will be picked up outside the hotel entrance. If you are unable to locate the driver/agent, please call Destination Services on +34 620131522. Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-04-09T12:05:00",
    "daysBeforeConsultingWeb": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 24.410,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Exclusive ride for you",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Door to door service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Available 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Meet &amp; Greet service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 item of hand baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 piece of baggage allowed per person",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Car",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "Premium",
        "serviceName": "Private"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="18a2bf2c-c48c-4e78-99d9-b779e945b6ee"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="0e1d83d7-b657-4153-b4c4-af50a67cd7ee"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="9a3fdc50-7205-45df-9617-77e71d97ce08"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 3
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 4
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 5
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 6
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 7
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 8
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 3",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 3 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 9			
		}
	],
	"creditCardInfo" : {
		 
		 "creditCardVendorCode" : "${#cardPayMethod}",
		 "cardDescription" : "${#cardStrDescription}",
		 "cardFeePercentage" : "${#ppctPayment}",
		 "cardHolderName" : "A Shopper",
		 "cardFee" : "${#cardFee}",
		 "validThruMonth" : "01" ,
		 "validThruYear" : "2020", 
		 "cardNumber" : "4444333322221111",
		 "billingAddress" : {
						"address" : "47A",
						"postalCode" : "CB94BQ",
						"city" : "Cambridge",
						"countryCode" : "GB",
						"phone": "646968857"               
						}       
     },
	 "order" : {
			   "amount" : "${#price}0",
			   "description" : "${#description}",
			   "shopperEmail" : "shopper@provider.com",
			   "currency" : "${#Project#currency}"
	} ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9977e087-ffa9-4bf9-919f-46cad86aad69"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="9953c431-2c7e-4632-bc66-2b45a33efb1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ccdb8ce6-b31a-4693-bba1-5802344fe668"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="f9fd633d-c60f-4947-99a1-536debacd30c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="7dac3771-3ac9-4920-8d88-afce88e71370"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="df313567-b331-4910-961f-3b3a3d1f8652"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="af406eac-b4ae-46a0-93ff-66d5c118d49f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="dcc53e30-ef55-4874-8031-dae9087503f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="5006.50"/>
  <con:entry key="pdescription" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="49.57"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="DC"/>
  <con:entry key="pstrDescription" value="Diner's Club"/>
  <con:entry key="pdepositCardFee" value="4.50"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="null"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fdbeb536-2859-4fdc-9fba-37b6a4e4b3cc" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE Transfer 102 (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="e94af9ef-1070-40c9-8a73-d137ce5f03fa"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 100,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 100,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ed878b95-4448-4c4d-8002-868fe41e40a6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="497ce0eb-9a3e-48ca-bd7e-74451cf25b14"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="9839771b-bbea-4331-918c-73b0d5686bc7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="13ad78b4-b76b-42fd-abd3-e9055dcdcdb7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="b4b6c4ad-eb33-4a14-a340-d5f0208e7453"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="155760a6-df96-4950-b4a1-8f36b3efe227"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="03cd5e41-7643-45dc-8888-78b2e2592b2c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="94095b11-47bf-4edf-8889-2e99c6983a82" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00004159"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="5e1dd58f-7ba3-4049-966a-1d40b83e5b1d"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="749d65c3-fabc-476a-b5ea-ee5e11ec0b86"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]

//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="910e562a-7cd1-4f11-bac7-bc649e8e981d" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "UY4mcJHsXo5+/U8z+miUpA==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-bs.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-bs.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-bs.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-bs.png"
            }
        ],
        "vehicleType": "B",
        "code": "0|0|0",
        "type": "B",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "With other passengers",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Standard product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Bus",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "218",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CAN'T FIND MEETING POINT",
                    "value": null,
                    "detailedDescription": "In the event of being unable to locate the meeting point, please call the emergency number indicated in this voucher.",
                    "bulletPointId": "MTPT",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "LUGGAGE PROBLEMS",
                    "value": null,
                    "detailedDescription": "In the event of a problem with customs or luggage,  please call the emergency number in order to advise of the delay and take the necessary steps.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "restricted access",
                    "value": null,
                    "detailedDescription": "Some hotels are situated in inaccessible areas. The driver will drop you off as close as possible.",
                    "bulletPointId": "RESTACCESS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Domestic arrivals",
                    "value": null,
                    "detailedDescription": "Domestic arrivals: Journeys made within the borders of the same country or European airspace (Schengen). Passengers do not have to go through customs control.",
                    "bulletPointId": "DOMEST",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "International arrivals",
                    "value": null,
                    "detailedDescription": "International arrivals: Journeys made with the origin outside of European airspace (Schengen) and arrival into it. Passengers must pass through customs control.",
                    "bulletPointId": "INTERNAT",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minutes",
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "SH TAB COST S17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Once you have collected your luggage, leave the baggage area through door B/C, proceed to the Destination Services airport Desk located just in front. Here you will be attendend and escorted to the transfer vehicle.-If you are unable to locate the driver/agent, please call DESTINATION SERVICES on +34  620131522. Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-06-12T12:20:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 11.040,
    "subStatus": null,
    "specificaton": {
        "productCode": "STND",
        "generalInfo": [
            {
                "order": 10,
                "metric": null,
                "description": "1 item of hand baggage allowed per person 55x40x20cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 piece of baggage allowed per person ( max.dimensions 158cm) lenght+width+height=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Bus",
        "vehicleCode": "BS",
        "serviceCode": "SHRD",
        "productName": "Standard",
        "serviceName": "Shared - Shuttle"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="preBookingId" value="H00004159"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="2c86afeb-57d2-4121-97a0-a48c873851ac" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "UY4mcJHsXo5+/U8z+miUpA==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 17509,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|4",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "ENG",
                "description": "Private hire with driver",
                "type": "GENERAL"
            },
            {
                "languageCode": "ENG",
                "description": "Premium product type",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ENG",
                "description": "Car",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minutes",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "In the event of extra luggage or sport equipment being checked in, please contact us, as this may carry an extra charge.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "LUGGAGE PROBLEMS",
                    "value": null,
                    "detailedDescription": "In the event of a problem with customs or luggage,  please call the emergency number in order to advise of the delay and take the necessary steps.",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHECK INFORMATION",
                    "value": null,
                    "detailedDescription": "If the details do not correspond with the reservation, please contact your agency immediately.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CHILDBOOSTER / BABY SEAT",
                    "value": null,
                    "detailedDescription": "Child car seats and boosters are not included unless specified in your booking and can carry an extra cost. Should you need to book them, please contact your point of sale prior to travelling.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minutes"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV TAB 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "You will be picked up outside the hotel entrance. If you are unable to locate the driver/agent, please call Destination Services on +34 620131522. Languages spoken at the call centre: English, Spanish.",
    "dateFrom": "2017-06-14T07:00:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma Majorca, Son Sant Joan Airport",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": null,
    "price": 25.760,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Exclusive ride for you",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Door to door service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Available 24/7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Meet &amp; Greet service",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 item of hand baggage allowed per person 55x40x20cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 piece of baggage allowed per person ( max.dimensions 158cm) lenght+width+height=158cm",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Car",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "Premium",
        "serviceName": "Private"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="preBookingId" value="H00004159"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete all transfers IN" id="eb7ca8ff-6fb3-4515-81d8-0acbdda66ba2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "GET"
String deleteTransferStepName = "Delete Transfer IN"
boolean isGoFlight = true


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def getResponse = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)

def transferType = isGoFlight? "IN" : "OUT"
def transfers = getResponse.transfers
for(int i=0; i&lt;transfers.size(); i++) {
  log.info ">>> "+getResponse.transfers
  if (transfers[i].type == transferType) {
    //add transfer code to deleting step and execute it
    step = testRunner.testCase.getTestStepByName(deleteTransferStepName)
    step.setPropertyValue('transferCode', transfers[i].code)
    utils.executeStep(deleteTransferStepName, testRunner, context)
  }
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Delete all transfers OUT" id="2b8fea36-5564-4f79-acbd-ae182b11a069"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "GET"
String deleteTransferStepName = "Delete Transfer OUT"
boolean isGoFlight = false


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def getResponse = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)

def transferType = isGoFlight? "IN" : "OUT"
def transfers = getResponse.transfers
for(int i=0; i&lt;transfers.size(); i++) {
  log.info ">>> "+getResponse.transfers
  if (transfers[i].type == transferType) {
    //add transfer code to deleting step and execute it
    step = testRunner.testCase.getTestStepByName(deleteTransferStepName)
    step.setPropertyValue('transferCode', transfers[i].code)
    utils.executeStep(deleteTransferStepName, testRunner, context)
  }
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete Transfer IN" id="fec61e35-623c-47bf-b9be-a90b6bd2f048" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingCode}/transfers/{transferCode}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Transfer IN" id="da704cb8-6080-4871-b31b-393fc39b9670" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingCode/transfers/transferCode</con:originalUri><con:assertion type="GroovyScriptAssertion" id="67f4172b-9141-4891-a12e-c8575006dfdb" name="Valida_prebooking"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Booking_Dates.groovy"))
//evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
//evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingCode" value="H00004159"/>
  <con:entry key="transferCode" value="0|0|0BB"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingCode</con:entry><con:entry>transferCode</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Transfer OUT" id="cd416bca-8223-4c08-a134-80290bd06358" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingCode}/transfers/{transferCode}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Transfer OUT" id="da704cb8-6080-4871-b31b-393fc39b9670" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingCode/transfers/transferCode</con:originalUri><con:assertion type="GroovyScriptAssertion" id="67f4172b-9141-4891-a12e-c8575006dfdb" name="Valida_prebooking"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Booking_Dates.groovy"))
//evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
//evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingCode" value="H00004159"/>
  <con:entry key="transferCode" value="1|0|4PC"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingCode</con:entry><con:entry>transferCode</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="95ca732c-5592-4c39-a28f-c49b59618f28"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15a88e87-0715-4d95-a4f0-b6e7e6f5c032"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ff47203d-136c-4fd2-ba07-a3521bcd3ca0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d6f0aed9-e7f9-4249-8872-424f3bd9ba81"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="5dc9f355-6ed3-450a-ad27-d677ac2b60bb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="cc9e4082-1ff4-49e6-9aff-3d1bb03f2f17"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="08e055b3-0cb9-43d3-b73b-6ae549a6eef4"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="c9ef5b04-c641-4096-9564-0ce15295de6d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004159"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="528d5e69-8340-4e6b-b10b-458bb34c0f0f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="65a3165c-48f0-467f-b8ba-f26badded55b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="e7cced04-9589-4a10-9855-e200de0e1072"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0ecf4d18-b9a7-415a-b2d4-064a51df85fa"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="1c9a4005-da7b-410b-b3cd-6b57f7dc976a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="11d8d10e-08c3-47a2-b77c-e07f675ca614"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b5b1452c-5a84-4918-9077-c2d672342f53"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="c9b03641-b9e3-432e-80e8-47eb689425fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="253ffc8c-8180-4143-a7d9-e1dc9d5822b7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="3c3e3ae9-59c1-49e2-a201-b50d888812e5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_AddTransfer" id="b3ee8554-8928-4828-894f-581ccba08b43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddTransfer.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="661.41"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0.00"/>
  <con:entry key="preBookingId" value="H00004159"/>
  <con:entry key="pcodPaymentMethod" value="SW"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Maestro"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="pcardFee" value="23.61"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="661.41"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="476c4d07-b303-45c7-8214-48bef6e04fac"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00004159"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest id="8d6e0450-584b-415e-bbc7-c64a11ec1f7c" name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting><con:setting id="hasBeenConvertedToLoadUITest">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>10</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>47cece06-a727-4b16-96e5-2d421c851d1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e7d746c-24ac-453f-99d3-6e729f0370ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c258db0d-15f0-4a6c-98df-f82d0e804375</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5386b16-de9e-41f4-b946-0a2aee61050f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="e2d30a33-392d-468a-8d97-68cdcf4c9859" name="Bateria Ancillaries"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="6169f545-853e-462a-8f08-4f2c0a521e9a" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX) - LUG&quot;: 1,LUG&quot;: 1,&quot;LUG-2WGT&quot;:2" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="a48fc3a3-e148-495e-9b0b-e2bfcf296f1b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="1d45d279-f88f-4f92-89b4-dc0455b8e235"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="e0d4e244-16dc-4952-a688-16658dc6bad9" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="12199c49-c846-4654-b044-87e35e0eecaf" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 30.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 26.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 30.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 26.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 26.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 51.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 44.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="9fe75895-4a04-448c-a755-129d06d87745"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="2fae7175-fdbf-440a-b562-7a875a22a0db" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="db43bc92-aee1-4d10-a2ea-d76870fbe712" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 20.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 20.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 20.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 44.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 38.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="c9f6ed6a-4757-47f3-a0a7-b666fcbae25e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="2345915d-2c24-44ab-8deb-e7cba3b96b1e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="728a3d30-4689-4fbe-9e81-773d66ad8dc9"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1111.38"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000703"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="1111.38"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b9ccfb5a-8837-43dd-8997-9d84c30406cf" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX) - [&quot;SEC-FIRE&quot;: 1]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="e28b46a2-1c06-4d3a-9355-61aec5505210"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="9cdd1002-3c45-4130-b58d-997447c698b9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["SEC-FIRE": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="3018d8ba-f047-4901-a360-e058605082d7" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000529"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="a018ab37-842a-4d7b-864f-156915836646" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "FIRE",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Armes \u00E0 feu sportives",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 40.85,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEC",
        "units": null,
        "reference": "SEC-FIRE",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 35.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000529"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="d44d624d-3c6a-48f6-b44f-ffc125d85cab"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["SEC-FIRE": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="47b273a1-46df-4f7d-818c-cd18fefd2067" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "FIRE",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Armes \u00E0 feu sportives",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 40.85,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEC",
        "units": null,
        "reference": "SEC-FIRE",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 35.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000529"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="7c9a263e-13b3-4d0c-8e1c-0b99bbfc1c86"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000529"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="967cd659-3843-4473-ab72-6391162facfd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="ad66da18-47dc-4dcb-8b3d-0b5482c4e8fc" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000529"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="01203649-6fa6-4651-bdbe-e3067a39cd01"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2708.20"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="26.81"/>
  <con:entry key="preBookingId" value="H00000529"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="price" value="2708.20"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b74756c8-a2bc-44df-b70a-c4dbd8c187fe" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="123 - (1PAX ) - [&quot;LUG-4WGT&quot;:1,&quot;LUG&quot;: 1, &quot;SEO-BICL&quot;:1]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="bb22c4c6-b10f-464a-8bfb-b0e6fa265169"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "123-(1PAX )[LUG-4WGT:1,LUG: 1, SEO-BICL:1]",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant" : false,
			"paxNumber": 1
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-ADON Adults Only",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
			"amtMarketPrice": 100,
				"flightSegments": [{
						"flightLegs": [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1],
				"roomCode": "DUS.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="10f3547b-2bd5-4bbd-ba63-afc13f39fa96"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d64bc863-5c47-4358-8507-ec061512a384"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b884a0c5-a793-40b5-9056-9fce366a82ba"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="397bbfd4-025b-4f17-982b-caed4860c70d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1d664e67-93dc-4ca2-a042-6a82edadd5a8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="a38080b2-b00c-4474-8bd6-76c572dea843"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="0af4eade-6441-4c00-b121-5c8c687683e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="1376473e-ba10-4c8e-9044-f6f7ae7348d7"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG-4WGT":1], ["LUG": 1], ["SEO-BICL":1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="bef41136-f011-419b-8373-f420b6ee377f" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="24e6bc4c-7cb4-454f-8d10-2d98ae4c78b5" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 30.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 4,
        "description": "Bagage en soute 32kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 77.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG-4WGT",
        "units": "Bags per sector",
        "reference": "LUG-4WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 66.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "V\u00E9lo",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.68,
        "status": null,
        "cardFee": 0.47,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="727bcd9e-ac91-494b-a64d-6f529f42c5df"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG-4WGT":1], ["LUG": 1], ["SEO-BICL":1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="61c7b282-c429-4b5d-b0d1-187a633d90d1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="1e424e05-44fa-491c-a160-6b20b7a6b266" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 22.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 4,
        "description": "Bagage en soute 32kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 67.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG-4WGT",
        "units": "Bags per sector",
        "reference": "LUG-4WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 58.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "V\u00E9lo",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.68,
        "status": null,
        "cardFee": 0.47,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="f425c9c2-3a19-4cb6-89e9-88c4a46e6030"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="ec5e86d5-25b9-4039-9630-96a206af7e3a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="54d83408-6aa0-42b6-a827-710bda9fafe4"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}
	],
	"creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
			 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="e6321b14-e586-41e8-a244-553ea5de13fc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="223babeb-aa86-4d2a-81b4-d9d779fea0f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="1b5e9b5a-3f17-48a9-ae4f-c19d7332fe31"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="cdc20928-eecc-4779-a0e2-5e5f6a1b26d3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96a6436e-7326-42da-97ec-582d9e79468b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="8a27d3a5-5e4d-42b1-8071-f29c2023fb3d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d9d4d4c4-ee4b-4793-8588-72b956db4f87"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1017.94"/>
  <con:entry key="pdescription" value="124 - Prebooking (1PAX + 1LUG + 1SEO)"/>
  <con:entry key="deposit" value="75.75000"/>
  <con:entry key="cardFee" value="0.75"/>
  <con:entry key="preBookingId" value="H00000491"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1017.94"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="123-(1PAX )[LUG-4WGT:1,LUG: 1, SEO-BICL:1]"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="06402958-2283-4de8-ace7-02e74237c749" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="124 - (2PAX ) - [&quot;LUG-2WGT&quot;: 1, &quot;LUG-3WGT&quot;:1] -> No va" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="241432cd-23be-4568-9ee6-bd8bd49d2c36"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1,2,3,4],
						"roomCode": "QUA.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ba6de311-5346-4c1e-9e99-d45cc3bcac0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="693a0ae7-d741-4621-814b-65065e1bc6ce"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="995c5663-0220-4331-8386-337575328a38"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="fc20b1b4-e91c-4108-954e-97ece4178e82"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1e09b10e-be8a-420a-b7a1-042d46e44ace"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="0ff0b18a-dc1d-41bf-9719-2d59aa620f20"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="97054a0d-faf8-4439-af4d-21e6102bfa92"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="02f1c137-d029-44fa-8300-5f4ea76340cb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight =[["LUG-2WGT": 1], ["LUG-3WGT": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="a418778a-74c1-4200-a93d-761be554134c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000488"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="d05ac484-2271-42b5-b070-aca028177a20" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 30.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagage en soute 26kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 56.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 48.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 30.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 3,
        "description": "Bagage en soute 29kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 66.51,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG-3WGT",
        "units": "Bags per sector",
        "reference": "LUG-3WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 57.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000488"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="d531e5db-5313-4650-9171-12a67c4c51f4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight =[["LUG-2WGT": 1], ["LUG-3WGT": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="49b04390-f195-4c17-bebf-32632492ecff" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000488"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="d50f3ee9-9026-46df-a27e-f55e9737f3aa" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 22.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagage en soute 26kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 22.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 3,
        "description": "Bagage en soute 29kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 57.17,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG-3WGT",
        "units": "Bags per sector",
        "reference": "LUG-3WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 49.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000488"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="a65f3b7d-2e4f-4fbe-853e-c589f5521376"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000488"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="0b8b5de9-7cf1-43b7-aae1-8b3e3e22f094"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="4b1deac2-29e6-401a-9525-2d69cf56fc85"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],
	"creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9997ab97-bbb3-42c9-a627-fc0d77efdf8f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6e27ec30-bbdd-417a-ad61-18f10d32e3e9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="8b5de46f-7db9-4b62-ab0b-b85b575df5b0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="2ec88607-4b53-4a2e-b769-c3029016b8e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e480a02d-7ddb-4133-a4c0-7583f6bd7d77"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="ba08f2b7-9080-4141-98e7-2b6ea8ce1dd8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="c6932121-05e0-4910-9f52-b3627193a8d8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d8f4b83-724a-43c3-9d9c-1e6ea69a89a3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1770.83"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="151.50000"/>
  <con:entry key="cardFee" value="1.5"/>
  <con:entry key="preBookingId" value="H00000488"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1770.83"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="cc23c694-afe0-4158-9111-fac6a5cc2530" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="125 - (2PAX + 1INF ) - [&quot;LUG&quot;: 3 &quot;LUG&quot;: 3]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="d36a61ce-a810-4590-94a1-d3d0812241e2"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1,2,3],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ba6de311-5346-4c1e-9e99-d45cc3bcac0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="693a0ae7-d741-4621-814b-65065e1bc6ce"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="995c5663-0220-4331-8386-337575328a38"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="fc20b1b4-e91c-4108-954e-97ece4178e82"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1e09b10e-be8a-420a-b7a1-042d46e44ace"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="0ff0b18a-dc1d-41bf-9719-2d59aa620f20"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="97054a0d-faf8-4439-af4d-21e6102bfa92"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="08d56a3a-a295-4e13-b2be-ca82248e17b1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 3],["LUG": 3]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="cbc51508-d127-4b1e-8eb6-4ce7c6830fc1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="05e75d7f-9192-4441-9dbf-7dd3b29c61c2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="95c2a381-ea2e-430d-84dc-795387c4703b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 3],["LUG": 3]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="9f3631e9-e58c-492b-b132-60130c87380c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="cb32fe66-a503-4382-a99f-7c8a146fb2ef" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="57ba4e28-4f08-4af9-806a-d3f284fbf1c8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="eae5e2bc-b92d-4936-b047-c4fad4da40df"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="c70e3f05-0bb3-4eb9-ab25-902e8cabd2c7"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		}
	],
	"creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
		 	 "cardFeePercentage" : "${#ppctPayment}",		 	 
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9997ab97-bbb3-42c9-a627-fc0d77efdf8f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6e27ec30-bbdd-417a-ad61-18f10d32e3e9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="8b5de46f-7db9-4b62-ab0b-b85b575df5b0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="2ec88607-4b53-4a2e-b769-c3029016b8e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e480a02d-7ddb-4133-a4c0-7583f6bd7d77"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="ba08f2b7-9080-4141-98e7-2b6ea8ce1dd8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="c6932121-05e0-4910-9f52-b3627193a8d8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d8f4b83-724a-43c3-9d9c-1e6ea69a89a3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2452.05"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="24.28"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pdepositCardFee" value="1.20"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="null"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="4f3d5234-f580-4571-b245-a5f884a1bf6f" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="126 - (2PAX + 2INF ) - [&quot;LUG-2WGT&quot;: 1, &quot;LUG-3WGT&quot;:1] - NO VA????" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="4d3ea9c7-bef2-4761-a3a1-4c994eef94a6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 2
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1,2,3,4],
						"roomCode": "QUA.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ba6de311-5346-4c1e-9e99-d45cc3bcac0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="693a0ae7-d741-4621-814b-65065e1bc6ce"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="995c5663-0220-4331-8386-337575328a38"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="fc20b1b4-e91c-4108-954e-97ece4178e82"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1e09b10e-be8a-420a-b7a1-042d46e44ace"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="0ff0b18a-dc1d-41bf-9719-2d59aa620f20"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="97054a0d-faf8-4439-af4d-21e6102bfa92"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="95ad09d3-1ac9-4c80-bf12-2bbadaade1e7"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight =[["LUG-2WGT": 1], ["LUG-3WGT": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="a67e3312-497a-499c-bbab-071f19088140" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004085"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="fad42f70-41f7-44d3-b8c1-08d2c26f6ccb" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 27.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 52.46,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 45.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 27.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 3,
        "description": "Each hold bag includes 29kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 62.95,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-3WGT",
        "units": "Bags per sector",
        "reference": "LUG-3WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 54.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004085"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="16ab0f64-cb2f-4c2a-ab02-882df592172b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight =[["LUG-2WGT": 1], ["LUG-3WGT": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="86281d8b-72ef-4fba-a74f-d647d35b9d4b" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004085"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="73cabbee-883a-4f3c-a4c8-64a0e1ac107a" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 25.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 50.13,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 43.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 25.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 3,
        "description": "Each hold bag includes 29kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 60.62,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-3WGT",
        "units": "Bags per sector",
        "reference": "LUG-3WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 52.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00004085"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="30ec8248-3666-4a83-8b7e-e1552c347be3"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004085"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="6462d717-f189-493f-99bd-3f3942835920"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="b7d1360b-13c8-423e-95b7-8851db4cf21e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe UNO",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe UNO M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3
		}, {
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe DOS",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe DOS M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		}
	],
	"creditCardInfo" : {			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
		 	 "cardFeePercentage" : "${#ppctPayment}",		 	 
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9997ab97-bbb3-42c9-a627-fc0d77efdf8f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6e27ec30-bbdd-417a-ad61-18f10d32e3e9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="8b5de46f-7db9-4b62-ab0b-b85b575df5b0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="2ec88607-4b53-4a2e-b769-c3029016b8e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e480a02d-7ddb-4133-a4c0-7583f6bd7d77"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="ba08f2b7-9080-4141-98e7-2b6ea8ce1dd8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="c6932121-05e0-4910-9f52-b3627193a8d8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d8f4b83-724a-43c3-9d9c-1e6ea69a89a3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2709.82"/>
  <con:entry key="pdescription" value="102 - Prebooking (2PAX)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="26.83"/>
  <con:entry key="preBookingId" value="H00004085"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="2682.99"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="a2bde35e-23cd-4c3e-910d-d24818ed9352" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="130 - (6PAX + 3INF ) - 6 x [&quot;SEC-GOLF&quot;: 1]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="97530662-1ffa-40c5-8674-2dcbf49c2528"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	
	"description" : "130 - Prebooking (6PAX + 3INF + 1SEO)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 1
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 2
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : true,
			"paxNumber" : 3
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 5
		},{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 6
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 7
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 8
		},{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 9			
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-LIVE Nightlife Hostspots",
	"currency": "${#Project#currency}",
	"ancillaries" :  [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2,7],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4,8],
				"roomCode": "DBT.ST"
			},{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [5,6,9],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="659edae8-5aea-4431-840a-9cf758b43895"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d311a789-6f87-4d76-8dfc-ae90f703f125"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="199927e8-57db-4e62-ab18-50c966fb1e43"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="c7baf28d-2665-42bc-99af-fa750a47d48f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23685440-2341-4e89-a9d1-c37f432b64f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="bf683833-8951-4032-b0fe-5ae378d5bbee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="e25cd7e4-6df0-4869-9b44-ac823f16a2dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="cb0f3c6c-a9d5-4d61-a9bf-790230b4b261"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="3391ecfe-0e1e-4172-8fa3-942973c13496" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000487"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="c00df0d9-47f3-4eb7-a00b-37dc5a9d8380" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 35.01,
        "status": null,
        "cardFee": 0.35,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 30.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000487"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="2f563d2c-3375-4a4a-bae5-b44907cef8cb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1],["LUG": 1]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)


return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="0e93ceef-6371-4f5f-9626-6f4cdef380b1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000487"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="55f60080-72a2-4e98-9832-9e81582a42a1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagage en soute 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 25.67,
        "status": null,
        "cardFee": 0.26,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000487"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="338f19f4-be71-466d-9b6a-8cf3da02a980"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000487"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="532e2943-e55a-4960-be1a-ca90aeba6c50"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="bc096308-5b66-475f-b2f8-5e97e7333ede"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 3
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 5
		},{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 6
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 7
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 8
		},{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",
			"firstName" : "bebe 3",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 3 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 9			
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="9977e087-ffa9-4bf9-919f-46cad86aad69"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="9953c431-2c7e-4632-bc66-2b45a33efb1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="ccdb8ce6-b31a-4693-bba1-5802344fe668"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="f9fd633d-c60f-4947-99a1-536debacd30c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="7dac3771-3ac9-4920-8d88-afce88e71370"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="df313567-b331-4910-961f-3b3a3d1f8652"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="af406eac-b4ae-46a0-93ff-66d5c118d49f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="dcc53e30-ef55-4874-8031-dae9087503f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="4349.23"/>
  <con:entry key="pdescription" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="deposit" value="454.50000"/>
  <con:entry key="cardFee" value="4.5"/>
  <con:entry key="preBookingId" value="H00000487"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="4.50"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="1"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="4349.23"/>
  <con:entry key="description" value="130 - Prebooking (6PAX + 3INF + 1SEO)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f4b34fe3-3003-484d-bb09-8a0106b34b9f" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="132 - (2PAX+CHD+2INF+3SEO+3LUG+SEATS)- [&quot;LUG&quot;: 3] - NO DISPO" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="2af51a26-825b-45f2-a2ec-83a36b63c8b0"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": true,
			"paxNumber": 2
		},
		{
			"age" : 8,
			"personType" : "CHD",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 4
		},
		{
			"age" : 0,
			"personType" : "INF",
			"hasInfant" : false,
			"paxNumber" : 5
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 100,
		"flights": [{
		        "amtMarketPrice": 605.9,
				"flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 265.32,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1,2,3,4,5],
						"roomCode": "APT.PR"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ba6de311-5346-4c1e-9e99-d45cc3bcac0d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="693a0ae7-d741-4621-814b-65065e1bc6ce"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="995c5663-0220-4331-8386-337575328a38"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="fc20b1b4-e91c-4108-954e-97ece4178e82"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1e09b10e-be8a-420a-b7a1-042d46e44ace"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="0ff0b18a-dc1d-41bf-9719-2d59aa620f20"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="97054a0d-faf8-4439-af4d-21e6102bfa92"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="8a4b8f8f-775f-45a7-9c8f-0b4c1a964581"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String FlightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 3]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="f74be445-0511-4ac5-bed9-be9c880a77a1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="a97572b0-2031-4348-854e-1fdc6632a723" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 31.51,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 31.20,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="3c484d37-03dc-40dc-b06b-82609902b684"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String FlightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 3]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="5a586a1b-933d-4d84-9269-15651b108d2e" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="bec952ac-f0c0-4f94-9643-89a6627f6436" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "3",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 31.51,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 31.20,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="50276775-a1ec-4e7f-938c-69c8cc080331"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="null"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="df403d0d-5a3d-4256-ae8b-1b56148dc5ac"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="a0e402a5-8083-4136-bebb-1ed486eb77c5"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
          }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",			
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2005-06-28",
			"age" : 11,
			"personType" : "CHD",			
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},		
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",			
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",						
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 5,
			"customer" : 0
		}
	],
	"creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
			 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="ecaab4ec-3ce4-4d64-ae22-4fe094c786bc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="45db1380-c2c9-48f9-85a9-819267f2039b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5105fcff-c089-4a4a-bda1-d4c4e611ba70"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="2e3387ff-db07-4f6f-8f36-12235c062458"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="bdd7ab40-4a25-4d77-a66b-dc8cd0dd3192"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="7108c4dc-23cf-42f9-b75b-c669f249544f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e2c55818-92df-4f49-9afc-d301c3920245"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d14f21ad-649f-4dd3-8af8-334ff41e77c6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="8de72955-4ece-46ee-b912-5a1822ec09d0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1797.61"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="17.80"/>
  <con:entry key="preBookingId" value="null"/>
  <con:entry key="pcodPaymentMethod" value="AX"/>
  <con:entry key="pdepositCardFee" value="2.25"/>
  <con:entry key="pstrDescription" value="American Express"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="price" value="null"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="null"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of CONFIRM" id="9fdea21f-c534-4e14-aca3-cb28cadf6974"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
          }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",			
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : true,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2005-06-28",
			"age" : 11,
			"personType" : "CHD",			
			"firstName" : "CHILDREN",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},		
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",			
			"firstName" : "bebe 1",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		},
		{
			"dateOfBirth" : "2016-06-28",
			"age" : 0,
			"personType" : "INF",						
			"firstName" : "bebe 2",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "bebe 2 M TEST",
				"docId" : "111111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2016-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 5,
			"customer" : 0
		}
	],
	"creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
			 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="ecaab4ec-3ce4-4d64-ae22-4fe094c786bc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="45db1380-c2c9-48f9-85a9-819267f2039b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5105fcff-c089-4a4a-bda1-d4c4e611ba70"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="2e3387ff-db07-4f6f-8f36-12235c062458"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="bdd7ab40-4a25-4d77-a66b-dc8cd0dd3192"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="7108c4dc-23cf-42f9-b75b-c669f249544f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e2c55818-92df-4f49-9afc-d301c3920245"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d14f21ad-649f-4dd3-8af8-334ff41e77c6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="8de72955-4ece-46ee-b912-5a1822ec09d0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1797.61"/>
  <con:entry key="pdescription" value=""/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="17.80"/>
  <con:entry key="preBookingId" value="H00001552"/>
  <con:entry key="pcodPaymentMethod" value="AX"/>
  <con:entry key="pdepositCardFee" value="2.25"/>
  <con:entry key="pstrDescription" value="American Express"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="price" value="1779.81"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b73cf49d-0787-4998-bc4b-b046c6b0a186</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="86a99d75-687f-4c07-862f-12a1dcb668bc" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE ancillary 124 - (1PAX + 1LUG + 1SEO)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="98014984-6043-4757-83e6-01fbdf054823"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{

	"description" : "101 - Prebooking (1PAX)",
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-BEAC Beach Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
						        "tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
			}],
			"hotels": [{
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 100,
				"hotelCodes": [{
					"type": "GIATA",
					"code": "${#Project#hotelGIATACode}"
				},{
					"type": "HOTELBEDS",
					"code": "${#Project#hotelBedsCode}"
				}
			],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
					"boardCode": "${#Project#boardCode}",
					"personAssignaments": [1],
					"roomCode": "DUS.ST"
				}],
			"currency": "${#Project#currency}"
		  }],
		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"	
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="10f3547b-2bd5-4bbd-ba63-afc13f39fa96"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d64bc863-5c47-4358-8507-ec061512a384"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b884a0c5-a793-40b5-9056-9fce366a82ba"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="397bbfd4-025b-4f17-982b-caed4860c70d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1d664e67-93dc-4ca2-a042-6a82edadd5a8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="a38080b2-b00c-4474-8bd6-76c572dea843"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="0af4eade-6441-4c00-b121-5c8c687683e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="437d7bbf-54b4-4042-94a6-75f9341df7bb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Go Flight data
  String ancillariesListStepGo = 'List ancillaries GO'
  String goFlightStepName = "Add ANC Ida"
  def ancillariesToAddGoFlight = [["LUG": 1], ["SEO-BICL": 1]]

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      

//ancillariesData library
if (!context.ancillariesData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Ancillaries"].testSteps["ancillariesData"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//GO FLIGHT
  //transfer booking and flight data
  confirmBooking.TransferAncillaries(goFlightStepName, slurperResponse)
  //get the list of ancillaries
  ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesListStepGo, testRunner, context)
  //execute
  ancillariesData.addAncillariesForAllPassengers(goFlightStepName, ancillariesToAddGoFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="b5da480a-4a89-417d-b1ab-58d73d54b3d0" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 31.48,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 27.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bicycle",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.63,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="348e19c5-875c-4f4d-8d7e-7e28ec0f7cee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="eee6acf8-9a06-41f0-8c4a-f838367f36f0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="99e8a9bc-a341-428a-984f-735f93c62754" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="097f1bcc-2ee9-4e39-9437-0772a83879d0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

//Return Flight data
  String ancillariesListStepReturn = 'List ancillaries RETURN'
  String returnFlightStepName = "Add ANC Vuelta"
  def ancillariesToAddReturnFlight = [["LUG": 1], ["SEO-BICL": 1]]

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//RETURN FLIGHT
  //transfer booking and flight data
  confirmBooking.TransferAncillaries(returnFlightStepName, slurperResponse)
  //get the list of ancillaries
  ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesListStepReturn, testRunner, context)
  //execute
  ancillariesData.addAncillariesForAllPassengers(returnFlightStepName, ancillariesToAddReturnFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="6075238b-988e-4beb-835c-64dc51216413" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bicycle",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.63,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="348e19c5-875c-4f4d-8d7e-7e28ec0f7cee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="eee6acf8-9a06-41f0-8c4a-f838367f36f0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="46ebd8e6-f4fd-4cfe-8bd0-ee7d2f0c752f" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete ancillaries GO" id="7d98f0df-7222-474b-97f8-2c98e5119557"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Go Flight data
  String deleteAncillariesStepNameGo = "DELETE ANC GO"
  def ancillariesToDeleteGoFlight = [["LUG": 1], ["SEO-BICL": 1]]
  boolean isGoFlight = true

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//GO FLIGHT
  confirmBooking.TransferAncillaries(deleteAncillariesStepNameGo, slurperResponse)
  ancillariesData.deleteAncillariesForAllPassengers(deleteAncillariesStepNameGo, ancillariesToDeleteGoFlight, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE ANC GO" id="74dea8fe-3cc0-436e-9147-5ca30cf973b6" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE ANC GO" id="4aca7994-9b11-442b-9a62-4742734a84fa" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="code" value="${#Project#flightNumber_ida}-SEO-1"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete ancillaries RETURN" id="107c3344-52f3-45d6-bfc1-ee7b249919bd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Return Flight data
  String deleteAncillariesStepNameReturn = "DELETE ANC RETURN"
  def ancillariesToDeleteReturnFlight = [["LUG": 1], ["SEO-BICL": 1]] // [ ANCILLARY_CODE: PAX NUMBER ]
  boolean isGoFlight = false

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//RETURN FLIGHT
  //execute
  confirmBooking.TransferAncillaries(deleteAncillariesStepNameReturn, slurperResponse)
  ancillariesData.deleteAncillariesForAllPassengers(deleteAncillariesStepNameReturn, ancillariesToDeleteReturnFlight, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE ANC RETURN" id="62f275ce-8961-442f-ada9-9c1b656c4619" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE ANC RETURN" id="4aca7994-9b11-442b-9a62-4742734a84fa" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
  <con:entry key="code" value="${#Project#flightNumber_vuelta}-SEO-1"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="86a5eb1d-f7e2-4951-ade0-9bd6616980fc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="a68aeda9-3042-4892-89a5-abf5a4298634"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="584045f6-071f-4c01-a08f-6821f0246a2b"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}
	], "creditCardInfo" : {
			 
			 "creditCardVendorCode" : "${#cardPayMethod}",
			 "cardDescription" : "${#cardStrDescription}",
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "cardFee" : "${#cardFee}",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"                 
							}      
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="fbc313ea-69fb-498e-bc9f-40798f92ad5c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="e6321b14-e586-41e8-a244-553ea5de13fc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="223babeb-aa86-4d2a-81b4-d9d779fea0f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="1b5e9b5a-3f17-48a9-ae4f-c19d7332fe31"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="cdc20928-eecc-4779-a0e2-5e5f6a1b26d3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96a6436e-7326-42da-97ec-582d9e79468b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="8a27d3a5-5e4d-42b1-8071-f29c2023fb3d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d9d4d4c4-ee4b-4793-8588-72b956db4f87"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1210.67"/>
  <con:entry key="pdescription" value="124 - Prebooking (1PAX + 1LUG + 1SEO)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="11.99"/>
  <con:entry key="preBookingId" value="H00004086"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="pcardFee" value=""/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="1198.68"/>
  <con:entry key="description" value="101 - Prebooking (1PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pcardFee</con:entry><con:entry>pdeposit</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="12203894-b6ab-407b-9675-64602cecf749" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE ancillary 125 - (2PAX + 2INF + 1LUG + 1SEO)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="120c1912-7fea-45a8-ac3b-3c0e7735e327"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "agency": {
        "company": "company",
        "office": "office",
        "userAgent": "userAgent"
    },
    "ancillaries": [],
    "bookingBeginningDate": "${#Project#departureDateTime_ida}",
    "bookingEndDate": "${#Project#departureDateTime_vuelta}",
    "category": "GT03-GOTO Golf Resorts",
    "currency": "${#Project#currency}",
    "description": "125 - Prebooking (2PAX + 2INF + 1LUG + 1SEO)",
    "destination": "${#Project#arrivalAirportIATA_ida}",
    "flightHotelPackage": {
        "amtMarketPrice": 100,
        "flights": [
            {
                "amtMarketPrice": 100,
                "flightSegments": [
                    {
                        "flightLegs": [
                            {
                                "airline": "${#Project#airline}",
                                "arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
                                "arrivalDateTime": "${#Project#arrivalDateTime_ida}",
                                "bookingClass": "Y",
                                "departureAirportIATA": "${#Project#departureAirportIATA_ida}",
                                "departureDateTime": "${#Project#departureDateTime_ida}",
                                "flightCode": null,
                                "flightLabel": null,
                                "flightNumber": "${#Project#flightNumber_ida}",
                                "tariffClass": "${#Project#tariffClass}"
                            }
                        ]
                    },
                    {
                        "flightLegs": [
                            {
                                "airline": "${#Project#airline}",
                                "arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
                                "arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
                                "bookingClass": "Y",
                                "departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
                                "departureDateTime": "${#Project#departureDateTime_vuelta}",
                                "flightCode": null,
                                "flightLabel": null,
                                "flightNumber": "${#Project#flightNumber_vuelta}",
                                "tariffClass": "${#Project#tariffClass}"
                            }
                        ]
                    }
                ]
            }
        ],
        "hotels": [
            {
                "amtMarketPrice": 100,
                "arrivalDate": "${#Project#arrivalDateTime_ida}",
                "currency": "${#Project#currency}",
                "destination": "${#Project#arrivalAirportIATA_ida}",
                "hotelCodes": [
                    {
                        "code": "${#Project#hotelGIATACode}",
                        "type": "GIATA"
                    },
                    {
                        "code": "${#Project#hotelBedsCode}",
                        "type": "HOTELBEDS"
                    }
                ],
                "lengthOfStay": "${#Project#lengthOfStay}",
                "productSupplier": "HOTELBEDS",
                "rooms": [
                    {
                        "boardCode": "${#Project#boardCode}",
                        "personAssignaments": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "roomCode": "QUA.ST"
                    }
                ]
            }
        ],
        "tourOperator": "string"
    },
    "market": "${#Project#market}",
    "origin": "${#Project#departureAirportIATA_ida}",
    "paxes": [
        {
            "age": null,
            "hasInfant": true,
            "paxNumber": 1,
            "personType": "ADT"
        },
        {
            "age": null,
            "hasInfant": true,
            "paxNumber": 2,
            "personType": "ADT"
        },
        {
            "age": 0,
            "hasInfant": false,
            "paxNumber": 3,
            "personType": "INF"
        },
        {
            "age": 0,
            "hasInfant": false,
            "paxNumber": 4,
            "personType": "INF"
        }
    ],
    "promocode": null,
    "userType": "${#Project#userType}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="10f3547b-2bd5-4bbd-ba63-afc13f39fa96"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d64bc863-5c47-4358-8507-ec061512a384"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b884a0c5-a793-40b5-9056-9fce366a82ba"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="397bbfd4-025b-4f17-982b-caed4860c70d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1d664e67-93dc-4ca2-a042-6a82edadd5a8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="a38080b2-b00c-4474-8bd6-76c572dea843"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="0af4eade-6441-4c00-b121-5c8c687683e6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="703a19d9-65df-41bd-afd8-aefc8f75818f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Go Flight data
  String ancillariesListStepGo = 'List ancillaries GO'
  String goFlightStepName = "Add ANC Ida"
  def ancillariesToAddGoFlight = [["LUG": 1], ["SEO-BICL": 1]]

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      

//ancillariesData library
if (!context.ancillariesData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Ancillaries"].testSteps["ancillariesData"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//GO FLIGHT
  //transfer booking and flight data
  confirmBooking.TransferAncillaries(goFlightStepName, slurperResponse)
  //get the list of ancillaries
  ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesListStepGo, testRunner, context)
  //execute
  ancillariesData.addAncillariesForAllPassengers(goFlightStepName, ancillariesToAddGoFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="89b8bb4d-a968-4e35-84f7-f246bad68567" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 31.48,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 27.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bicycle",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.63,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="348e19c5-875c-4f4d-8d7e-7e28ec0f7cee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="eee6acf8-9a06-41f0-8c4a-f838367f36f0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="85936f4f-c713-4f69-98a9-b349b31460b5" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="62248988-ad48-41fb-a3cf-40c0f008f613"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

//Return Flight data
  String ancillariesListStepReturn = 'List ancillaries RETURN'
  String returnFlightStepName = "Add ANC Vuelta"
  def ancillariesToAddReturnFlight = [["LUG": 1], ["SEO-BICL": 1]]

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//RETURN FLIGHT
  //transfer booking and flight data
  confirmBooking.TransferAncillaries(returnFlightStepName, slurperResponse)
  //get the list of ancillaries
  ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesListStepReturn, testRunner, context)
  //execute
  ancillariesData.addAncillariesForAllPassengers(returnFlightStepName, ancillariesToAddReturnFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="ceae2255-2985-43a9-9515-9928c2dc09a2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 29.15,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 25.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": "BICL",
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bicycle",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 46.63,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "SEO",
        "units": null,
        "reference": "SEO-BICL",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="348e19c5-875c-4f4d-8d7e-7e28ec0f7cee"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="eee6acf8-9a06-41f0-8c4a-f838367f36f0"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="70e741fc-376a-48d6-b4ce-061e0016c187" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete ancillaries GO" id="7d4c099c-5288-4e8e-ab4c-3935bb60dabd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Go Flight data
  String deleteAncillariesStepNameGo = "DELETE ANC GO"
  def ancillariesToDeleteGoFlight = [["LUG": 1], ["SEO-BICL": 1]]
  boolean isGoFlight = true

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//GO FLIGHT
  confirmBooking.TransferAncillaries(deleteAncillariesStepNameGo, slurperResponse)
  ancillariesData.deleteAncillariesForAllPassengers(deleteAncillariesStepNameGo, ancillariesToDeleteGoFlight, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE ANC GO" id="e17a6a04-96e5-46dc-b28e-b66155c0988d" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE ANC GO" id="4aca7994-9b11-442b-9a62-4742734a84fa" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
  <con:entry key="code" value="${#Project#flightNumber_ida}-SEO-1"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Delete ancillaries RETURN" id="330a6c48-18d4-49d7-b9f1-0e37631f4df1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
//Return Flight data
  String deleteAncillariesStepNameReturn = "DELETE ANC RETURN"
  def ancillariesToDeleteReturnFlight = [["LUG": 1], ["SEO-BICL": 1]] // [ ANCILLARY_CODE: PAX NUMBER ]
  boolean isGoFlight = false

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)

//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      


def ancillariesData = context.ancillariesData
def utils = context.utils

def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//RETURN FLIGHT
  //execute
  confirmBooking.TransferAncillaries(deleteAncillariesStepNameReturn, slurperResponse)
  ancillariesData.deleteAncillariesForAllPassengers(deleteAncillariesStepNameReturn, ancillariesToDeleteReturnFlight, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE ANC RETURN" id="e8b43498-b408-44d1-9dfa-b55271b86ce8" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries/{code}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE ANC RETURN" id="4aca7994-9b11-442b-9a62-4742734a84fa" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/ancillaries/13</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="code" value="${#Project#flightNumber_vuelta}-SEO-1"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>code</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="5636ae8b-00bc-4bbd-afcf-cd272e649552"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "SPAIN",
				"countryName" : "SPAIN",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "SPAIN",
					"countryName" : "SPAIN",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="15b45b91-970b-49d1-b0b6-468ad4d86630"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f87f2daa-eb2a-4b3e-9e9d-8572cd666ef7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="6d377c99-914c-43ac-bb38-11582be4eabb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="feea5e10-bb86-4ee7-b7aa-8ab7a7337f76"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="34a471e0-0d0a-4277-9f5b-b88dd6582f97"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="1b8a777d-0620-48a9-8941-34579b1116fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="5b0101c5-84cf-4554-a9b0-c4bab7d1019e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00004087"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="08868759-5588-49c7-986b-763165480498"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="c9ac0b88-22a2-4c24-ae77-6d32b2d84d24"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
  "client" : {
    "comments" : [{
        "commentText":"Vacaciones invierno",
                "commentType":"H"
              }
    ],
    "addresses" : [{
        "city" : "Barcelona",
        "country" : "SPAIN",
        "countryName" : "SPAIN",
        "location" : "OFFICE",
        "mail" : "testbarcelona@gfi.es",
        "primary" : true,
        "stateProvince" : "Mataro",
        "street" : "C/Passeig de Gracia 44",
        "streetAdditional" : "C/Passeig de Gracia 46",
        "addressCode" : "ssss",
        "telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],        
        "zipCode" : "08015"
      }, {
        "city" : "MADRID",
        "country" : "SPAIN",
        "countryName" : "SPAIN",
        "location" : "OFFICE",
        "mail" : "testmadrid@gfi.es",
        "primary" : false,
        "stateProvince" : "Fuenjirola",
        "street" : "C/ Paseo 44",
        "streetAdditional" : "C/ Paseo 46",
        "addressCode" : "ffff",
        "telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],                
        "zipCode" : "08015"
      }
    ],
    "dateOfBirth" : "1983-12-26",
    "firstName" : "Anna",
    "gender" : "MALE",
    "lastName" : "Marcilla",
    "middleName" : "MA",
    "travelDocumentData" : {
      "docCustomerName" : "ANNA MARCILLA",
      "docId" : "87654321X",
      "docIssueAuthority" : "string",
      "docIssueLocation" : "BARCELONA",
      "docLimitations" : "string",
      "docType" : "DNI",
      "effectiveDate" : "2000-06-28",
      "expireDate" : "2020-06-28"
    },
    "paxReferenceNumber": 1
  },
  "paxes" : [{
      "addresses" : [{
          "city" : "BARCELONA",
          "country" : "SPAIN",
          "countryName" : "SPAIN",
          "location" : "OFFICE",
          "mail" : "mail@gfi.es",
          "primary" : true,
          "stateProvince" : "MATARO",
          "street" : "ARAGO",
          "streetAdditional" : 122,
          "telephones" : [{
              "type" : "FAX",
              "number" : "66666666666"
            }, {
              "type" : "MOBILE",
              "number" : "99999999999"
            }, {
              "type" : "FAX",
              "number" : "88888888888"
            }
          ],
          "zipCode" : "00000"
        }, {
          "city" : "SLIEMA",
          "country" : "MALTA",
          "countryName" : "MALTA",
          "location" : "OFFICE",
          "mail" : "mail2@gfi.es",
          "primary" : false,
          "stateProvince" : "SLIEMA",
          "street" : "MERCIEQA",
          "streetAdditional" : 123,
          "telephones" : [{
              "type" : "FAX",
              "number" : "11111111"
            }
          ],
          "zipCode" : "11111"
        }
      ],
      "dateOfBirth" : "1975-06-28",
      "age" : null,
      "personType" : "ADT",
      "firstName" : "Anna",
      "gender" : "MALE",
      "lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
      "middleName" : "MA",
      "travelDocumentData" : {
        "docCustomerName" : "ANNA M MARCILLA",
        "docId" : "87654321X",
        "docIssueAuthority" : "BARCELONA",
        "docIssueLocation" : "BARCELONA",
        "docLimitations" : "string",
        "docType" : "DNI",
        "effectiveDate" : "2010-06-28",
        "expireDate" : "2020-06-28"
      },
      "hasInfant" : true,
      "salutationType" : "MR",
      "paxNumber" : 1,
      "customer" : 0
    },
    {
      "dateOfBirth" : "1980-06-28",
      "age" : null,
      "personType" : "ADT",
      "firstName" : "Marta",
      "gender" : "MALE",
      "lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
      "middleName" : "MA",
      "travelDocumentData" : {
        "docCustomerName" : "MARTA M TEST",
        "docId" : "12345678A",
        "docIssueAuthority" : "BARCELONA",
        "docIssueLocation" : "BARCELONA",
        "docLimitations" : "string",
        "docType" : "DNI",
        "effectiveDate" : "2010-06-28",
        "expireDate" : "2020-06-28"
      },
      "hasInfant" : true,
      "salutationType" : "MR",
      "paxNumber" : 2,
      "customer" : 0
    },
    {
      "dateOfBirth" : "2016-06-28",
      "age" : 0,
      "personType" : "INF",
      "firstName" : "bebe 1",
      "gender" : "MALE",
      "lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
      "middleName" : "MA",
      "travelDocumentData" : {
        "docCustomerName" : "bebe M TEST",
        "docId" : "111111111M",
        "docIssueAuthority" : "BARCELONA",
        "docIssueLocation" : "BARCELONA",
        "docLimitations" : "string",
        "docType" : "DNI",
        "effectiveDate" : "2016-06-28",
        "expireDate" : "2020-06-28"
      },
      "hasInfant" : false,
      "salutationType" : "MR",
      "paxNumber" : 3,
      "customer" : 0
    },
    {
      "dateOfBirth" : "2016-06-28",
      "age" : 0,
      "personType" : "INF",
      "firstName" : "bebe 2",
      "gender" : "MALE",
      "lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
      "middleName" : "MA",
      "travelDocumentData" : {
        "docCustomerName" : "bebe 2 M TEST",
        "docId" : "111111111M",
        "docIssueAuthority" : "BARCELONA",
        "docIssueLocation" : "BARCELONA",
        "docLimitations" : "string",
        "docType" : "DNI",
        "effectiveDate" : "2016-06-28",
        "expireDate" : "2020-06-28"
      },
      "hasInfant" : false,
      "salutationType" : "MR",
      "paxNumber" : 4,
      "customer" : 0
    }
  ],
  "creditCardInfo" : {
       
       "creditCardVendorCode" : "${#cardPayMethod}",
       "cardDescription" : "${#cardStrDescription}",
       "cardFeePercentage" : "${#ppctPayment}",
       "cardHolderName" : "A Shopper",
       "cardFee" : "${#cardFee}",
       "validThruMonth" : "01" ,
       "validThruYear" : "2020", 
       "cardNumber" : "4444333322221111",
       "billingAddress" : {
              "address" : "47A",
              "postalCode" : "CB94BQ",
              "city" : "Cambridge",
              "countryCode" : "GB",
              "phone": "646968857"
              }      
     },
   "order" : {
           "amount" : "${#price}0",
           "description" : "${#description}",
           "shopperEmail" : "shopper@provider.com",
           "currency" : "${#Project#currency}"
  }  ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="fbc313ea-69fb-498e-bc9f-40798f92ad5c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="e6321b14-e586-41e8-a244-553ea5de13fc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="223babeb-aa86-4d2a-81b4-d9d779fea0f8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="1b5e9b5a-3f17-48a9-ae4f-c19d7332fe31"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="cdc20928-eecc-4779-a0e2-5e5f6a1b26d3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96a6436e-7326-42da-97ec-582d9e79468b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="8a27d3a5-5e4d-42b1-8071-f29c2023fb3d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="d9d4d4c4-ee4b-4793-8588-72b956db4f87"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2575.57"/>
  <con:entry key="pdescription" value="124 - Prebooking (1PAX + 1LUG + 1SEO)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="25.50"/>
  <con:entry key="preBookingId" value="H00004087"/>
  <con:entry key="pcodPaymentMethod" value="VI"/>
  <con:entry key="pstrDescription" value="Visa Credit"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="pcardFee" value=""/>
  <con:entry key="ppctPayment" value="1.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="2550.07"/>
  <con:entry key="description" value="125 - Prebooking (2PAX + 2INF + 1LUG + 1SEO)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pcardFee</con:entry><con:entry>pdeposit</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="3840f338-4046-4650-b1d5-b98fde80797b" name="Bateria Seats+ANC+Promocode"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="3a321aaa-fbd2-415c-a5c7-f532c345d2b3" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="102 - (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="f48a82f5-1e09-429d-8850-8b18d21e6954"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 600,
		"flights": [{
		        "amtMarketPrice": 440,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 170,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="user" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="e9d3f514-b6c9-460e-ad57-464862054ef7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="822c419c-4b78-4765-8bde-a08084419252" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="90a933ae-c2e1-440d-815f-0f39a8d21a6c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "5C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "5D"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="ba23183d-9a17-4b45-8845-eaec1001f561"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="50c3ec77-8d89-4ac0-8c07-f3d871421465" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="3f9083bd-dc40-4f6a-aadc-58c0d7001caa" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": true,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "4E"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "4F"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="988b6902-9387-4c39-a386-0c6878c07263"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = ["LUG": 1,"LUG-2WGT":2]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="276d3662-cb7d-46e2-80c8-b9b3a91fd2e8" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="9a6955b3-a71f-4c76-b9fc-5c24bcef7df1" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 30.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 26.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 26.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 51.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 44.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="f211903d-f517-4de6-82c6-75c2b6c0cd3d"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = ["LUG": 1,"LUG-2WGT":2]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return

</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="2851a716-2430-4254-94b8-2f3f794ea5e6" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="bd08c53b-fc16-4152-b2b5-8bf1e5a06c7d" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 20.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 20.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 44.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 38.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="4a254943-bf6b-4b99-aee1-85147e3170f0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Promocode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>Add Promocode</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>SeatPlan</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>SEAT PLAN ida prebooking 102</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>SeatIda</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>SEAT02 102 Add 2SEAT Ida</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>SeatVuelta</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>SEAT02 102 Add 2SEAT Vuelta</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>GET</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>GET</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Promocode" id="6b38f133-3f96-4abc-b13a-157acde0545c"><con:settings/><con:config service="http://localhost:8082" methodName="Validate/Revalidate Promocodes" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/promocodes/{promocodeId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Promocode" id="0b902be4-5cdf-46eb-b4ee-2b34acc09189" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="cd29b16f-339f-4bc0-976d-446478b77729" name="Promocodes"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_promocodes.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ecad544c-f2f5-4c35-b5cc-9aab03ecd4a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d5667c4f-f7b4-43ba-8c89-c680678da990"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="0f305a6b-f26b-4ce9-bb3f-766e97a9f5dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="00a5dceb-149f-44e4-be51-0c10d8f51c65"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="61214a6d-a6b3-4650-952f-27f0a83326a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3896b915-8146-4d63-ba18-fe9b2d2da553"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="064103f1-57e0-43b3-8deb-ec9776ec7e8a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="promocodeId" value="${#Project#promocode}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>promocodeId</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT PLAN ida prebooking 102" id="e25684ee-deab-4a1f-9a3f-42ea5cc7ffcb" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT PLAN ida prebooking 102" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 102 Add 2SEAT Ida" id="ee984bd0-7e67-4767-9f64-cf853945b00c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 102 Add 2SEAT Ida" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "${#Project#rowSeat}A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "${#Project#rowSeat}B",
	"price" : 15.99,
	"paxReference": 2
}]

</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 102 Add 2SEAT Vuelta" id="874d2e3c-129c-4300-94cd-aaaab51f0ebd" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 102 Add 2SEAT Vuelta" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}B",
	"price" : 15.99,
	"paxReference": 2
}]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="8eec9d4b-dd1b-444c-a267-d49eb0831fb6"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="88fbf951-38d4-4576-816a-3e37327cce1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="e214a7b5-5124-44f5-8f1e-35cfc46fb674"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="210018dd-612f-4f2c-bdb6-093bdb0ab966"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="18497fd3-e717-4d05-bda2-2511aca8144b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="57e11463-733a-4b90-b672-b381f5ec7ec3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="4296b620-6217-48bd-b91b-d6d0bd8a2bf9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="40e7fcd0-44c8-47df-9cec-02d57855a1f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000677"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>content-type</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="0000f06d-e087-4177-b0a1-579868253e53"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="1d6c1f85-6996-465a-89a6-f65135576a26"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1229.19"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="150.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000677"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="1.60"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="1229.19"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="188c1848-932b-4930-8399-53d4467e22eb"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000651"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>description</con:name><con:value>Anna</con:value></con:property><con:property><con:name>ptotalPriceWithFee</con:name><con:value>cccccAnna</con:value></con:property><con:property><con:name>cardFee</con:name><con:value>cccccAnna</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="5d1f99b2-0d48-4f23-a143-dd2343828e33" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="109 - (4PAX + 2ROOMS)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="413b28c0-43b9-44e6-b6d3-6f940fea5a4c"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description" : "109 - Prebooking (4PAX + 2ROOMS)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-FAFR Family Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			},
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],

		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0aa89ee-deec-46fa-8553-1b986fbf436f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="59023b5d-c3b8-4820-8728-c42e41e36667"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="26daf41f-1ed8-4469-9964-f7d96e74ac91"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4efb33d4-33a4-4e27-ab00-c448ea908429"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="03c34afb-8e58-47a2-af60-4816e58e6c1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e96a5b42-8dc3-47b4-9a2a-44459cda3967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="14fdfe81-e2e4-41a7-9950-efef22e95967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats GO" id="ecdb0b95-8d56-45a4-b9fb-821c3dfc2fdf"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListGoStepName = "LIST SEATS GO"
String addSeatsGoStepName = "ADD SEATS GO"
boolean isGoFlight = true

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)
//ADD SEATS GO
  def seatsListGo = seatsData.getListOfSeats(seatsListGoStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsGoStepName, passengers, seatsListGo, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS GO" id="c8aebea4-d755-4d95-998c-d145761fe9f5" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS GO" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS GO" id="4301c796-a25c-4eed-8739-beb29c6584a4" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS GO" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_ida}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 13.99,
        "status": null,
        "cardFee": 0.14,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 11.99,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add Seats RETURN" id="6d88bb9c-91ac-4ae2-bb06-da49c95682ae"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 

String seatsListReturnStepName = "LIST SEATS RETURN"
String addSeatsReturnStepName = "ADD SEATS RETURN"
boolean isGoFlight = false

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

//if the 'seatsData' library has not been initialized yet, initialize it
if (!context.seatsData) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Seats"].testSteps["SeatsData"].run(testRunner, context)      
def seatsData = context.seatsData

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferSeats(slurperResponse)



def passengers = seatsData.getPassengersFromPrebookingResponse(slurperResponse)

//ADD SEATS RETURN
  def seatsListReturn = seatsData.getListOfSeats(seatsListReturnStepName, testRunner, context)
  seatsData.addSeatsForPassengers(addSeatsReturnStepName, passengers, seatsListReturn, isGoFlight, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="LIST SEATS RETURN" id="33614cc0-c41f-4884-ba8a-39475d1ea91f" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="LIST SEATS RETURN" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ADD SEATS RETURN" id="3386624a-1b0f-4c78-8abc-f580c2b1c7d2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ADD SEATS RETURN" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "isMiddleSeat": false,
        "paxReference": 1,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": true,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2A"
    },
    {
        "isMiddleSeat": true,
        "paxReference": 2,
        "isAisleSeat": false,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2B"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 3,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2C"
    },
    {
        "isMiddleSeat": false,
        "paxReference": 4,
        "isAisleSeat": true,
        "priceBand": "Up Front",
        "flightNumber": "${#Project#flightNumber_vuelta}",
        "productSupplier": null,
        "discountAmount": null,
        "isAvailable": true,
        "markupName": null,
        "currencyProvider": null,
        "priceBandId": 2,
        "description": null,
        "isWindowSeat": false,
        "indMarkupDefault": null,
        "isExitRow": false,
        "personType": "ADT",
        "discountLine": 0,
        "isDistressedSeat": null,
        "pairPrice": 0,
        "amtMarketPrice": 15.94,
        "status": null,
        "cardFee": 0.16,
        "code": "161",
        "productMarkup": 0,
        "isAvailableForChild": true,
        "price": 13.66,
        "isAvailableForInfant": true,
        "flightLegReference": null,
        "subStatus": null,
        "seatAccess": "Regular",
        "seatNumber": "2D"
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="64cbd001-cb80-47cb-b790-75c00e3927f4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String flightStepName = "Add ANC Ida"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="e83921d1-dcd5-45eb-89c2-9cff0af471a2" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="f5473012-de1a-42b3-872b-593de30c2092" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 30.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 26.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 30.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 26.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 26.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 51.34,
        "status": null,
        "cardFee": 0.30,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 44.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="f0371dc5-87c7-4555-a520-2569d080ad74"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String flightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = [["LUG": 1],["LUG": 1],["LUG-2WGT":2]]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(flightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillariesForAllPassengers(flightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="c434b95b-7a77-4a46-9d8f-9f06f775f2b4" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="f5af488b-9814-44e1-940c-adcd548edde5" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 20.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": null,
        "description": "Bagagli da stiva 20kg",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 20.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 20.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "flightCode": null,
        "weightQuantity": 2,
        "description": "Bagagli da stiva 26kg",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 44.34,
        "status": null,
        "cardFee": 0.23,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 38.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add transfers IN" id="12798e31-7e94-4074-94ec-acad068346c0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType IN"


//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[0]
//TransferJson= 2 * transfersJson[0].price

//add JSON to the IN request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)

</script></con:config></con:testStep><con:testStep type="groovy" name="Add transfers OUT" id="72e05b45-b076-4684-9d41-2a3166e57245"><con:settings/><con:config><script>import groovy.json.JsonSlurper

import groovy.json.JsonOutput

// initialize and get the 'booking' library
testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Booking"].testSteps["PreConfirm"].run(testRunner, context)
def confirmBooking = context.booking
  
//if the 'utils' library has not been initialized yet, initialize it
if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils


String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String getTransfersStepName = "Get Transfer"
String addTransferStepName = "Add transferType OUT"

//transfer booking and flight data
def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
confirmBooking.transferTransfers(slurperResponse)

//execute 'Get Transfer' step and collect data from it
utils.executeStep(getTransfersStepName,testRunner, context)
def transfersJson = utils.getSlurperResponseFromStep(getTransfersStepName, testRunner)
//log.info JsonOutput.prettyPrint(JsonOutput.toJson(transfersJson))
def TransferJson = transfersJson[-1]
//TransferJson= 2 * transfersJson[0].price

//add JSON to the OUT request and execute it
utils.addJSONToRequest(addTransferStepName, TransferJson)
utils.executeStep(addTransferStepName, testRunner, context)</script></con:config></con:testStep><con:testStep type="restrequest" name="Get Transfer" id="9240fd13-2a36-4e6c-aa51-8e6402b3f86c" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{prebookingCode}/transfers" methodName="Get Transfers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Transfer" id="e973a7ec-222b-4f4d-bf42-5ac9792d95b1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings/101/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c510db7-cec3-49f2-908c-1bc80becb198" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whitelabelId" value="EASYJET"/>
  <con:entry key="prebookingCode" value="H00000704"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whitelabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>prebookingCode</con:entry><con:entry>content-type</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType IN" id="7b7c933a-342a-4bdc-b83d-55f67aad3727" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType IN" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "IN",
    "productSupplier": null,
    "availToken": "I/ktIuf+I0+bzZlIXbGgxQ==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": "2017-07-05",
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": "12:20:00",
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma di Maiorca, aeroporto Son Sant Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/shrd-stnd-bs.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/shrd-stnd-bs.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/shrd-stnd-bs.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/shrd-stnd-bs.png"
            }
        ],
        "vehicleType": "B",
        "code": "0|0|0",
        "type": "B",
        "descriptionList": [
            {
                "languageCode": "ITA",
                "description": "Con altri passeggeri",
                "type": "GENERAL"
            },
            {
                "languageCode": "ITA",
                "description": "Tipologia prodotto standard",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ITA",
                "description": "Autobus",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minuti",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "218",
            "maxWaitingTimeSupplierInternationalType": 90,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Chi viaggia con equipaggiamento extra o materiali sportivi dovr\u00E0 mettersi in contatto con noi poich\u00E9 potrebbero esserci costi aggiuntivi di trasporto.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "NON SI TROVA IL PUNTO D'INCONTRO",
                    "value": null,
                    "detailedDescription": "Nel caso in cui non si riesca a individuare il punto di ritrovo, contattare il numero di emergenza riportato sul presente buono.",
                    "bulletPointId": "MTPT",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBLEMI CON IL BAGAGLIO",
                    "value": null,
                    "detailedDescription": "In caso di problemi con il bagaglio, chiamare il numero di emergenza per comunicare il ritardo e perch\u00E9 possano essere presi i provvedimenti necessari. ",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CONTROLLO DELL' INFORMAZIONE",
                    "value": null,
                    "detailedDescription": "Se i dati non corrispondono alla prenotazione, vi invitiamo a contattare immediatamente la vostra agenzia.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "ADATTATORE DI RIALZO PER BAMBINI /SEGGIOLINO NEONATO",
                    "value": null,
                    "detailedDescription": "Seggiolini e supporti da bambino per l\u2019auto non sono inclusi, a meno che non siano specificati nella prenotazione a un prezzo supplementare. Nel caso tu ne abbia bisogno, contatta il tuo punto vendita prima della partenza.",
                    "bulletPointId": "CBBS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Accesso limitato",
                    "value": null,
                    "detailedDescription": "Ricorda che, a causa delle restrizioni del traffico nel centro della citt\u00E0 e in base all\u2019ubicazione del tuo hotel, potresti dover percorrere un piccolo tratto a piedi. In ogni caso, ti lasceremo il pi\u00F9 vicino possibile.",
                    "bulletPointId": "RESTACCESS",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arrivi domestici",
                    "value": null,
                    "detailedDescription": "Arrivi domestici: Viaggi effettuati all\u2019interno dei confini dello stesso paese o nello spazio aereo europeo (Schengen). I passeggeri non devono passare attraverso i controlli doganali.",
                    "bulletPointId": "DOMEST",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "Arrivi internazionali",
                    "value": null,
                    "detailedDescription": "Arrivi internazionali: Viaggi effettuati con provenienza esterna allo spazio europeo (Schengen) e con arrivo all\u2019interno di esso. I passeggeri devono passare attraverso i controlli doganali.",
                    "bulletPointId": "INTERNAT",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 60,
            "maxWaitingTimeSupplierDomesticType": 60,
            "maxWaitingTimeSupplierInternational": "minuti",
            "maxWaitingTimeSupplierDomestic": "minuti"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "SH TAB COST S17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Dopo aver ritirato il tuo bagaglio, lascia l\u2019area bagagli tramite la porta B/C e procedi verso il banco aeroportuale della Destination Services, che si trova appena di fronte. Qui sarai accolto e accompagnato verso il veicolo del trasferimento. Se non riesci a localizzare il conducente/agente, chiama la DESTINATION SERVICES al n. +34 620131522. Lingue parlate al call-centre: inglese, spagnolo.",
    "dateFrom": "2017-07-05T12:20:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 366633,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 21.46,
            "time": "23:59:00",
            "date": "2017-07-02"
        }
    ],
    "price": 21.440,
    "subStatus": null,
    "specificaton": {
        "productCode": "STND",
        "generalInfo": [
            {
                "order": 10,
                "metric": null,
                "description": "1 bagaglio a mano per persona",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagaglio per persona la cui somma di\u00A0lunghezza+larghezza+altezza\u00A0non superi i 158cm.",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Autobus",
        "vehicleCode": "BS",
        "serviceCode": "SHRD",
        "productName": "Standard",
        "serviceName": "Condiviso"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5aeb59ce-ba6f-4ab7-96ac-5710b9a2d2d5" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="dateFrom" value="2017-01-22T21:25"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add transferType OUT" id="93134fcf-da6c-4c43-9169-c469754da8fc" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/transfers" methodName="Add transfer" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add transferType OUT" id="d41a058a-d7cf-4585-9d30-2058c5262645" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "guestList": [
        
    ],
    "additionalCost": [
        
    ],
    "type": "OUT",
    "productSupplier": null,
    "availToken": "I/ktIuf+I0+bzZlIXbGgxQ==",
    "codSupplier": null,
    "currency": "GBP",
    "markupName": null,
    "currencyProvider": "GBP",
    "pickUp": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": null,
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "1533",
            "giata": 366633,
            "date": null,
            "zoneName": null,
            "zoneCode": "PALMAPTOPI",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Mirador",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "transferInfo": {
        "imageList": [
            {
                "type": "S",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/small/prvt-prm-cr.png"
            },
            {
                "type": "M",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/medium/prvt-prm-cr.png"
            },
            {
                "type": "L",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/large/prvt-prm-cr.png"
            },
            {
                "type": "XL",
                "url": "http://transferstatic.hotelbeds.com/giata/transfers/TRD/extralarge/prvt-prm-cr.png"
            }
        ],
        "vehicleType": "C",
        "code": "1|0|3",
        "type": "P",
        "descriptionList": [
            {
                "languageCode": "ITA",
                "description": "Servizio privato con autista",
                "type": "GENERAL"
            },
            {
                "languageCode": "ITA",
                "description": "Tipologia prodotto premium",
                "type": "PRODUCT"
            },
            {
                "languageCode": "ITA",
                "description": "Automobile",
                "type": "VEHICLE"
            }
        ],
        "transferSpecificContent": {
            "maxWaitingTime": "minuti",
            "pickupStops": [
                
            ],
            "bulletPointType": null,
            "maxNumberStops": null,
            "frequency": [
                
            ],
            "specificContentId": "1340",
            "maxWaitingTimeSupplierInternationalType": null,
            "specificInfo": [
                
            ],
            "genericGidelines": [
                {
                    "order": null,
                    "metric": null,
                    "description": "SPECIAL LUGGAGE",
                    "value": null,
                    "detailedDescription": "Chi viaggia con equipaggiamento extra o materiali sportivi dovr\u00E0 mettersi in contatto con noi poich\u00E9 potrebbero esserci costi aggiuntivi di trasporto.",
                    "bulletPointId": "SPLU",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "PROBLEMI CON IL BAGAGLIO",
                    "value": null,
                    "detailedDescription": "In caso di problemi con il bagaglio, chiamare il numero di emergenza per comunicare il ritardo e perch\u00E9 possano essere presi i provvedimenti necessari. ",
                    "bulletPointId": "LGPR",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "CONTROLLO DELL' INFORMAZIONE",
                    "value": null,
                    "detailedDescription": "Se i dati non corrispondono alla prenotazione, vi invitiamo a contattare immediatamente la vostra agenzia.",
                    "bulletPointId": "CHIN",
                    "type": null
                },
                {
                    "order": null,
                    "metric": null,
                    "description": "ADATTATORE DI RIALZO PER BAMBINI /SEGGIOLINO NEONATO",
                    "value": null,
                    "detailedDescription": "Seggiolini e supporti da bambino per l\u2019auto non sono inclusi, a meno che non siano specificati nella prenotazione a un prezzo supplementare. Nel caso tu ne abbia bisogno, contatta il tuo punto vendita prima della partenza.",
                    "bulletPointId": "CBBS",
                    "type": null
                }
            ],
            "maxWaitingTimeType": 30,
            "maxWaitingTimeSupplierDomesticType": 15,
            "maxWaitingTimeSupplierInternational": null,
            "maxWaitingTimeSupplierDomestic": "minuti"
        }
    },
    "contractList": [
        {
            "sequence": null,
            "name": "PRIV TAB 16-17",
            "incomingOffice": 1,
            "comments": [
                
            ]
        }
    ],
    "description": null,
    "indMarkupDefault": null,
    "transferPickUpInfo": "Pick up davanti all'entrata dell'hotel. Nel caso in cui tu non riesca a localizzare il tuo autista/agente, ti preghiamo di telefonare Destination Services al +34 620131522.Lingue parlate al call centre: inglese, spagnolo.",
    "dateFrom": "2017-07-07T07:00:00",
    "daysBeforeConsultingWeb": null,
    "supplier": null,
    "discountLine": 0,
    "pairPrice": 0,
    "amtMarketPrice": null,
    "modificationPolicyList": null,
    "suplements": [
        
    ],
    "status": "ACTIVE",
    "cardFee": 0,
    "sharedPickupLocations": [
        
    ],
    "code": null,
    "webInfo": null,
    "productMarkup": 0,
    "destination": [
        {
            "zip": null,
            "pickUpType": null,
            "terminalType": "A",
            "tti": null,
            "number": null,
            "bestMatchOrder": null,
            "code": "PMI",
            "giata": null,
            "date": null,
            "zoneName": null,
            "zoneCode": "AEROPUERTO",
            "iata": null,
            "time": null,
            "distance": null,
            "order": null,
            "address": null,
            "description": null,
            "icao": null,
            "name": "Palma di Maiorca, aeroporto Son Sant Joan",
            "fs": null,
            "longitude": null,
            "town": null,
            "latitude": null
        }
    ],
    "contactInfoList": null,
    "cancelationPolicies": [
        {
            "amount": 26.20,
            "time": "23:59:00",
            "date": "2017-07-06"
        }
    ],
    "price": 26.200,
    "subStatus": null,
    "specificaton": {
        "productCode": "PRM",
        "generalInfo": [
            {
                "order": 1,
                "metric": null,
                "description": "Corsa esclusiva",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "ER",
                "type": null
            },
            {
                "order": 2,
                "metric": null,
                "description": "Servizio porta a porta ",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "DTDS",
                "type": null
            },
            {
                "order": 3,
                "metric": null,
                "description": "Disponibile 24 ore su 24, 7 giorni su 7",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "AV247",
                "type": null
            },
            {
                "order": 4,
                "metric": null,
                "description": "Servizio Meet &amp; Greet",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "M&amp;GS",
                "type": null
            },
            {
                "order": 11,
                "metric": null,
                "description": "1 bagaglio a mano per persona",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BAHB",
                "type": null
            },
            {
                "order": 12,
                "metric": null,
                "description": "1 bagaglio per persona la cui somma di\u00A0lunghezza+larghezza+altezza\u00A0non superi i 158cm.",
                "value": null,
                "detailedDescription": null,
                "bulletPointId": "BA",
                "type": null
            }
        ],
        "vehicleName": "Automobile",
        "vehicleCode": "CR",
        "serviceCode": "PRVT",
        "productName": "premium",
        "serviceName": "Privato"
    }
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/117/transfers</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8c8baab8-e8cd-42df-aee0-d761ebfe791f" name="Valida_TransferList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_TransferList.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="currencyProvider" value="GBP"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="24.61"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="dateFrom" value="2017-01-24T15:20"/>
  <con:entry key="availToken" value="2M19Jkw+85QNw/xFjKzhzw=="/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>availToken</con:entry><con:entry>dateFrom</con:entry><con:entry>userIdentifier</con:entry><con:entry>price</con:entry><con:entry>currencyProvider</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ff6e4517-69a3-4e4f-ac4b-57b3ff6861bb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Promocode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>Add Promocode</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Promocode" id="c9232414-f440-4fcf-96c9-a73fb8c1eb83"><con:settings/><con:config service="http://localhost:8082" methodName="Validate/Revalidate Promocodes" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/promocodes/{promocodeId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Promocode" id="0b902be4-5cdf-46eb-b4ee-2b34acc09189" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="cd29b16f-339f-4bc0-976d-446478b77729" name="Promocodes"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_promocodes.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ecad544c-f2f5-4c35-b5cc-9aab03ecd4a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d5667c4f-f7b4-43ba-8c89-c680678da990"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="0f305a6b-f26b-4ce9-bb3f-766e97a9f5dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="00a5dceb-149f-44e4-be51-0c10d8f51c65"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="61214a6d-a6b3-4650-952f-27f0a83326a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3896b915-8146-4d63-ba18-fe9b2d2da553"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="064103f1-57e0-43b3-8deb-ec9776ec7e8a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="promocodeId" value="${#Project#promocode}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>promocodeId</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="c3f0dd02-f408-43be-a073-dc5d7334de47"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000704"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="7c522192-cf3e-4573-8b80-2efda5a3511c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="1fcb7ef0-c6d3-4976-bcae-1f0a550cc18e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1970-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Raquel",
			"gender" : "FEMALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Raquel M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="d1116aa3-964d-423c-81ee-12f9c035fb64"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="ea6d31c7-9217-4afb-aefe-92d4f48fad7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f1fcdf55-ba12-49d7-8549-ac76ec43f45f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a8aca26-ba1c-49d0-baab-18eb2d277434"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="a68e8ada-17c3-4f88-a2e5-511b3154390b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23501385-b09a-4849-97eb-0dc5ce26c1cb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3460e554-0df5-4dd3-a511-437a969af088"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d22cb27-54a1-4db7-b363-f771ed3ade5d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="2070.50"/>
  <con:entry key="pdescription" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="deposit" value="300.00"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00000704"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="2070.50"/>
  <con:entry key="description" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="6f7bdd66-3d47-4711-b8ff-bf29ee90af26"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000704"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3f5b84d9-8e68-44c4-a373-6dcd3dc4952c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of 102 - (2PAX)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="3195f0c9-fd8f-4e7e-9a1c-ef281a642adc"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description": "102 - Prebooking (2PAX)",
	"paxes": [{
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 1
		}, {
			"age": null,
			"personType": "ADT",
			"hasInfant": false,
			"paxNumber": 2
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category": "GT03-CITR City Breaks",
	"currency": "${#Project#currency}",
	"ancillaries": [],
	"flightHotelPackage": {
		"amtMarketPrice": 600,
		"flights": [{
		        "amtMarketPrice": 440,
		        "flightSegments": [{
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_ida}",
								"departureDateTime": "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime": "${#Project#arrivalDateTime_ida}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_ida}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}, {
						"flightLegs": [{
								"tariffClass": "${#Project#tariffClass}",
								"airline": "${#Project#airline}",
								"departureAirportIATA": "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime": "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA": "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime": "${#Project#arrivalDateTime_vuelta}",
								"bookingClass": "Y",
								"flightNumber": "${#Project#flightNumber_vuelta}",
								"flightCode": null,
								"flightLabel": null
							}
						]
					}
				]
			}
		],
		"hotels": [{
				"description": "descripcion del hotel",
				"arrivalDate": "${#Project#arrivalDateTime_ida}",
				"destination": "${#Project#arrivalAirportIATA_ida}",
				"productSupplier": "HOTELBEDS",
				"amtMarketPrice": 170,
				"hotelCodes": [{
						"type": "GIATA",
						"code": "${#Project#hotelGIATACode}"
					}, {
						"type": "HOTELBEDS",
						"code": "${#Project#hotelBedsCode}"
					}
				],
				"lengthOfStay": "${#Project#lengthOfStay}",
				"rooms": [{
						"boardCode": "${#Project#boardCode}",
						"personAssignaments": [1, 2],
						"roomCode": "DBT.ST"
					}
				],
				"currency": "${#Project#currency}"
			}
		],
		"tourOperator": "string"
	},
	"promocode": null,
	"bookingBeginningDate": "${#Project#departureDateTime_ida}",
	"bookingEndDate": "${#Project#departureDateTime_vuelta}",
	"origin": "${#Project#departureAirportIATA_ida}",
	"destination": "${#Project#arrivalAirportIATA_ida}"
}
</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ec50334a-3ca5-4835-ad21-e99e63af7358"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="5b36597e-fb7c-403a-8c7c-4fc5b8f745bd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="5e3b08a3-f6e4-4689-b61a-8308abe0ca39"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="593327fd-fd5e-43c3-bd88-7541f088e59d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="537e4b2c-4153-4b85-8f1f-9dbe36f83640"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="222ff58c-f3b3-4c6c-ac30-9e4f67fa5b88"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="61a05b32-484b-4b6d-bae2-ff9d3278afb3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="user" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries GO" id="c1ea8726-895a-4355-82b4-1a3849faa94e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries GO'
String FlightStepName = "Add ANC Ida"
def ancillariesToAddFlight = ["LUG": 1,"LUG-2WGT":2]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillaries(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries GO" id="6d07c9b5-6140-4339-95ea-23b520f2d811" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries GO" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00003309"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Ida" id="1d96a564-30b8-415c-9770-d5f2304cafba" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Ida" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 22.00,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 22.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 22.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 40.00,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 40.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00003309"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add ancillaries RETURN" id="0780143d-b463-43b6-a302-b19d3a795147" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

// get the helper library for ancillaries
def ancillariesLib = library.testCases["Ancillaries"].testSteps["AncillariesData"]
ancillariesLib.run(testRunner, context)
//get the helper library 'utils'
/*def utilsLib = library.testCases["Utils"].testSteps["Utils"]
utilsLib.run(testRunner, context)*/


def ancillariesData = context.ancillariesData
def utils = context.utils


// DATA IN:
String prebookingStepName = "Prebooking" //bookingID will be taken from this step and then transferred 
String ancillariesList = 'List ancillaries RETURN'
String FlightStepName = "Add ANC Vuelta"
def ancillariesToAddFlight = ["LUG": 1,"LUG-2WGT":2]


def slurperResponse = utils.getSlurperResponseFromStep(prebookingStepName, testRunner)
def ancillariesCompleteList = null

//transfer booking and flight data
confirmBooking.TransferAncillaries(FlightStepName, slurperResponse)
//get the list of ancillaries
ancillariesCompleteList = ancillariesData.getListOfAncillaries(ancillariesList, testRunner, context)
//execute
ancillariesData.addAncillaries(FlightStepName, ancillariesToAddFlight, ancillariesCompleteList, testRunner, context)

return
</script></con:config></con:testStep><con:testStep type="restrequest" name="List ancillaries RETURN" id="fb13a6e6-9c8b-4948-bf0f-99c32f0de6c8" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/flightsCharges" methodName="return the list of ancilleries with prices avaialblefor the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="List ancillaries RETURN" id="a87d059a-19a1-467a-a169-be6f9345fa13" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/100/flights/8570/ancillaries</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d87194ab-4398-41fa-8f20-a3d4e2ff41ec" name="Valida_AncillariesList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AncillariesList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="preBookingId" value="H00003309"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>Authorization</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Add ANC Vuelta" id="8fa6dfc0-75e6-4e4e-889c-f15b005ea5c9" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/ancillaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add ANC Vuelta" id="ea752ee8-112f-43b5-8c50-e6166bb62c2c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": null,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": null,
        "description": "Each hold bag includes 20kg of weight",
        "indMarkupDefault": null,
        "quantity": "1",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 23.00,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG",
        "units": "Bags per sector",
        "reference": "LUG",
        "productMarkup": 0,
        "weightPrice": null,
        "price": 23.00,
        "flightLegReference": null,
        "subStatus": null
    },
    {
        "typeDescription": null,
        "referenceNumber": null,
        "luggagePrice": 23.00,
        "flightNumber": null,
        "type": null,
        "productSupplier": null,
        "markupName": null,
        "currencyProvider": null,
        "weightQuantity": 2,
        "description": "Each hold bag includes 26kg of weight",
        "indMarkupDefault": null,
        "quantity": "2",
        "discountLine": 0,
        "pairPrice": 0,
        "amtMarketPrice": 41.00,
        "status": null,
        "cardFee": 0,
        "code": null,
        "codeType": "LUG-2WGT",
        "units": "Bags per sector",
        "reference": "LUG-2WGT",
        "productMarkup": 0,
        "weightPrice": 9.00,
        "price": 41.00,
        "flightLegReference": null,
        "subStatus": null
    }
]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/ancillaries/SEC</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pax" id="a55898c5-2506-41ec-bf2a-0329f607ee29"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b933a36f-59df-4e89-ad4b-e49a4e3febd6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="b7299d0c-0965-4a90-b7be-821e5d9c2883"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="350552ce-61ee-493a-bc69-40ac581c4d44"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="f0e55cb2-2570-475b-94bd-15f93bb51588"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00003308"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT PLAN ida prebooking 102" id="e6cf2fc0-f9c7-44f7-9105-5f96a00a5388" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seatplan" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT PLAN ida prebooking 102" id="bbd4c8d5-8506-4fb2-ae8d-0c25a547db1e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/flightNumber/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b752457a-011e-4c75-b75d-53d0321d3984" name="Valida_SeatPlanList"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_SeatPlanList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000371"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>flightNumber</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 102 Add 2SEAT Ida" id="236d7ccd-9b2b-4ccd-9928-a6ee1668c3c0" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 102 Add 2SEAT Ida" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "${#Project#rowSeat}A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_ida}",
	"seatNumber" : "${#Project#rowSeat}B",
	"price" : 15.99,
	"paxReference": 2
}]

</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="9b61a26a-0c49-436b-955a-311b44e3469c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000371"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_ida}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SEAT02 102 Add 2SEAT Vuelta" id="fe3494df-01a8-4ab0-b9a8-fae05496ce77" disabled="true"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/flights/{flightNumber}/seats" methodName="adds a seat to the flight" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SEAT02 102 Add 2SEAT Vuelta" id="18464a5b-cc9a-42c7-a9e6-7531a47e51e3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>[{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}A",
	"price" : 15.99,
	"paxReference": 1
},{ 	
	"flightNumber" : "${#Project#flightNumber_vuelta}",
	"seatNumber" : "${#Project#rowSeat}B",
	"price" : 15.99,
	"paxReference": 2
}]</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings/preBookingId/flights/seats/</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_addSeatList" id="eb9bb9b4-af1e-46cb-b6a0-2fdf6ef80df7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_AddSeatList.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000371"/>
  <con:entry key="flightNumber" value="${#Project#flightNumber_vuelta}"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>userIdentifier</con:entry><con:entry>flightNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="f4126030-3ffe-4dba-ae48-2c9579f7b818"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="88fbf951-38d4-4576-816a-3e37327cce1f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="e214a7b5-5124-44f5-8f1e-35cfc46fb674"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="210018dd-612f-4f2c-bdb6-093bdb0ab966"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="18497fd3-e717-4d05-bda2-2511aca8144b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="57e11463-733a-4b90-b672-b381f5ec7ec3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="4296b620-6217-48bd-b91b-d6d0bd8a2bf9"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="40e7fcd0-44c8-47df-9cec-02d57855a1f1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000371"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>content-type</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="27f5dfdd-5c61-4f12-9362-fd5c431cb307"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="d63b4e80-59c3-4824-b150-a84b1e80f539"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "ggomez.gfi@gmail.com",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],					
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],									
				"zipCode" : "08015"
			}
			],
			"dateOfBirth" : "1980-11-01",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName" : "TEST",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "string",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2000-06-28",
				"expireDate" : "2020-06-28"
			},
			"paxReferenceNumber": 2
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		}
	],	
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="dbe97a48-c3d3-4c60-a591-7095fffaef8b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="6ffd1828-40e5-4189-a981-ab62e009b0f3"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="034fde6b-87bf-4a61-966b-7e1e9593ec4a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="b9f99fff-e896-4581-868a-fa6cbd2b9972"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="e8c3f4ea-eb51-414d-b140-3459fe50847a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="96071ded-1871-403c-9a3e-6e30b2d53817"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ee73ecb-28f0-49e2-8134-4e66c5c6bb7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="246daef8-1f73-47b9-b229-af45eccb3133"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="566.95"/>
  <con:entry key="pdescription" value="ffff"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0"/>
  <con:entry key="preBookingId" value="H00000371"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="1.60"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="price" value="566.95"/>
  <con:entry key="description" value="102 - Prebooking (2PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>description</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>description</con:name><con:value>Anna</con:value></con:property><con:property><con:name>ptotalPriceWithFee</con:name><con:value>cccccAnna</con:value></con:property><con:property><con:name>cardFee</con:name><con:value>cccccAnna</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="d253da52-a369-4b92-b5f1-6fd06cad8681" name="Validate/revalidate Promocode"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="2a216830-4f0d-449a-911e-0508cf4cfa54" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="109 - (4PAX + 2ROOMS)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Prebooking" id="e9f8005e-5c27-4c82-9f9f-4b2524415f99"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Prebooking" id="1b2b5be2-2618-4caa-90c4-daf14da656da" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"description" : "109 - Prebooking (4PAX + 2ROOMS)",	
	"paxes" : [{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 1
		}, {
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 2
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 3
		},
		{
			"age" : null,
			"personType" : "ADT",
			"hasInfant" : false,
			"paxNumber" : 4
		}
	],
	"market": "${#Project#market}",
	"agency": {
		"company": "company",
		"office": "office",
		"userAgent": "userAgent"
	},
	"userType": "${#Project#userType}",
	"category" : "GT03-FAFR Family Holidays",
	"currency": "${#Project#currency}",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"amtMarketPrice": 100,
		"flights" : [{
			"amtMarketPrice": 100,
				"flightSegments" : [{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_ida}",
								"departureDateTime" : "${#Project#departureDateTime_ida}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_ida}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_ida}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_ida}",
								"flightCode" : null,
								"flightLabel" : null
								}]
						},{
						"flightLegs" : [{
								"tariffClass" : "${#Project#tariffClass}",
								"airline" : "EasyJet",
								"departureAirportIATA" : "${#Project#departureAirportIATA_vuelta}",
								"departureDateTime" : "${#Project#departureDateTime_vuelta}",
								"arrivalAirportIATA" : "${#Project#arrivalAirportIATA_vuelta}",
								"arrivalDateTime" : "${#Project#arrivalDateTime_vuelta}",
								"bookingClass" : "Y",
								"flightNumber" : "${#Project#flightNumber_vuelta}",
								"flightCode" : null,
								"flightLabel" : null   							
								}]
						}]
		}],
		
		"hotels": [{
			"arrivalDate": "${#Project#arrivalDateTime_ida}",
			"destination": "${#Project#arrivalAirportIATA_ida}",
			"productSupplier": "HOTELBEDS",
			"amtMarketPrice": 100,
			"hotelCodes": [{
				"type": "GIATA",
				"code": "${#Project#hotelGIATACode}"
			},{
				"type": "HOTELBEDS",
				"code": "${#Project#hotelBedsCode}"
			}
		],
			"lengthOfStay": "${#Project#lengthOfStay}",
			"rooms": [{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [1,2],
				"roomCode": "DBT.ST"
			},
			{
				"boardCode": "${#Project#boardCode}",
				"personAssignaments": [3,4],
				"roomCode": "DBT.ST"
			}],
		"currency": "${#Project#currency}"
	  }],

		"tourOperator" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "${#Project#departureDateTime_ida}",
	"bookingEndDate" : "${#Project#departureDateTime_vuelta}",
	"origin" : "${#Project#departureAirportIATA_ida}",
	"destination" : "${#Project#arrivalAirportIATA_ida}"
}</con:request><con:originalUri>http://localhost/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0aa89ee-deec-46fa-8553-1b986fbf436f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="59023b5d-c3b8-4820-8728-c42e41e36667"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="26daf41f-1ed8-4469-9964-f7d96e74ac91"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="4efb33d4-33a4-4e27-ab00-c448ea908429"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="03c34afb-8e58-47a2-af60-4816e58e6c1e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e96a5b42-8dc3-47b4-9a2a-44459cda3967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="14fdfe81-e2e4-41a7-9950-efef22e95967"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="userIdentifier" value="admin"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="user" value="admin"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>Authorization</con:entry><con:entry>userIdentifier</con:entry><con:entry>user</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a757562a-34fd-4dfd-a7b3-01d635613e14"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Promocode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>Add Promocode</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>get</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Prebooking</con:sourceStep><con:sourcePath>$.bookingCode</con:sourcePath><con:targetType>preBookingId</con:targetType><con:targetStep>GET</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Promocode" id="fc94fef7-7e2b-449b-8387-65b6c93e7fa1"><con:settings/><con:config service="http://localhost:8082" methodName="Validate/Revalidate Promocodes" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/promocodes/{promocodeId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Promocode" id="0b902be4-5cdf-46eb-b4ee-2b34acc09189" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://PERALES/packagebookingservice/1.0/prebookings</con:originalUri><con:assertion type="GroovyScriptAssertion" id="cd29b16f-339f-4bc0-976d-446478b77729" name="Promocodes"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_promocodes.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="General_Data" id="ecad544c-f2f5-4c35-b5cc-9aab03ecd4a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="d5667c4f-f7b4-43ba-8c89-c680678da990"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="0f305a6b-f26b-4ce9-bb3f-766e97a9f5dc"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="00a5dceb-149f-44e4-be51-0c10d8f51c65"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="61214a6d-a6b3-4650-952f-27f0a83326a5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3896b915-8146-4d63-ba18-fe9b2d2da553"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="064103f1-57e0-43b3-8deb-ec9776ec7e8a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="preBookingId" value="H00000647"/>
  <con:entry key="promocodeId" value="${#Project#promocode}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>promocodeId</con:entry><con:entry>preBookingId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET" id="8eacf56d-a76c-40cf-a578-adc7ef7a22e3"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}" methodName="Retrieves Prebooking and check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"bookingCode" : "100",
	"description" : "100 - Prebooking ( 1pax 1way ) to LONDON",
	"client" : {
	   "comments" : [{
				"commentText":"Vacaciones inviernos",
                "commentType":"F"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "office",
				"mail" : "testmadrid@gfi.es",
				"primary" : true,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones": [{
				                "number" : "555",
                                "type" : "home"             
							  }],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "Male",
		"lastName" : "Marcilla",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA MARCILLA",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"agency" : {
		"company" : "company",
		"office" : "office",
		"userAgent" : "userAgent"
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "office",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "fax",
							"number" : "66666666666"
						}, {
							"type" : "mobile",
							"number" : "99999999999"
						}, {
							"type" : "fax",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "office",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "fax",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age": null,
			"personType": "AD",
			"firstName" : "Anna",
			"gender" : "Male",
			"lastName" : "${#Project#paxesLastName}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M MARCILLA",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "Mr",
			"paxNumber" : 1
		}
	],
	"market" : "market",
	"category" : "Escapadas Invierno",
	"currency" : "GBP",
	"purchaseToken" : "string",
	"ancillaries" : [],
	"flightHotelPackage" : {
		"code" : "string",
		"description" : "100 - 1pax 1way",
		"productMarkup" : null,
		"status" : "Available",
		"subStatus" : "Confirm",
		"flights" : [{
				"code" : "string",
				"description" : "string",
				"productMarkup" : null,
				"status" : "Available",
				"subStatus" : "Confirm",
				"itineraries" : [{
						"segments" : [{								
								"segmentNumber" : 0,
								"airline" : "EasyJet",
								"departureAirportIATA" : "BCN",
								"departureDateTime" : "2017-01-04T08:40:00.000",
								"arrivalAirportIATA" : "LGW",
								"arrivalDateTime" : "2017-01-04T17:25:00.000",
								"bookingClass" : "Y",
								"flightNumber" : "8570",
								"flightCode" : null,
								"flightLabel" : null
							}
						]
					}
				]
			}
		],
		"hotels" : [{
				"code" : "string",
				"description" : "EL MEJOR HOTEL",
				"productMarkup" : null,
				"arrivalDate" : "2016-06-28",
				"bookingCode" : "FFFFFF",
				"destination" : "LGW",
				"hotelCodes" : [],
				"hotelProvider" : "Hotel Beds",
				"lengthOfStay" : 30,
				"price" : 600,
				"reference" : "Certain",
				"rooms" : [{
						"boardCode" : "Full Board",
						"bookingCode" : 1,
						"extraBeds" : 0,
						"personAssignaments" : [1],
						"roomCode" : "895",
						"status" : "Available",
						"subStatus" : "Confirm",
						"TOMABookingCode" : "string"
					}
				],
				"hotelStatus" : "Available",
				"hotelSubStatus" : "Confirm",
				"reference" : "Certain",
				"hotelGroup" : null
			}
		],
		"programType" : "string",
		"tourOperator" : "string",
		"travelType" : "string"
	},
	"promocode" : null,
	"bookingBeginningDate" : "2017-01-04",
	"bookingEndDate" : "2017-01-04",
	"origin" : "BCN",
	"destination" : "LGW",
	"formOfPayment" : {
		
		"creditCardVendorCode" : "VI"
	}
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="d0f59d94-9532-4f1a-b263-4f11a6780ff6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="eabcfb62-8db4-4b7d-abad-cc0aa75248cd"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="308dba0b-06d3-460d-b6d3-9c6c4d961ec6"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="c149a791-d103-4734-bc65-e3c26900f76c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="28124dfb-a724-4811-8c9f-ad1995460e13"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="e301cd89-e9f1-455d-857a-51e0f408d69f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="efdca55b-d35b-4143-b244-2832127d8524"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Seats" id="7a7e1ba9-ddd2-4e52-81a9-8e2b83de57ac"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Addseat.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="preBookingId" value="H00000647"/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>content-type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="confirmando..." id="7e82c42c-3960-4668-a8a5-8f373a00d3ea"><con:settings/><con:config><script>import groovy.json.JsonSlurper

// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]

// find the module within the library 
module = library.testCases["Booking"].testSteps["PreConfirm"]

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def confirmBooking = context.booking

log.info confirmBooking

responseContent = testRunner.testCase.getTestStepByName("GET").getPropertyValue("response")
slurperresponse = new JsonSlurper().parseText(responseContent)


confirmBooking.TransferBooking(slurperresponse,responseContent)
confirmBooking.TransferPagos(slurperresponse,responseContent)
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM" id="28f90f5c-44ed-463d-8e3f-c16640197836"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
	"client" : {
		"comments" : [{
				"commentText":"Vacaciones invierno",
                "commentType":"H"
              }
		],
		"addresses" : [{
				"city" : "Barcelona",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testbarcelona@gfi.es",
				"primary" : true,
				"stateProvince" : "Mataro",
				"street" : "C/Passeig de Gracia 44",
				"streetAdditional" : "C/Passeig de Gracia 46",
				"addressCode" : "ssss",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],				
				"zipCode" : "08015"
			}, {
				"city" : "MADRID",
				"country" : "${#Project#market}",
				"countryName" : "descCountry",
				"location" : "OFFICE",
				"mail" : "testmadrid@gfi.es",
				"primary" : false,
				"stateProvince" : "Fuenjirola",
				"street" : "C/ Paseo 44",
				"streetAdditional" : "C/ Paseo 46",
				"addressCode" : "ffff",
				"telephones":
						[{
								"number": "",
								"type": "HOME"
							},{
								"number": "677445544",
								"type": "MOBILE"
							}
						],								
				"zipCode" : "08015"
			}
		],
		"dateOfBirth" : "1983-12-26",
		"firstName" : "Anna",
		"gender" : "MALE",
		"lastName" : "TEST",
		"middleName" : "MA",
		"travelDocumentData" : {
			"docCustomerName" : "ANNA TEST",
			"docId" : "87654321X",
			"docIssueAuthority" : "string",
			"docIssueLocation" : "BARCELONA",
			"docLimitations" : "string",
			"docType" : "DNI",
			"effectiveDate" : "2000-06-28",
			"expireDate" : "2020-06-28"
		},
		"paxReferenceNumber": 1
	},
	"paxes" : [{
			"addresses" : [{
					"city" : "BARCELONA",
					"country" : "${#Project#market}",
					"countryName" : "descCountry",
					"location" : "OFFICE",
					"mail" : "mail@gfi.es",
					"primary" : true,
					"stateProvince" : "MATARO",
					"street" : "ARAGO",
					"streetAdditional" : 122,
					"telephones" : [{
							"type" : "FAX",
							"number" : "66666666666"
						}, {
							"type" : "MOBILE",
							"number" : "99999999999"
						}, {
							"type" : "FAX",
							"number" : "88888888888"
						}
					],
					"zipCode" : "00000"
				}, {
					"city" : "SLIEMA",
					"country" : "MALTA",
					"countryName" : "MALTA",
					"location" : "OFFICE",
					"mail" : "mail2@gfi.es",
					"primary" : false,
					"stateProvince" : "SLIEMA",
					"street" : "MERCIEQA",
					"streetAdditional" : 123,
					"telephones" : [{
							"type" : "FAX",
							"number" : "11111111"
						}
					],
					"zipCode" : "11111"
				}
			],
			"dateOfBirth" : "1975-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Anna",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "ANNA M TEST",
				"docId" : "87654321X",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 1,
			"customer" : 0
		}, {
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Marta",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "MARTA M TEST",
				"docId" : "12345678A",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 2,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1980-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Silvia",
			"gender" : "MALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Silvia M TEST",
				"docId" : "11111111M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 3,
			"customer" : 0
		},
		{
			"dateOfBirth" : "1970-06-28",
			"age" : null,
			"personType" : "ADT",
			"firstName" : "Raquel",
			"gender" : "FEMALE",
			"lastName": "apellido${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(10)}",
			"middleName" : "MA",
			"travelDocumentData" : {
				"docCustomerName" : "Raquel M TEST",
				"docId" : "22222222M",
				"docIssueAuthority" : "BARCELONA",
				"docIssueLocation" : "BARCELONA",
				"docLimitations" : "string",
				"docType" : "DNI",
				"effectiveDate" : "2010-06-28",
				"expireDate" : "2020-06-28"
			},
			"hasInfant" : false,
			"salutationType" : "MR",
			"paxNumber" : 4,
			"customer" : 0
		}
	],
    "creditCardInfo" : {		
			 "cardFee" : "${#cardFee}",
    	           "ptotalPriceWithFee" : "${#ptotalPriceWithFee}",
		 	 "cardDescription" : "${#pstrDescription}",    		 	            		 	 
			 "creditCardVendorCode" : "${#pcodPaymentMethod}",			 
		 	 "cardFeePercentage" : "${#ppctPayment}",
			 "cardHolderName" : "A Shopper",
			 "validThruMonth" : "01" ,
			 "validThruYear" : "2020", 
			 "cardNumber" : "4444333322221111",
			 "billingAddress" : {
							"address" : "47A",
							"postalCode" : "CB94BQ",
							"city" : "Cambridge",
							"countryCode" : "GB",
							"phone": "646968857"              
						   }       
     },
	"order" : {
		   "amount" : "${#price}0",
		   "description" : "${#description}",
		   "shopperEmail" : "shopper@provider.com",
		   "currency" : "${#Project#currency}"
		   } ,
    "deposit" : "${#deposit}"
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="d1116aa3-964d-423c-81ee-12f9c035fb64"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="ea6d31c7-9217-4afb-aefe-92d4f48fad7d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="f1fcdf55-ba12-49d7-8549-ac76ec43f45f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="3a8aca26-ba1c-49d0-baab-18eb2d277434"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="a68e8ada-17c3-4f88-a2e5-511b3154390b"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="23501385-b09a-4849-97eb-0dc5ce26c1cb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="3460e554-0df5-4dd3-a511-437a969af088"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="6d22cb27-54a1-4db7-b363-f771ed3ade5d"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1537.65"/>
  <con:entry key="pdescription" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="deposit" value="0"/>
  <con:entry key="cardFee" value="0"/>
  <con:entry key="preBookingId" value="H00000647"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="0"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="price" value="1537.65"/>
  <con:entry key="description" value="109 - Prebooking (4PAX + 2ROOMS)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Check Confirm" id="5c9ce4e3-b2f3-426d-9b77-0da95739816f"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check Confirm" id="8b5288ad-b756-445d-af5f-f911d7618f6b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/bookingId</con:originalUri><con:assertion type="GroovyScriptAssertion" name="General_Data" id="c7a90509-55f1-4bf3-bd93-f5e3d4c3d6d2"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_prebooking_General_Data.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="97524567-9f07-495f-94c8-b02b240faae8"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="991fcda8-fc14-49ab-8e32-c66ec25cc0c1"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" disabled="true" id="05cd195a-3b85-4a3a-853b-024652592f85"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" disabled="true" id="0d852209-cbbb-47bd-8c2f-71ef925cfdda"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="5ded6abd-b040-4a0a-87fa-76795ba9c061"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="9203e3c0-0f68-4a4d-bd49-b48b3e700c6e"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00000629"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="f378323e-e65e-44d8-a82d-0c2eeb763c00" name="Precancel/Cancel"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="cb0c1cfd-0e8c-426f-ac43-6035177479a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Precancel/Cancel" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Pre-Cancel" id="81f222d5-9f27-4ba0-9944-1a23befe40f8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}/precancel" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Pre-Cancel" id="a8cb2df2-9aca-4b22-b56c-d824598ffeff" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://192.168.209.13/packagebookingservice/1.0/bookings//precancel100</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="en"/>
  <con:entry key="bookingId" value="H00003526"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Cancel booking" id="0fe57f8e-f2ae-4c84-91de-1c03e2f8f9f8"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/bookings/{bookingId}/cancel" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Cancel booking" id="0373da45-e04c-462b-b6ac-773274066489" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request/><con:originalUri>http://localhost/packagebookingservice/1.0/bookings/cancel</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="b08666a0-eab9-4c0f-8552-881b5ec3aa81"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="bookingId" value="H00003526"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
</con:parameters><con:parameterOrder><con:entry>user</con:entry><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>bookingId</con:entry><con:entry>userIdentifier</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="d3da8c46-b8ef-4ac3-afe9-499e015e1e18" name="TestRunnerSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="652e5947-0d36-40dd-8c68-e3a58e775732" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="All" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Run" id="a2987718-2a4d-47bd-981f-36f1fb137206"><con:settings/><con:config><script>import groovy.json.JsonSlurper

if (!context.reporterTestRunner) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["ReporterTestRunner"].run(testRunner, context)      
def reporterTestRunner = context.reporterTestRunner

if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
def utils = context.utils

def applyDataToTestCase = { testCase, data -> 
  //initializing the data handler for the ESADE project
  if (!context.utils) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["Utils"].run(testRunner, context)      
  utils = context.utils

  utils.setProjectProperty("currency", data.currency, testRunner)
  utils.setProjectProperty("market", data.market, testRunner)
  utils.setProjectProperty("userType", data.userType, testRunner)
  utils.setProjectProperty("tariffClass", data.tariffClass, testRunner)
  utils.setProjectProperty("typeOfPayment", data.typeOfPayment, testRunner)
  utils.setProjectProperty("depositType", data.depositType, testRunner)
  utils.setProjectProperty("promocode", data.promocode, testRunner)
  utils.setProjectProperty("hotelGIATACode", data.hotelGIATACode, testRunner)
  utils.setProjectProperty("hotelBedsCode", data.hotelBedsCode, testRunner)
  utils.setProjectProperty("language", data.language, testRunner)
  }

def getStepData = { testStep, stepOK, isRequest, messages, testCase ->
  def dataMap = [:]

  if (isRequest) {
    def response = testStep.getPropertyValue("response")
    def json = new JsonSlurper().parseText(response) // for debugging: [ "bookingCode": "codigo_123456", "description": "descripcion_654321" ]
    dataMap['Booking code'] = json.bookingCode
    dataMap['Description'] = json.description
  }
  
  dataMap['Messages'] = messages.join('&lt;br>')

  return dataMap
}

def testFile = new File(utils.getProjectPath(context), "/data_test.xls")
reporterTestRunner.run(testFile, applyDataToTestCase, getStepData)

log.info testRunner.class</script></con:config></con:testStep><con:testStep type="groovy" name="Clean Results" id="5ce067e6-d996-4390-941c-f860e5c3962c"><con:settings/><con:config><script>def results = testRunner.testCase.testSuite.project.testSuites["Results"]
results.testCases.each { key, value ->
	log.info key+", "+value
	results.removeTestCase(value)
}

return</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ec4cd61e-bdc7-4363-b2f9-cd9374edf1d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Editors" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Update json values" id="7a926d13-ce01-461f-9107-3aeedf49b1c9"><con:settings/><con:config><script>if(!context.jsonUpdater) testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Utils"].testSteps["JsonUpdater"].run(testRunner, context)
def jsonUpdater = context.jsonUpdater

//jsonUpdater.updateProject("*", "*", "CONFIRM", ".paxes.lastName", "\${#Project#lastname}")
jsonUpdater.updateProjectPassengers("TestRunnerSuite", "Editors", "CONFIRM 1")
</script></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM 1" id="6992bdc9-4451-46ff-aa7a-facfae38323e"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM 1" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "paxes": [
        {
            "dateOfBirth": "1975-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "hasInfant": false,
            "customer": 0,
            "paxNumber": 1,
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "87654321X",
                "docIssueLocation": "BARCELONA",
                "effectiveDate": "2010-06-28",
                "docCustomerName": "ANNA M MARCILLA",
                "docLimitations": "string"
            },
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "addresses": [
                {
                    "mail": "mail@gfi.es",
                    "countryName": "descCountry",
                    "streetAdditional": 122,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "66666666666",
                            "type": "FAX"
                        },
                        {
                            "number": "99999999999",
                            "type": "MOBILE"
                        },
                        {
                            "number": "88888888888",
                            "type": "FAX"
                        }
                    ],
                    "primary": true,
                    "street": "ARAGO",
                    "zipCode": "00000",
                    "stateProvince": "MATARO",
                    "city": "BARCELONA",
                    "country": "${#Project#market}"
                },
                {
                    "mail": "mail2@gfi.es",
                    "countryName": "MALTA",
                    "streetAdditional": 123,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "11111111",
                            "type": "FAX"
                        }
                    ],
                    "primary": false,
                    "street": "MERCIEQA",
                    "zipCode": "11111",
                    "stateProvince": "SLIEMA",
                    "city": "SLIEMA",
                    "country": "MALTA"
                }
            ],
            "personType": "ADT",
            "firstName": "${#Project#firstname} uno"
        }
    ],
    "client": [
        {
            "dateOfBirth": "1975-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "hasInfant": false,
            "customer": 0,
            "paxNumber": 1,
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "87654321X",
                "effectiveDate": "2010-06-28",
                "docIssueLocation": "BARCELONA",
                "docLimitations": "string",
                "docCustomerName": "ANNA M MARCILLA"
            },
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "personType": "ADT",
            "firstName": "${#Project#firstname} uno",
            "addresses": [
                {
                    "mail": "mail@gfi.es",
                    "countryName": "descCountry",
                    "streetAdditional": 122,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "66666666666",
                            "type": "FAX"
                        },
                        {
                            "number": "99999999999",
                            "type": "MOBILE"
                        },
                        {
                            "number": "88888888888",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "00000",
                    "street": "ARAGO",
                    "primary": true,
                    "stateProvince": "MATARO",
                    "country": "${#Project#market}",
                    "city": "BARCELONA"
                },
                {
                    "mail": "mail2@gfi.es",
                    "countryName": "MALTA",
                    "streetAdditional": 123,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "11111111",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "11111",
                    "street": "MERCIEQA",
                    "primary": false,
                    "stateProvince": "SLIEMA",
                    "country": "MALTA",
                    "city": "SLIEMA"
                }
            ]
        }
    ],
    "order": {
        "amount": "${#price}0",
        "description": "${#description}",
        "shopperEmail": "shopper@provider.com",
        "currency": "${#Project#currency}"
    },
    "deposit": "${#deposit}",
    "creditCardInfo": {
        "ptotalPriceWithFee": "${#ptotalPriceWithFee}",
        "cardFeePercentage": "${#ppctPayment}",
        "cardHolderName": "A Shopper",
        "creditCardVendorCode": "${#pcodPaymentMethod}",
        "validThruYear": "2020",
        "cardFee": "${#cardFee}",
        "billingAddress": {
            "phone": "646968857",
            "postalCode": "CB94BQ",
            "address": "47A",
            "countryCode": "GB",
            "city": "Cambridge"
        },
        "cardDescription": "${#pstrDescription}",
        "validThruMonth": "01",
        "cardNumber": "4444333322221111"
    }
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="e7cced04-9589-4a10-9855-e200de0e1072"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="0ecf4d18-b9a7-415a-b2d4-064a51df85fa"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="1c9a4005-da7b-410b-b3cd-6b57f7dc976a"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="11d8d10e-08c3-47a2-b77c-e07f675ca614"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="b5b1452c-5a84-4918-9077-c2d672342f53"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="c9b03641-b9e3-432e-80e8-47eb689425fb"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="253ffc8c-8180-4143-a7d9-e1dc9d5822b7"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="3c3e3ae9-59c1-49e2-a201-b50d888812e5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="522.37"/>
  <con:entry key="pdescription" value="101 - Prebooking (1PAX)"/>
  <con:entry key="deposit" value="75.75"/>
  <con:entry key="cardFee" value="0.0"/>
  <con:entry key="preBookingId" value="H00003460"/>
  <con:entry key="pcodPaymentMethod" value="MC"/>
  <con:entry key="pstrDescription" value="Mastercard"/>
  <con:entry key="pdepositCardFee" value="0.00"/>
  <con:entry key="pcodPaymentType" value="CREDIT"/>
  <con:entry key="ppctPayment" value="0.00"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="price" value="522.37"/>
  <con:entry key="description" value="PRUEBA 101 - Prebooking (1PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CONFIRM 3" id="6d3965c1-4a2a-4bb8-92ae-523d8d9cd146"><con:settings/><con:config service="http://localhost:8082" resourcePath="/packagebookingservice/1.0/prebookings/{preBookingId}/confirm" methodName="Confirm a reservation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CONFIRM 3" id="578da633-3628-41f3-be76-60b11a793b7e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="market" value="En" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://192.168.209.95:8082/</con:endpoint><con:request>{
    "paxes": [
        {
            "dateOfBirth": "1975-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "hasInfant": false,
            "customer": 0,
            "paxNumber": 1,
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "87654321X",
                "effectiveDate": "2010-06-28",
                "docIssueLocation": "BARCELONA",
                "docLimitations": "string",
                "docCustomerName": "ANNA M TEST"
            },
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "firstName": "${#Project#firstname} uno",
            "addresses": [
                {
                    "mail": "mail@gfi.es",
                    "countryName": "descCountry",
                    "streetAdditional": 122,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "66666666666",
                            "type": "FAX"
                        },
                        {
                            "number": "99999999999",
                            "type": "MOBILE"
                        },
                        {
                            "number": "88888888888",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "00000",
                    "street": "ARAGO",
                    "primary": true,
                    "stateProvince": "MATARO",
                    "country": "${#Project#market}",
                    "city": "BARCELONA"
                },
                {
                    "mail": "mail2@gfi.es",
                    "countryName": "MALTA",
                    "streetAdditional": 123,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "11111111",
                            "type": "FAX"
                        }
                    ],
                    "zipCode": "11111",
                    "street": "MERCIEQA",
                    "primary": false,
                    "stateProvince": "SLIEMA",
                    "country": "MALTA",
                    "city": "SLIEMA"
                }
            ],
            "personType": "ADT"
        },
        {
            "middleName": "MA",
            "dateOfBirth": "1980-06-28",
            "lastName": "${#Project#lastname}",
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "12345678A",
                "effectiveDate": "2010-06-28",
                "docIssueLocation": "BARCELONA",
                "docLimitations": "string",
                "docCustomerName": "MARTA M TEST"
            },
            "hasInfant": false,
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "customer": 0,
            "firstName": "${#Project#firstname} dos",
            "personType": "ADT",
            "paxNumber": 2
        },
        {
            "middleName": "MA",
            "dateOfBirth": "1980-06-28",
            "lastName": "${#Project#lastname}",
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "11111111M",
                "effectiveDate": "2010-06-28",
                "docIssueLocation": "BARCELONA",
                "docLimitations": "string",
                "docCustomerName": "Silvia M TEST"
            },
            "hasInfant": false,
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "customer": 0,
            "firstName": "${#Project#firstname} tres",
            "personType": "ADT",
            "paxNumber": 3
        }
    ],
    "order": {
        "amount": "${#price}0",
        "description": "${#description}",
        "shopperEmail": "shopper@provider.com",
        "currency": "${#Project#currency}"
    },
    "client": [
        {
            "dateOfBirth": "1975-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "hasInfant": false,
            "customer": 0,
            "paxNumber": 1,
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "87654321X",
                "docIssueLocation": "BARCELONA",
                "effectiveDate": "2010-06-28",
                "docCustomerName": "ANNA M TEST",
                "docLimitations": "string"
            },
            "age": null,
            "gender": "MALE",
            "salutationType": "MR",
            "addresses": [
                {
                    "mail": "mail@gfi.es",
                    "countryName": "descCountry",
                    "streetAdditional": 122,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "66666666666",
                            "type": "FAX"
                        },
                        {
                            "number": "99999999999",
                            "type": "MOBILE"
                        },
                        {
                            "number": "88888888888",
                            "type": "FAX"
                        }
                    ],
                    "primary": true,
                    "street": "ARAGO",
                    "zipCode": "00000",
                    "stateProvince": "MATARO",
                    "city": "BARCELONA",
                    "country": "${#Project#market}"
                },
                {
                    "mail": "mail2@gfi.es",
                    "countryName": "MALTA",
                    "streetAdditional": 123,
                    "location": "OFFICE",
                    "telephones": [
                        {
                            "number": "11111111",
                            "type": "FAX"
                        }
                    ],
                    "primary": false,
                    "street": "MERCIEQA",
                    "zipCode": "11111",
                    "stateProvince": "SLIEMA",
                    "city": "SLIEMA",
                    "country": "MALTA"
                }
            ],
            "personType": "ADT",
            "firstName": "${#Project#firstname} uno"
        },
        {
            "dateOfBirth": "1980-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "12345678A",
                "docIssueLocation": "BARCELONA",
                "effectiveDate": "2010-06-28",
                "docCustomerName": "MARTA M TEST",
                "docLimitations": "string"
            },
            "age": null,
            "hasInfant": false,
            "gender": "MALE",
            "salutationType": "MR",
            "personType": "ADT",
            "firstName": "${#Project#firstname} dos",
            "customer": 0,
            "paxNumber": 2
        },
        {
            "dateOfBirth": "1980-06-28",
            "middleName": "MA",
            "lastName": "${#Project#lastname}",
            "travelDocumentData": {
                "docType": "DNI",
                "docIssueAuthority": "BARCELONA",
                "expireDate": "2020-06-28",
                "docId": "11111111M",
                "docIssueLocation": "BARCELONA",
                "effectiveDate": "2010-06-28",
                "docCustomerName": "Silvia M TEST",
                "docLimitations": "string"
            },
            "age": null,
            "hasInfant": false,
            "gender": "MALE",
            "salutationType": "MR",
            "personType": "ADT",
            "firstName": "${#Project#firstname} tres",
            "customer": 0,
            "paxNumber": 3
        }
    ],
    "deposit": "${#deposit}",
    "creditCardInfo": {
        "cardFeePercentage": "${#ppctPayment}",
        "ptotalPriceWithFee": "${#ptotalPriceWithFee}",
        "cardHolderName": "A Shopper",
        "creditCardVendorCode": "${#pcodPaymentMethod}",
        "validThruYear": "2020",
        "cardFee": "${#cardFee}",
        "billingAddress": {
            "phone": "646968857",
            "postalCode": "CB94BQ",
            "address": "47A",
            "countryCode": "GB",
            "city": "Cambridge"
        },
        "cardDescription": "${#pstrDescription}",
        "cardNumber": "4444333322221111",
        "validThruMonth": "01"
    }
}</con:request><con:originalUri>http://localhost/api-docs</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Valida_Confirm_prebooking" id="2a9ee667-e1e6-4e35-9863-9021bb440cb5"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Confirm_prebooking.groovy"))

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valida_client_Data" id="cf4a3f6f-17bf-4e15-a82a-755c70679c35"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_client_Data.groovy"))</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pax" id="b86884e3-f7d5-4187-840d-a902bf7ba71c"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Ancillaries" id="d962cf14-f2e5-48eb-9b02-791363c8ed4f"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_ancillaries.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Hotel_&amp;_Room" id="0c738472-16be-4cc7-9fbb-4433bba24c32"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )

evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Hotel_&amp;_Room_DATA.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Room_Assigments" id="1eb4ca13-8c1a-4492-acd3-7518e7ed9a74"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Room_Assigments_PAX.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Flights" id="ea5e3829-a4ba-42cf-99b3-8f9735585270"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Flights.groovy"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Pricing_&amp;_Sumatories" id="66e8a49b-e907-4bc6-8dbe-da5451dc0055"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath //gets the path of the project root
def scriptsPrebookingPath = context.expand( '${#Project#scriptsPrebookingPath}' )


evaluate(new File(projectPath, scriptsPrebookingPath + "Valida_Pricing_&amp;_Sumatories.groovy"))</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain>DEV</con:domain><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ptotalPriceWithFee" value="1177.20"/>
  <con:entry key="pdescription" value="103 - Prebooking (3PAX)"/>
  <con:entry key="deposit" value="225.00"/>
  <con:entry key="cardFee" value="-14.020000457763672"/>
  <con:entry key="preBookingId" value="H00003277"/>
  <con:entry key="pcodPaymentMethod" value="DL"/>
  <con:entry key="pdepositCardFee" value="2.40"/>
  <con:entry key="pstrDescription" value="Visa Debit"/>
  <con:entry key="pcodPaymentType" value="DEBIT"/>
  <con:entry key="Accept-Language" value="${#Project#language}"/>
  <con:entry key="ppctPayment" value="-1.00"/>
  <con:entry key="price" value="1188.97"/>
  <con:entry key="Authorization" value="Bearer ${#Project#token}"/>
  <con:entry key="description" value="103 - Prebooking (3PAX)"/>
  <con:entry key="whiteLabelId" value="EASYJET"/>
  <con:entry key="pdeposit" value=""/>
</con:parameters><con:parameterOrder><con:entry>whiteLabelId</con:entry><con:entry>Accept-Language</con:entry><con:entry>preBookingId</con:entry><con:entry>price</con:entry><con:entry>description</con:entry><con:entry>cardFee</con:entry><con:entry>ptotalPriceWithFee</con:entry><con:entry>pdepositCardFee</con:entry><con:entry>pcodPaymentMethod</con:entry><con:entry>pstrDescription</con:entry><con:entry>pcodPaymentType</con:entry><con:entry>ppctPayment</con:entry><con:entry>deposit</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="6b8be1eb-4257-44d4-9afb-9ae0184caa76" name="Results"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" domain="HOTELBEDS">http://10.185.53.72:8081/</con:endpoint><con:endpoint mode="COMPLEMENT" domain="DEV">http://192.168.209.95:8082/</con:endpoint><con:endpoint mode="COMPLEMENT" domain="Package booking Service HBEDS">http://10.185.225.192:8080/</con:endpoint><con:endpoint mode="COMPLEMENT" domain="Package API HBEDS">http://10.185.225.141:8080/swagger-ui.html</con:endpoint><con:endpoint mode="COMPLEMENT" domain="STAGING">http://192.168.209.108:8082/</con:endpoint><con:endpoint mode="COMPLEMENT" domain="YARIEL">http://192.168.209.96:8082/</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>paxesLastName</con:name><con:value>apellidoGFIxxx</con:value></con:property><con:property><con:name>scriptsPrebookingPath</con:name><con:value>./assertions/prebooking/</con:value></con:property><con:property><con:name>scriptsFlightPath</con:name><con:value>./assertions/flights/</con:value></con:property><con:property><con:name>departureAirportIATA_ida</con:name><con:value>LGW</con:value></con:property><con:property><con:name>departureDateTime_ida</con:name><con:value>2017-07-05T09:00:00.000</con:value></con:property><con:property><con:name>arrivalAirportIATA_ida</con:name><con:value>PMI</con:value></con:property><con:property><con:name>arrivalDateTime_ida</con:name><con:value>2017-07-05T12:20:00.000</con:value></con:property><con:property><con:name>flightNumber_ida</con:name><con:value>8621</con:value></con:property><con:property><con:name>departureAirportIATA_vuelta</con:name><con:value>PMI</con:value></con:property><con:property><con:name>departureDateTime_vuelta</con:name><con:value>2017-07-07T07:00:00.000</con:value></con:property><con:property><con:name>arrivalAirportIATA_vuelta</con:name><con:value>LGW</con:value></con:property><con:property><con:name>arrivalDateTime_vuelta</con:name><con:value>2017-07-07T08:30:00.000</con:value></con:property><con:property><con:name>flightNumber_vuelta</con:name><con:value>8622</con:value></con:property><con:property><con:name>currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>market</con:name><con:value>FR</con:value></con:property><con:property><con:name>hotelGIATACode</con:name><con:value>366633</con:value></con:property><con:property><con:name>hotelBedsCode</con:name><con:value>1533</con:value></con:property><con:property><con:name>boardCode</con:name><con:value>RO</con:value></con:property><con:property><con:name>lengthOfStay</con:name><con:value>2</con:value></con:property><con:property><con:name>userType</con:name><con:value>CUSTOMER</con:value></con:property><con:property><con:name>rowSeat</con:name><con:value>19</con:value></con:property><con:property><con:name>tariffClass</con:name><con:value>Regular0</con:value></con:property><con:property><con:name>language</con:name><con:value>it</con:value></con:property><con:property><con:name>promocode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">PROMORESORT</con:value></con:property><con:property><con:name>token</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJodW1wZXJkaW5jayIsInNjb3BlIjpbImRwc19pdF9hZG1pbiJdLCJwcm9maWxlIjp7ImFwcElkIjoiZWpoIiwiYXV0aG9yaXRpZXMiOlsiZHBzX2l0X2FkbWluIl0sImRpc3BsYXlOYW1lIjoiUHJpbmNpcGUgSHVtcGVyZGluY2siLCJlbWFpbCI6Imh1bXBlcmRpbmNrQG1vY2t1cC1ob3RlbGJlZHMuY29tIiwiZmlyc3ROYW1lIjoiUHJpbmNlIiwibGFzdE5hbWUiOiJIdW1wZXJkaW5jayIsIm90aGVycyI6eyJkaXZpc2lvbiI6Ik1vY2t1cHMiLCJsYXN0TG9naW4iOjE0OTMzNjE2OTIwODMsImNpdHkiOiJQYWxtYSBkZSBNYWxsb3JjYSIsImNvbXBhbnkiOiJIb3RlbGJlZHMiLCJkZXBhcnRtZW50IjoiVGVzdCIsInJlZ2lvbiI6IkJhbGVhcmVzIiwicmVtYWluaW5nTG9naW5zIjoyMTQ3NDgzNjQ3fSwicGhvdG8iOiJodHRwOi8vcHJpbmNlc3NicmlkZXF1b3Rlcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTEvMDcvaHVtcGVyZGluY2stOTZ4OTYuanBnIiwicHJvdmlkZXIiOiJoYmctY29ycG9yYXRlIiwidXNlck5hbWUiOiJodW1wZXJkaW5jayJ9LCJleHAiOjE0OTM0MDQ4OTIsImF1dGhvcml0aWVzIjpbXSwianRpIjoiZDJmNjcyNmEtYzI4OC00ZmMxLWJkZDgtNzRkYzBjNTQwOTNjIiwiY2xpZW50X2lkIjoiZWpoIn0.AOAlz5BfEh0piVaF8q6YL6WJsTBO61k_Hn1_hQvuPuMS3lM5OMLatLVd8K1sxjTE0hg3tQ21VAvtDFDYioizazk_gM17r0PgggyUp_iYLLsjRVBr_RwbSsLblCOYNd4TnKgfNbMeUFo_n6SoR9XoS1-po8e_uGoAIVALtWFeWRUOddeQy8ITN_5h0ELvagemSwGzMKQrv_HL8MY-eh8BjHWN06NyhgdlpiFNmLU6oSPHzrwSeTrRLt0sf-2P7xaHg9i65n55t8foLIylCsDCWS9qQihaBPoGkYCxkiF7EYwKshCcwscY8MZ_SssEDMD70Qfp57DrpN4Ct51VzQa1Iw</con:value></con:property><con:property><con:name>paymentType</con:name><con:value>3</con:value></con:property><con:property><con:name>depositType</con:name><con:value>DEPOSIT</con:value></con:property><con:property><con:name>typeOfPayment</con:name><con:value>DL</con:value></con:property><con:property><con:name>deposit</con:name><con:value>DEPOSIT</con:value></con:property><con:property><con:name>airline</con:name><con:value>EZY</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer><con:databaseConnection><con:name>hotelbeds</con:name><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://192.168.209.13:5432/hotelbeds?user=hotelbeds&amp;password=PASS_VALUE</con:connectionString><con:password>hotelbeds</con:password></con:databaseConnection></con:databaseConnectionContainer><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:loadUiTest name="LoadTest 1" id="9d557b87-b00b-4c8f-b190-873e3ede8d4a"><con:settings><con:setting id="soapUIObjectSourceId">2f78d0b4-5e20-426a-909a-97e8c504e1d9</con:setting><con:setting id="convertedFromLoadTestModelItemId">1282d824-9dc2-47cf-8ac5-231cecdd39dc</con:setting></con:settings><con1:loadui-project id="fb67a953-b42b-4e60-8f73-fcc2fdeee58c" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="8b88e333-b212-46da-b789-72df874d5c48" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="98b131f9-6705-4485-aebd-4a340b4a35fb" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="70c95ad1-03e9-4f7f-9f95-c5fb1b1f77a5" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Create preBooking:Create Prebooking" id="4b35d0de-c5c8-4106-9831-ee2d48e8887e" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">2f78d0b4-5e20-426a-909a-97e8c504e1d9</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="98b131f9-6705-4485-aebd-4a340b4a35fb/outgoingTerminal" inputTerminalId="70c95ad1-03e9-4f7f-9f95-c5fb1b1f77a5/stateTerminal"/><con1:connection outputTerminalId="70c95ad1-03e9-4f7f-9f95-c5fb1b1f77a5/triggerTerminal" inputTerminalId="4b35d0de-c5c8-4106-9831-ee2d48e8887e/triggerTerminal"/><con1:connection outputTerminalId="4b35d0de-c5c8-4106-9831-ee2d48e8887e/runningTerminal" inputTerminalId="70c95ad1-03e9-4f7f-9f95-c5fb1b1f77a5/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="fb67a953-b42b-4e60-8f73-fcc2fdeee58c" scenarioId="8b88e333-b212-46da-b789-72df874d5c48" name="New Scenario" id="a58c944e-510d-4184-a9f9-4ee7e90a2abe"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:loadUiTest name="LoadTest 1" id="414cfd63-6a38-41c8-9c5b-5f4b40e6c2ec"><con:settings><con:setting id="soapUIObjectSourceId">e5755a7a-eeef-4872-a8b1-dc68a01bb723</con:setting><con:setting id="convertedFromLoadTestModelItemId">b4472813-aff2-430e-9cc7-b20900fbd930</con:setting></con:settings><con1:loadui-project id="98cac127-585e-43cc-866f-660bc5ecdeb6" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="3407b8e5-37fa-4c4e-ae51-87e8a9c0051a" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="0784aa72-99e4-4b46-8bec-c31d45ff6968" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="f2f68861-98ef-4743-8334-c700c60b3d11" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Transfers:Get&amp;Transfer 117 ( 1 pax 1way  ) to BCN-transfer" id="ef4950a3-bfc7-46fd-b8cb-e0097210d1b0" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">e5755a7a-eeef-4872-a8b1-dc68a01bb723</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="0784aa72-99e4-4b46-8bec-c31d45ff6968/outgoingTerminal" inputTerminalId="f2f68861-98ef-4743-8334-c700c60b3d11/stateTerminal"/><con1:connection outputTerminalId="f2f68861-98ef-4743-8334-c700c60b3d11/triggerTerminal" inputTerminalId="ef4950a3-bfc7-46fd-b8cb-e0097210d1b0/triggerTerminal"/><con1:connection outputTerminalId="ef4950a3-bfc7-46fd-b8cb-e0097210d1b0/runningTerminal" inputTerminalId="f2f68861-98ef-4743-8334-c700c60b3d11/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="98cac127-585e-43cc-866f-660bc5ecdeb6" scenarioId="3407b8e5-37fa-4c4e-ae51-87e8a9c0051a" name="New Scenario" id="d0b7c956-fcad-4b16-9a1e-0a46b0b9add2"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:loadUiTest name="LoadTest 1" id="cbd51af0-2dd6-4881-9593-bc2c75146cce"><con:settings><con:setting id="soapUIObjectSourceId">2db04d44-f34c-49e8-82b1-e4103d83399f</con:setting><con:setting id="convertedFromLoadTestModelItemId">021b29da-b6fc-41c3-9e75-e14d0f7f703e</con:setting></con:settings><con1:loadui-project id="5f0a59fb-2a10-4f91-a280-2486b86c67ba" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="9d05f23d-5a5d-4289-8620-096ad520e7cf" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="d5e993f5-c51f-4872-8486-1ae132777f16" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="bbd8ac95-a0c7-4801-be97-605bc8ed2840" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Transfers:Get&amp;Transfer 100 ( 1pax 1way ) to LONDON" id="da06c1c2-85b6-40fa-9821-3de11a36fd94" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">2db04d44-f34c-49e8-82b1-e4103d83399f</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="d5e993f5-c51f-4872-8486-1ae132777f16/outgoingTerminal" inputTerminalId="bbd8ac95-a0c7-4801-be97-605bc8ed2840/stateTerminal"/><con1:connection outputTerminalId="bbd8ac95-a0c7-4801-be97-605bc8ed2840/triggerTerminal" inputTerminalId="da06c1c2-85b6-40fa-9821-3de11a36fd94/triggerTerminal"/><con1:connection outputTerminalId="da06c1c2-85b6-40fa-9821-3de11a36fd94/runningTerminal" inputTerminalId="bbd8ac95-a0c7-4801-be97-605bc8ed2840/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="5f0a59fb-2a10-4f91-a280-2486b86c67ba" scenarioId="9d05f23d-5a5d-4289-8620-096ad520e7cf" name="New Scenario" id="42062299-9f8f-4a99-8f07-8efa38a11953"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:loadUiTest name="LoadTest 1" id="3204279a-6024-42e7-b4f4-dabfe829a35d"><con:settings><con:setting id="soapUIObjectSourceId">0c662e22-4ee9-4135-b160-a301a74fed5b</con:setting><con:setting id="convertedFromLoadTestModelItemId">9c410506-9464-4582-af6b-698383984287</con:setting></con:settings><con1:loadui-project id="62e35446-9361-448c-8f87-93474c209587" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="e0d9daa2-2228-4a74-82eb-2918c474f046" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="28749005-54ac-4789-a4d7-92f5fbc62888" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="be05190c-7260-4925-83e8-9be414d1161e" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Transfers:Get&amp;Transfer 101 ( 1 pax return  )" id="21fde960-5aad-474e-a8e0-feee45e7327e" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">0c662e22-4ee9-4135-b160-a301a74fed5b</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="28749005-54ac-4789-a4d7-92f5fbc62888/outgoingTerminal" inputTerminalId="be05190c-7260-4925-83e8-9be414d1161e/stateTerminal"/><con1:connection outputTerminalId="be05190c-7260-4925-83e8-9be414d1161e/triggerTerminal" inputTerminalId="21fde960-5aad-474e-a8e0-feee45e7327e/triggerTerminal"/><con1:connection outputTerminalId="21fde960-5aad-474e-a8e0-feee45e7327e/runningTerminal" inputTerminalId="be05190c-7260-4925-83e8-9be414d1161e/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="62e35446-9361-448c-8f87-93474c209587" scenarioId="e0d9daa2-2228-4a74-82eb-2918c474f046" name="New Scenario" id="7052588a-603c-47c3-a0eb-02b436e973c7"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:loadUiTest name="LoadTest 1" id="74e7efab-4fdd-43a8-9e89-082cde244160"><con:settings><con:setting id="soapUIObjectSourceId">b7762eaa-c7fd-45c9-909f-144cd9ed19f4</con:setting><con:setting id="convertedFromLoadTestModelItemId">4d63e443-b87c-4f42-8051-192f4e0b9a55</con:setting></con:settings><con1:loadui-project id="f286c491-0414-4c9e-a682-bd7855d806c8" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="99a725b6-c873-4b73-848e-3f7e9cc8b903" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="080932fa-09e3-44ee-bb09-e2018a026dd6" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="a7ccbb0a-2336-4cd1-9e64-d34495041784" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Transfers:Get&amp;Transfer 104 ( 1 pax  + Infant 1 way )" id="67a6afd2-7bbc-40d9-8eab-0f29d3ae7180" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">b7762eaa-c7fd-45c9-909f-144cd9ed19f4</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="080932fa-09e3-44ee-bb09-e2018a026dd6/outgoingTerminal" inputTerminalId="a7ccbb0a-2336-4cd1-9e64-d34495041784/stateTerminal"/><con1:connection outputTerminalId="a7ccbb0a-2336-4cd1-9e64-d34495041784/triggerTerminal" inputTerminalId="67a6afd2-7bbc-40d9-8eab-0f29d3ae7180/triggerTerminal"/><con1:connection outputTerminalId="67a6afd2-7bbc-40d9-8eab-0f29d3ae7180/runningTerminal" inputTerminalId="a7ccbb0a-2336-4cd1-9e64-d34495041784/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="f286c491-0414-4c9e-a682-bd7855d806c8" scenarioId="99a725b6-c873-4b73-848e-3f7e9cc8b903" name="New Scenario" id="06de31b9-b633-477c-8cf2-d1e1886e0b40"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:loadUiTest name="LoadTest 1" id="b65b811e-4fc4-4594-ad5c-b4f86bf74520"><con:settings><con:setting id="soapUIObjectSourceId">1bdf35bd-830f-4e95-af50-e89cd7b40cbd</con:setting><con:setting id="convertedFromLoadTestModelItemId">0ad618e7-52e8-4ee5-aa5e-ca1afc184f6f</con:setting></con:settings><con1:loadui-project id="90900a7b-84d0-4e14-b999-026e8dcc142e" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:scene label="New Scenario" id="e92239d9-bdc7-4849-8047-4644af8aeacc" version="23"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=60;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="b1f3dd5d-2037-494f-b698-200add21ff77" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.RampSequenceVU" label="Ramp Sequence (VU) 1" id="1d8e8614-be3d-4ea7-8061-cadda4b807e4" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="baseVU" type="java.lang.Long">1</con1:property><con1:property propagates="true" key="peakVU" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampUpDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="rampDownDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="peakDuration" type="java.lang.Long">10</con1:property><con1:property propagates="true" key="waitTime" type="java.lang.Long">500</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp Sequence (VU)</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Transfers:Get&amp;Transfer 109  ( 4 pax 1 way  2 rooms)" id="ad17493d-8456-4386-98be-f8b463c5375d" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">1bdf35bd-830f-4e95-af50-e89cd7b40cbd</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="b1f3dd5d-2037-494f-b698-200add21ff77/outgoingTerminal" inputTerminalId="1d8e8614-be3d-4ea7-8061-cadda4b807e4/stateTerminal"/><con1:connection outputTerminalId="1d8e8614-be3d-4ea7-8061-cadda4b807e4/triggerTerminal" inputTerminalId="ad17493d-8456-4386-98be-f8b463c5375d/triggerTerminal"/><con1:connection outputTerminalId="ad17493d-8456-4386-98be-f8b463c5375d/runningTerminal" inputTerminalId="1d8e8614-be3d-4ea7-8061-cadda4b807e4/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"/></con1:statistics></con1:loadui-project><con:loadUITestScenario projectId="90900a7b-84d0-4e14-b999-026e8dcc142e" scenarioId="e92239d9-bdc7-4849-8047-4644af8aeacc" name="New Scenario" id="e8caaaf7-c9b1-44e6-a00f-023eb871f70e"><con:settings/></con:loadUITestScenario><con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:reportParameters/></con:loadUiTest><con:tags/></con:soapui-project>